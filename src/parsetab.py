
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTkOrleftTkAndrightTkNotnonassocTkEqualTkNEqualnonassocTkLessTkLeqTkGeqTkGreaterleftTkPlusTkMinusleftTkMultnonassocUNARYTkAnd TkArray TkArrow TkAsig TkBool TkCBlock TkCBracket TkClosePar TkComma TkConcat TkDeclare TkDo TkEqual TkFalse TkFi TkFor TkGeq TkGreater TkGuard TkId TkIf TkIn TkInt TkLeq TkLess TkMinus TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOd TkOpenPar TkOr TkPlus TkPrint TkRof TkSemicolon TkSkip TkSoForth TkString TkTo TkTrue TkTwoPoints\n    BLOCK : TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock\n    \n    SUBPROGRAM : LIST_INSTRUCTIONS\n    \n    DECLARE : TkDeclare LIST_DECLARE\n            | NO_DECLARE\n    \n    NO_DECLARE : \n    \n    LIST_DECLARE : VARIABLE_DECLARATION\n    \n    LIST_DECLARE : LIST_DECLARE TkSemicolon VARIABLE_DECLARATION\n    \n    VARIABLE_DECLARATION : TkId TkTwoPoints TYPE\n    \n    VARIABLE_DECLARATION : TkId TkComma VARIABLE_DECLARATION\n    \n    TYPE : TkInt \n         | TkBool \n         | ARRAY_DECLARATION\n    \n    ARRAY_DECLARATION : TkArray TkOBracket NUM TkSoForth NUM TkCBracket\n    \n    NUM : TkNum\n        | TkMinus TkNum\n    \n    LIST_INSTRUCTIONS : INSTRUCTION\n    \n    LIST_INSTRUCTIONS : LIST_INSTRUCTIONS TkSemicolon INSTRUCTION\n    \n    INSTRUCTION : ASIG\n                | PRINT\n                | FOR_LOOP\n                | DO_LOOP\n                | CONDITIONAL\n                | TkSkip\n                | BLOCK\n    \n    ASIG : TkId TkAsig EXPRESSION\n    \n    EXPRESSION : E\n               | ASIG_ARRAY\n    \n    ASIG_ARRAY : CREATE_ARRAY\n               | WRITE_ARRAY\n    \n    CREATE_ARRAY : E TkComma E\n    \n    CREATE_ARRAY : CREATE_ARRAY TkComma E\n    \n    WRITE_ARRAY : TkId TkOpenPar E TkTwoPoints E TkClosePar\n    \n    WRITE_ARRAY : WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar\n    \n    E : E TkMult E\n      | E TkPlus E\n      | E TkMinus E\n      | E TkOr E\n      | E TkAnd E\n      | E TkLess E\n      | E TkLeq E\n      | E TkGeq E\n      | E TkGreater E\n      | E TkEqual E\n      | E TkNEqual E\n    \n    E : TkOpenPar E TkClosePar\n    \n    E : TkNot E\n      | TkMinus E %prec UNARY\n    \n    E : TkNum\n      | TkId\n      | TkTrue\n      | TkFalse\n      | READ_ARRAY\n    \n    PRINT : TkPrint TOPRINT  \n    \n    TOPRINT : EXPRESSION_TO_PRINT   \n    \n    TOPRINT : TOPRINT TkConcat EXPRESSION_TO_PRINT   \n    \n    EXPRESSION_TO_PRINT : E\n               | STRING\n               | READ_ARRAY\n    \n    STRING : TkString\n    \n    READ_ARRAY : ARRAY TkOBracket E TkCBracket\n    \n    ARRAY : TkId\n          | WRITE_ARRAY\n    \n    FOR_LOOP : TkFor IT_VAR TkIn E TkTo E TkArrow SUBPROGRAM TkRof\n    \n    IT_VAR : TkId\n    \n    DO_LOOP : TkDo GUARD TkOd\n    \n    CONDITIONAL : TkIf GUARD TkFi\n    \n    GUARD : E TkArrow SUBPROGRAM\n    \n    GUARD : GUARD TkGuard E TkArrow SUBPROGRAM\n    '
    
_lr_action_items = {'TkOBlock':([0,2,3,5,20,21,24,78,80,81,82,83,84,86,116,128,131,],[2,-5,2,-4,-3,-6,2,2,-7,-8,-10,-11,-12,-9,2,2,-13,]),'$end':([1,23,],[0,-1,]),'TkDeclare':([2,],[4,]),'TkSkip':([2,3,5,20,21,24,78,80,81,82,83,84,86,116,128,131,],[-5,13,-4,-3,-6,13,13,-7,-8,-10,-11,-12,-9,13,13,-13,]),'TkId':([2,3,4,5,16,17,18,19,20,21,24,25,31,32,33,47,49,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,77,78,80,81,82,83,84,86,87,88,112,114,115,116,128,131,],[-5,15,22,-4,35,42,35,35,-3,-6,15,51,35,35,35,22,22,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,15,-7,-8,-10,-11,-12,-9,35,35,35,35,35,15,15,-13,]),'TkPrint':([2,3,5,20,21,24,78,80,81,82,83,84,86,116,128,131,],[-5,16,-4,-3,-6,16,16,-7,-8,-10,-11,-12,-9,16,16,-13,]),'TkFor':([2,3,5,20,21,24,78,80,81,82,83,84,86,116,128,131,],[-5,17,-4,-3,-6,17,17,-7,-8,-10,-11,-12,-9,17,17,-13,]),'TkDo':([2,3,5,20,21,24,78,80,81,82,83,84,86,116,128,131,],[-5,18,-4,-3,-6,18,18,-7,-8,-10,-11,-12,-9,18,18,-13,]),'TkIf':([2,3,5,20,21,24,78,80,81,82,83,84,86,116,128,131,],[-5,19,-4,-3,-6,19,19,-7,-8,-10,-11,-12,-9,19,19,-13,]),'TkCBlock':([6,7,8,9,10,11,12,13,14,23,26,27,28,29,30,34,35,36,37,38,45,50,51,52,53,54,55,56,69,71,76,79,89,90,91,92,93,94,95,96,97,98,99,100,101,110,111,113,126,127,132,],[23,-16,-18,-19,-20,-21,-22,-23,-24,-1,-53,-54,-56,-57,-52,-48,-49,-50,-51,-59,-52,-17,-49,-25,-26,-27,-28,-29,-47,-46,-65,-66,-55,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-31,-60,-32,-33,-63,]),'TkSemicolon':([6,7,8,9,10,11,12,13,14,20,21,23,26,27,28,29,30,34,35,36,37,38,45,50,51,52,53,54,55,56,69,71,76,79,80,81,82,83,84,86,89,90,91,92,93,94,95,96,97,98,99,100,101,108,110,111,113,126,127,131,132,],[24,-16,-18,-19,-20,-21,-22,-23,-24,47,-6,-1,-53,-54,-56,-57,-52,-48,-49,-50,-51,-59,-52,-17,-49,-25,-26,-27,-28,-29,-47,-46,-65,-66,-7,-8,-10,-11,-12,-9,-55,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,24,-30,-31,-60,-32,-33,-13,-63,]),'TkOd':([7,8,9,10,11,12,13,14,23,26,27,28,29,30,34,35,36,37,38,43,45,50,51,52,53,54,55,56,69,71,76,79,89,90,91,92,93,94,95,96,97,98,99,100,101,107,108,110,111,113,123,126,127,132,],[-16,-18,-19,-20,-21,-22,-23,-24,-1,-53,-54,-56,-57,-52,-48,-49,-50,-51,-59,76,-52,-17,-49,-25,-26,-27,-28,-29,-47,-46,-65,-66,-55,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-67,-2,-30,-31,-60,-68,-32,-33,-63,]),'TkGuard':([7,8,9,10,11,12,13,14,23,26,27,28,29,30,34,35,36,37,38,43,45,46,50,51,52,53,54,55,56,69,71,76,79,89,90,91,92,93,94,95,96,97,98,99,100,101,107,108,110,111,113,123,126,127,132,],[-16,-18,-19,-20,-21,-22,-23,-24,-1,-53,-54,-56,-57,-52,-48,-49,-50,-51,-59,77,-52,77,-17,-49,-25,-26,-27,-28,-29,-47,-46,-65,-66,-55,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-67,-2,-30,-31,-60,-68,-32,-33,-63,]),'TkFi':([7,8,9,10,11,12,13,14,23,26,27,28,29,30,34,35,36,37,38,45,46,50,51,52,53,54,55,56,69,71,76,79,89,90,91,92,93,94,95,96,97,98,99,100,101,107,108,110,111,113,123,126,127,132,],[-16,-18,-19,-20,-21,-22,-23,-24,-1,-53,-54,-56,-57,-52,-48,-49,-50,-51,-59,-52,79,-17,-49,-25,-26,-27,-28,-29,-47,-46,-65,-66,-55,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-67,-2,-30,-31,-60,-68,-32,-33,-63,]),'TkRof':([7,8,9,10,11,12,13,14,23,26,27,28,29,30,34,35,36,37,38,45,50,51,52,53,54,55,56,69,71,76,79,89,90,91,92,93,94,95,96,97,98,99,100,101,108,110,111,113,126,127,130,132,],[-16,-18,-19,-20,-21,-22,-23,-24,-1,-53,-54,-56,-57,-52,-48,-49,-50,-51,-59,-52,-17,-49,-25,-26,-27,-28,-29,-47,-46,-65,-66,-55,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-2,-30,-31,-60,-32,-33,132,-63,]),'TkAsig':([15,],[25,]),'TkOpenPar':([16,18,19,25,31,32,33,35,40,51,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,77,87,88,112,114,115,126,127,],[32,32,32,32,32,32,32,72,74,72,74,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-32,-33,]),'TkNot':([16,18,19,25,31,32,33,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,77,87,88,112,114,115,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'TkMinus':([16,18,19,25,28,30,31,32,33,34,35,36,37,44,45,51,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,113,114,115,120,121,122,124,],[31,31,31,31,60,-52,31,31,31,-48,-49,-50,-51,60,-52,-49,60,31,31,31,31,31,31,31,31,31,31,31,31,-47,60,60,31,31,31,31,31,31,31,-34,-35,-36,60,60,60,60,60,60,60,60,-45,60,60,60,60,60,119,60,60,31,-60,31,31,60,60,60,119,]),'TkNum':([16,18,19,25,31,32,33,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,77,87,88,109,112,114,115,119,124,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,118,34,34,34,125,118,]),'TkTrue':([16,18,19,25,31,32,33,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,77,87,88,112,114,115,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TkFalse':([16,18,19,25,31,32,33,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,77,87,88,112,114,115,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TkString':([16,57,],[38,38,]),'TkTwoPoints':([22,34,35,36,37,45,69,71,90,91,92,93,94,95,96,97,98,99,100,101,102,104,113,],[48,-48,-49,-50,-51,-52,-47,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,112,114,-60,]),'TkComma':([22,34,35,36,37,45,51,53,55,69,71,90,91,92,93,94,95,96,97,98,99,100,101,110,111,113,],[49,-48,-49,-50,-51,-52,-49,87,88,-47,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-31,-60,]),'TkConcat':([26,27,28,29,30,34,35,36,37,38,45,69,71,89,90,91,92,93,94,95,96,97,98,99,100,101,113,],[57,-54,-56,-57,-52,-48,-49,-50,-51,-59,-52,-47,-46,-55,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-60,]),'TkMult':([28,30,34,35,36,37,44,45,51,53,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,111,113,120,121,122,],[58,-52,-48,-49,-50,-51,58,-52,-49,58,-47,58,58,-34,58,58,58,58,58,58,58,58,58,58,-45,58,58,58,58,58,58,58,-60,58,58,58,]),'TkPlus':([28,30,34,35,36,37,44,45,51,53,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,111,113,120,121,122,],[59,-52,-48,-49,-50,-51,59,-52,-49,59,-47,59,59,-34,-35,-36,59,59,59,59,59,59,59,59,-45,59,59,59,59,59,59,59,-60,59,59,59,]),'TkOr':([28,30,34,35,36,37,44,45,51,53,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,111,113,120,121,122,],[61,-52,-48,-49,-50,-51,61,-52,-49,61,-47,61,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,61,61,61,61,61,61,61,-60,61,61,61,]),'TkAnd':([28,30,34,35,36,37,44,45,51,53,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,111,113,120,121,122,],[62,-52,-48,-49,-50,-51,62,-52,-49,62,-47,62,-46,-34,-35,-36,62,-38,-39,-40,-41,-42,-43,-44,-45,62,62,62,62,62,62,62,-60,62,62,62,]),'TkLess':([28,30,34,35,36,37,44,45,51,53,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,111,113,120,121,122,],[63,-52,-48,-49,-50,-51,63,-52,-49,63,-47,63,63,-34,-35,-36,63,63,None,None,None,None,63,63,-45,63,63,63,63,63,63,63,-60,63,63,63,]),'TkLeq':([28,30,34,35,36,37,44,45,51,53,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,111,113,120,121,122,],[64,-52,-48,-49,-50,-51,64,-52,-49,64,-47,64,64,-34,-35,-36,64,64,None,None,None,None,64,64,-45,64,64,64,64,64,64,64,-60,64,64,64,]),'TkGeq':([28,30,34,35,36,37,44,45,51,53,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,111,113,120,121,122,],[65,-52,-48,-49,-50,-51,65,-52,-49,65,-47,65,65,-34,-35,-36,65,65,None,None,None,None,65,65,-45,65,65,65,65,65,65,65,-60,65,65,65,]),'TkGreater':([28,30,34,35,36,37,44,45,51,53,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,111,113,120,121,122,],[66,-52,-48,-49,-50,-51,66,-52,-49,66,-47,66,66,-34,-35,-36,66,66,None,None,None,None,66,66,-45,66,66,66,66,66,66,66,-60,66,66,66,]),'TkEqual':([28,30,34,35,36,37,44,45,51,53,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,111,113,120,121,122,],[67,-52,-48,-49,-50,-51,67,-52,-49,67,-47,67,67,-34,-35,-36,67,67,-39,-40,-41,-42,None,None,-45,67,67,67,67,67,67,67,-60,67,67,67,]),'TkNEqual':([28,30,34,35,36,37,44,45,51,53,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,111,113,120,121,122,],[68,-52,-48,-49,-50,-51,68,-52,-49,68,-47,68,68,-34,-35,-36,68,68,-39,-40,-41,-42,None,None,-45,68,68,68,68,68,68,68,-60,68,68,68,]),'TkArrow':([34,35,36,37,44,45,69,71,90,91,92,93,94,95,96,97,98,99,100,101,106,113,122,],[-48,-49,-50,-51,78,-52,-47,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,116,-60,128,]),'TkClosePar':([34,35,36,37,45,69,70,71,90,91,92,93,94,95,96,97,98,99,100,101,113,120,121,],[-48,-49,-50,-51,-52,-47,101,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-60,126,127,]),'TkCBracket':([34,35,36,37,45,69,71,90,91,92,93,94,95,96,97,98,99,100,101,103,113,118,125,129,],[-48,-49,-50,-51,-52,-47,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,113,-60,-14,-15,131,]),'TkTo':([34,35,36,37,45,69,71,90,91,92,93,94,95,96,97,98,99,100,101,105,113,],[-48,-49,-50,-51,-52,-47,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,115,-60,]),'TkOBracket':([35,39,40,51,56,85,126,127,],[-61,73,-62,-61,-62,109,-32,-33,]),'TkIn':([41,42,],[75,-64,]),'TkInt':([48,],[82,]),'TkBool':([48,],[83,]),'TkArray':([48,],[85,]),'TkSoForth':([117,118,125,],[124,-14,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'BLOCK':([0,3,24,78,116,128,],[1,14,14,14,14,14,]),'DECLARE':([2,],[3,]),'NO_DECLARE':([2,],[5,]),'LIST_INSTRUCTIONS':([3,78,116,128,],[6,108,108,108,]),'INSTRUCTION':([3,24,78,116,128,],[7,50,7,7,7,]),'ASIG':([3,24,78,116,128,],[8,8,8,8,8,]),'PRINT':([3,24,78,116,128,],[9,9,9,9,9,]),'FOR_LOOP':([3,24,78,116,128,],[10,10,10,10,10,]),'DO_LOOP':([3,24,78,116,128,],[11,11,11,11,11,]),'CONDITIONAL':([3,24,78,116,128,],[12,12,12,12,12,]),'LIST_DECLARE':([4,],[20,]),'VARIABLE_DECLARATION':([4,47,49,],[21,80,86,]),'TOPRINT':([16,],[26,]),'EXPRESSION_TO_PRINT':([16,57,],[27,89,]),'E':([16,18,19,25,31,32,33,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,77,87,88,112,114,115,],[28,44,44,53,69,70,71,28,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,110,111,120,121,122,]),'STRING':([16,57,],[29,29,]),'READ_ARRAY':([16,18,19,25,31,32,33,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,77,87,88,112,114,115,],[30,45,45,45,45,45,45,30,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ARRAY':([16,18,19,25,31,32,33,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,77,87,88,112,114,115,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'WRITE_ARRAY':([16,18,19,25,31,32,33,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,77,87,88,112,114,115,],[40,40,40,56,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'IT_VAR':([17,],[41,]),'GUARD':([18,19,],[43,46,]),'EXPRESSION':([25,],[52,]),'ASIG_ARRAY':([25,],[54,]),'CREATE_ARRAY':([25,],[55,]),'TYPE':([48,],[81,]),'ARRAY_DECLARATION':([48,],[84,]),'SUBPROGRAM':([78,116,128,],[107,123,130,]),'NUM':([109,124,],[117,129,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> BLOCK","S'",1,None,None,None),
  ('BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock','BLOCK',4,'p_program','gcl.py',58),
  ('SUBPROGRAM -> LIST_INSTRUCTIONS','SUBPROGRAM',1,'p_subprogram','gcl.py',67),
  ('DECLARE -> TkDeclare LIST_DECLARE','DECLARE',2,'p_declare','gcl.py',74),
  ('DECLARE -> NO_DECLARE','DECLARE',1,'p_declare','gcl.py',75),
  ('NO_DECLARE -> <empty>','NO_DECLARE',0,'p_no_declare','gcl.py',89),
  ('LIST_DECLARE -> VARIABLE_DECLARATION','LIST_DECLARE',1,'p_list_declare_base','gcl.py',98),
  ('LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION','LIST_DECLARE',3,'p_list_declare','gcl.py',105),
  ('VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE','VARIABLE_DECLARATION',3,'p_list_variables_declare_base','gcl.py',114),
  ('VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION','VARIABLE_DECLARATION',3,'p_list_variables_declare','gcl.py',129),
  ('TYPE -> TkInt','TYPE',1,'p_type_varible_declare','gcl.py',143),
  ('TYPE -> TkBool','TYPE',1,'p_type_varible_declare','gcl.py',144),
  ('TYPE -> ARRAY_DECLARATION','TYPE',1,'p_type_varible_declare','gcl.py',145),
  ('ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket','ARRAY_DECLARATION',6,'p_array_declaration','gcl.py',152),
  ('NUM -> TkNum','NUM',1,'p_num_integer','gcl.py',159),
  ('NUM -> TkMinus TkNum','NUM',2,'p_num_integer','gcl.py',160),
  ('LIST_INSTRUCTIONS -> INSTRUCTION','LIST_INSTRUCTIONS',1,'p_intruccions_list_base','gcl.py',170),
  ('LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION','LIST_INSTRUCTIONS',3,'p_intruccions_list','gcl.py',177),
  ('INSTRUCTION -> ASIG','INSTRUCTION',1,'p_instruccion','gcl.py',184),
  ('INSTRUCTION -> PRINT','INSTRUCTION',1,'p_instruccion','gcl.py',185),
  ('INSTRUCTION -> FOR_LOOP','INSTRUCTION',1,'p_instruccion','gcl.py',186),
  ('INSTRUCTION -> DO_LOOP','INSTRUCTION',1,'p_instruccion','gcl.py',187),
  ('INSTRUCTION -> CONDITIONAL','INSTRUCTION',1,'p_instruccion','gcl.py',188),
  ('INSTRUCTION -> TkSkip','INSTRUCTION',1,'p_instruccion','gcl.py',189),
  ('INSTRUCTION -> BLOCK','INSTRUCTION',1,'p_instruccion','gcl.py',190),
  ('ASIG -> TkId TkAsig EXPRESSION','ASIG',3,'p_asig','gcl.py',200),
  ('EXPRESSION -> E','EXPRESSION',1,'p_asig_expresion','gcl.py',230),
  ('EXPRESSION -> ASIG_ARRAY','EXPRESSION',1,'p_asig_expresion','gcl.py',231),
  ('ASIG_ARRAY -> CREATE_ARRAY','ASIG_ARRAY',1,'p_asig_array','gcl.py',240),
  ('ASIG_ARRAY -> WRITE_ARRAY','ASIG_ARRAY',1,'p_asig_array','gcl.py',241),
  ('CREATE_ARRAY -> E TkComma E','CREATE_ARRAY',3,'p_create_array_base','gcl.py',250),
  ('CREATE_ARRAY -> CREATE_ARRAY TkComma E','CREATE_ARRAY',3,'p_create_array','gcl.py',265),
  ('WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar','WRITE_ARRAY',6,'p_write_array_base','gcl.py',279),
  ('WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar','WRITE_ARRAY',6,'p_write_array','gcl.py',287),
  ('E -> E TkMult E','E',3,'p_expression_op_binary','gcl.py',294),
  ('E -> E TkPlus E','E',3,'p_expression_op_binary','gcl.py',295),
  ('E -> E TkMinus E','E',3,'p_expression_op_binary','gcl.py',296),
  ('E -> E TkOr E','E',3,'p_expression_op_binary','gcl.py',297),
  ('E -> E TkAnd E','E',3,'p_expression_op_binary','gcl.py',298),
  ('E -> E TkLess E','E',3,'p_expression_op_binary','gcl.py',299),
  ('E -> E TkLeq E','E',3,'p_expression_op_binary','gcl.py',300),
  ('E -> E TkGeq E','E',3,'p_expression_op_binary','gcl.py',301),
  ('E -> E TkGreater E','E',3,'p_expression_op_binary','gcl.py',302),
  ('E -> E TkEqual E','E',3,'p_expression_op_binary','gcl.py',303),
  ('E -> E TkNEqual E','E',3,'p_expression_op_binary','gcl.py',304),
  ('E -> TkOpenPar E TkClosePar','E',3,'p_expression_par','gcl.py',346),
  ('E -> TkNot E','E',2,'p_expression_op_unary','gcl.py',353),
  ('E -> TkMinus E','E',2,'p_expression_op_unary','gcl.py',354),
  ('E -> TkNum','E',1,'p_expression_base','gcl.py',366),
  ('E -> TkId','E',1,'p_expression_base','gcl.py',367),
  ('E -> TkTrue','E',1,'p_expression_base','gcl.py',368),
  ('E -> TkFalse','E',1,'p_expression_base','gcl.py',369),
  ('E -> READ_ARRAY','E',1,'p_expression_base','gcl.py',370),
  ('PRINT -> TkPrint TOPRINT','PRINT',2,'p_print','gcl.py',401),
  ('TOPRINT -> EXPRESSION_TO_PRINT','TOPRINT',1,'p_to_print_base','gcl.py',409),
  ('TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT','TOPRINT',3,'p_to_print','gcl.py',416),
  ('EXPRESSION_TO_PRINT -> E','EXPRESSION_TO_PRINT',1,'p_expression_print','gcl.py',423),
  ('EXPRESSION_TO_PRINT -> STRING','EXPRESSION_TO_PRINT',1,'p_expression_print','gcl.py',424),
  ('EXPRESSION_TO_PRINT -> READ_ARRAY','EXPRESSION_TO_PRINT',1,'p_expression_print','gcl.py',425),
  ('STRING -> TkString','STRING',1,'p_string','gcl.py',447),
  ('READ_ARRAY -> ARRAY TkOBracket E TkCBracket','READ_ARRAY',4,'p_array_index','gcl.py',454),
  ('ARRAY -> TkId','ARRAY',1,'p_array_index_id_or_read','gcl.py',471),
  ('ARRAY -> WRITE_ARRAY','ARRAY',1,'p_array_index_id_or_read','gcl.py',472),
  ('FOR_LOOP -> TkFor IT_VAR TkIn E TkTo E TkArrow SUBPROGRAM TkRof','FOR_LOOP',9,'p_for_loop','gcl.py',482),
  ('IT_VAR -> TkId','IT_VAR',1,'p_iteration_var','gcl.py',492),
  ('DO_LOOP -> TkDo GUARD TkOd','DO_LOOP',3,'p_do_loop','gcl.py',504),
  ('CONDITIONAL -> TkIf GUARD TkFi','CONDITIONAL',3,'p_if_conditional','gcl.py',512),
  ('GUARD -> E TkArrow SUBPROGRAM','GUARD',3,'p_guard_base','gcl.py',520),
  ('GUARD -> GUARD TkGuard E TkArrow SUBPROGRAM','GUARD',5,'p_guard','gcl.py',527),
]
