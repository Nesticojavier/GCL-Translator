
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'SLR'

_lr_signature = 'leftTkOrleftTkAndrightTkNotleftTkEqualTkNEqualleftTkLessTkLeqTkGeqTkGreaterleftTkPlusTkMinusrightTkMultrightUNARYTkAnd TkArray TkArrow TkAsig TkBool TkCBlock TkCBracket TkClosePar TkComma TkConcat TkDeclare TkDo TkEqual TkFalse TkFi TkFor TkGeq TkGreater TkGuard TkId TkIf TkIn TkInt TkLeq TkLess TkMinus TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOd TkOpenPar TkOr TkPlus TkPrint TkRof TkSemicolon TkSkip TkSoForth TkString TkTo TkTrue TkTwoPoints\n    BLOCK : TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock\n    \n    SUBPROGRAM : BLOCK\n               | LIST_INSTRUCTIONS\n    \n    DECLARE : TkDeclare LIST_DECLARE\n            | \n    \n    LIST_DECLARE : VARIABLE_DECLARATION\n    \n    LIST_DECLARE : LIST_DECLARE TkSemicolon VARIABLE_DECLARATION\n    \n    VARIABLE_DECLARATION : TkId TkTwoPoints TYPE\n    \n    VARIABLE_DECLARATION : TkId TkComma VARIABLE_DECLARATION\n    \n    TYPE : TkInt \n         | TkBool \n         | ARRAY_DECLARATION\n    \n    ARRAY_DECLARATION : TkArray TkOBracket NUM TkSoForth NUM TkCBracket\n    \n    NUM : TkNum\n        | TkMinus TkNum\n    \n    LIST_INSTRUCTIONS : INSTRUCTION\n    \n    LIST_INSTRUCTIONS : LIST_INSTRUCTIONS TkSemicolon INSTRUCTION\n    \n    INSTRUCTION : ASIG\n                | PRINT\n                | FOR_LOOP\n                | DO_LOOP\n                | CONDITIONAL\n                | TkSkip\n    \n    ASIG : TkId TkAsig EXPRESSION\n    \n    EXPRESSION : E\n               | ASIG_ARRAY\n    \n    ASIG_ARRAY : CREATE_ARRAY\n               | WRITE_ARRAY\n    \n    CREATE_ARRAY : E TkComma E\n    \n    CREATE_ARRAY : CREATE_ARRAY TkComma E\n    \n    WRITE_ARRAY : TkId TkOpenPar E TkTwoPoints E TkClosePar\n    \n    WRITE_ARRAY : WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar\n    \n    E : E TkMult E\n      | E TkPlus E\n      | E TkMinus E\n      | E TkOr E\n      | E TkAnd E\n      | E TkLess E\n      | E TkLeq E\n      | E TkGeq E\n      | E TkGreater E\n      | E TkEqual E\n      | E TkNEqual E\n    \n    E : TkOpenPar E TkClosePar\n    \n    E : TkNot E %prec UNARY\n      | TkMinus E %prec UNARY\n    \n    E : TkNum\n      | TkId\n      | TkTrue\n      | TkFalse\n      | READ_ARRAY\n    \n    PRINT : TkPrint TOPRINT  \n    \n    TOPRINT : EXPRESSION_TO_PRINT   \n    \n    TOPRINT : TOPRINT TkConcat EXPRESSION_TO_PRINT   \n    \n    EXPRESSION_TO_PRINT : TkId\n               | STRING\n               | TkNum\n               | TkTrue\n               | TkFalse\n               | READ_ARRAY\n    \n    STRING : TkString\n    \n    READ_ARRAY : ARRAY TkOBracket E TkCBracket\n    \n    ARRAY : TkId\n          | WRITE_ARRAY\n    \n    FOR_LOOP : TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof\n    \n    DO_LOOP : TkDo GUARD TkOd\n    \n    CONDITIONAL : TkIf GUARD TkFi\n    \n    GUARD : E TkArrow SUBPROGRAM\n    \n    GUARD : GUARD TkGuard E TkArrow SUBPROGRAM\n    '
    
_lr_action_items = {'TkOBlock':([0,64,117,129,],[2,2,2,2,]),'$end':([1,21,],[0,-1,]),'TkDeclare':([2,],[4,]),'TkSkip':([2,3,18,19,22,64,80,81,82,83,84,86,117,129,132,],[-5,12,-4,-6,12,12,-7,-8,-10,-11,-12,-9,12,12,-13,]),'TkId':([2,3,4,14,15,16,17,18,19,22,23,38,39,40,47,49,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,80,81,82,83,84,86,87,88,113,115,116,117,129,132,],[-5,13,20,26,35,42,42,-4,-6,13,51,42,42,42,20,20,26,42,42,42,42,42,13,42,42,42,42,42,42,42,42,42,42,42,-7,-8,-10,-11,-12,-9,42,42,42,42,42,13,13,-13,]),'TkPrint':([2,3,18,19,22,64,80,81,82,83,84,86,117,129,132,],[-5,14,-4,-6,14,14,-7,-8,-10,-11,-12,-9,14,14,-13,]),'TkFor':([2,3,18,19,22,64,80,81,82,83,84,86,117,129,132,],[-5,15,-4,-6,15,15,-7,-8,-10,-11,-12,-9,15,15,-13,]),'TkDo':([2,3,18,19,22,64,80,81,82,83,84,86,117,129,132,],[-5,16,-4,-6,16,16,-7,-8,-10,-11,-12,-9,16,16,-13,]),'TkIf':([2,3,18,19,22,64,80,81,82,83,84,86,117,129,132,],[-5,17,-4,-6,17,17,-7,-8,-10,-11,-12,-9,17,17,-13,]),'TkCBlock':([5,6,7,8,9,10,11,12,24,25,26,27,28,29,30,31,32,41,42,43,44,45,50,51,52,53,54,55,56,62,76,78,79,89,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,127,128,133,],[21,-16,-18,-19,-20,-21,-22,-23,-52,-53,-55,-56,-57,-58,-59,-60,-61,-47,-48,-49,-50,-51,-17,-48,-24,-25,-26,-27,-28,-66,-46,-45,-67,-54,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-29,-30,-62,-31,-32,-65,]),'TkSemicolon':([5,6,7,8,9,10,11,12,18,19,24,25,26,27,28,29,30,31,32,41,42,43,44,45,50,51,52,53,54,55,56,62,76,78,79,80,81,82,83,84,86,89,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,127,128,132,133,],[22,-16,-18,-19,-20,-21,-22,-23,47,-6,-52,-53,-55,-56,-57,-58,-59,-60,-61,-47,-48,-49,-50,-51,-17,-48,-24,-25,-26,-27,-28,-66,-46,-45,-67,-7,-8,-10,-11,-12,-9,-54,22,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-29,-30,-62,-31,-32,-13,-65,]),'TkRof':([6,7,8,9,10,11,12,21,24,25,26,27,28,29,30,31,32,41,42,43,44,45,50,51,52,53,54,55,56,62,76,78,79,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,127,128,131,133,],[-16,-18,-19,-20,-21,-22,-23,-1,-52,-53,-55,-56,-57,-58,-59,-60,-61,-47,-48,-49,-50,-51,-17,-48,-24,-25,-26,-27,-28,-66,-46,-45,-67,-54,-2,-3,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-29,-30,-62,-31,-32,133,-65,]),'TkOd':([6,7,8,9,10,11,12,21,24,25,26,27,28,29,30,31,32,36,41,42,43,44,45,50,51,52,53,54,55,56,62,76,78,79,89,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,124,127,128,133,],[-16,-18,-19,-20,-21,-22,-23,-1,-52,-53,-55,-56,-57,-58,-59,-60,-61,62,-47,-48,-49,-50,-51,-17,-48,-24,-25,-26,-27,-28,-66,-46,-45,-67,-54,-68,-2,-3,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-29,-30,-62,-69,-31,-32,-65,]),'TkFi':([6,7,8,9,10,11,12,21,24,25,26,27,28,29,30,31,32,41,42,43,44,45,46,50,51,52,53,54,55,56,62,76,78,79,89,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,124,127,128,133,],[-16,-18,-19,-20,-21,-22,-23,-1,-52,-53,-55,-56,-57,-58,-59,-60,-61,-47,-48,-49,-50,-51,79,-17,-48,-24,-25,-26,-27,-28,-66,-46,-45,-67,-54,-68,-2,-3,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-29,-30,-62,-69,-31,-32,-65,]),'TkGuard':([6,7,8,9,10,11,12,21,24,25,26,27,28,29,30,31,32,36,41,42,43,44,45,46,50,51,52,53,54,55,56,62,76,78,79,89,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,124,127,128,133,],[-16,-18,-19,-20,-21,-22,-23,-1,-52,-53,-55,-56,-57,-58,-59,-60,-61,63,-47,-48,-49,-50,-51,63,-17,-48,-24,-25,-26,-27,-28,-66,-46,-45,-67,-54,-68,-2,-3,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-29,-30,-62,-69,-31,-32,-65,]),'TkAsig':([13,],[23,]),'TkNum':([14,16,17,23,38,39,40,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,87,88,110,113,115,116,120,125,],[28,41,41,41,41,41,41,28,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,119,41,41,41,126,119,]),'TkTrue':([14,16,17,23,38,39,40,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,87,88,113,115,116,],[29,43,43,43,43,43,43,29,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TkFalse':([14,16,17,23,38,39,40,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,87,88,113,115,116,],[30,44,44,44,44,44,44,30,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'TkString':([14,57,],[32,32,]),'TkOpenPar':([16,17,23,26,34,38,39,40,42,51,56,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,87,88,113,115,116,127,128,],[39,39,39,58,60,39,39,39,58,58,60,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-31,-32,]),'TkNot':([16,17,23,38,39,40,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,87,88,113,115,116,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'TkMinus':([16,17,23,37,38,39,40,41,42,43,44,45,51,53,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,87,88,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,122,123,125,],[38,38,38,67,38,38,38,-47,-48,-49,-50,-51,-48,67,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-46,67,-45,38,38,67,67,67,67,67,-33,-34,-35,67,67,67,67,67,67,67,67,-44,120,67,67,38,-62,38,38,67,67,67,120,]),'TkTwoPoints':([20,41,42,43,44,45,51,76,78,90,92,98,99,100,101,102,103,104,105,106,107,108,109,114,],[48,-47,-48,-49,-50,-51,-48,-46,-45,113,115,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-62,]),'TkComma':([20,41,42,43,44,45,51,53,55,76,78,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,],[49,-47,-48,-49,-50,-51,-48,87,88,-46,-45,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-29,-30,-62,]),'TkConcat':([24,25,26,27,28,29,30,31,32,89,114,],[57,-53,-55,-56,-57,-58,-59,-60,-61,-54,-62,]),'TkOBracket':([26,33,34,42,51,56,85,127,128,],[-63,59,-64,-63,-63,-64,110,-31,-32,]),'TkIn':([35,],[61,]),'TkArrow':([37,41,42,43,44,45,51,76,78,94,98,99,100,101,102,103,104,105,106,107,108,109,114,123,],[64,-47,-48,-49,-50,-51,-48,-46,-45,117,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-62,129,]),'TkMult':([37,41,42,43,44,45,51,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,121,122,123,],[65,-47,-48,-49,-50,-51,-48,65,-46,65,-45,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-44,65,65,-62,65,65,65,]),'TkPlus':([37,41,42,43,44,45,51,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,121,122,123,],[66,-47,-48,-49,-50,-51,-48,66,-46,66,-45,66,66,66,66,66,-33,-34,-35,66,66,66,66,66,66,66,66,-44,66,66,-62,66,66,66,]),'TkOr':([37,41,42,43,44,45,51,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,121,122,123,],[68,-47,-48,-49,-50,-51,-48,68,-46,68,-45,68,68,68,68,68,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,68,68,-62,68,68,68,]),'TkAnd':([37,41,42,43,44,45,51,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,121,122,123,],[69,-47,-48,-49,-50,-51,-48,69,-46,69,-45,69,69,69,69,69,-33,-34,-35,69,-37,-38,-39,-40,-41,-42,-43,-44,69,69,-62,69,69,69,]),'TkLess':([37,41,42,43,44,45,51,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,121,122,123,],[70,-47,-48,-49,-50,-51,-48,70,-46,70,-45,70,70,70,70,70,-33,-34,-35,70,70,-38,-39,-40,-41,70,70,-44,70,70,-62,70,70,70,]),'TkLeq':([37,41,42,43,44,45,51,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,121,122,123,],[71,-47,-48,-49,-50,-51,-48,71,-46,71,-45,71,71,71,71,71,-33,-34,-35,71,71,-38,-39,-40,-41,71,71,-44,71,71,-62,71,71,71,]),'TkGeq':([37,41,42,43,44,45,51,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,121,122,123,],[72,-47,-48,-49,-50,-51,-48,72,-46,72,-45,72,72,72,72,72,-33,-34,-35,72,72,-38,-39,-40,-41,72,72,-44,72,72,-62,72,72,72,]),'TkGreater':([37,41,42,43,44,45,51,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,121,122,123,],[73,-47,-48,-49,-50,-51,-48,73,-46,73,-45,73,73,73,73,73,-33,-34,-35,73,73,-38,-39,-40,-41,73,73,-44,73,73,-62,73,73,73,]),'TkEqual':([37,41,42,43,44,45,51,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,121,122,123,],[74,-47,-48,-49,-50,-51,-48,74,-46,74,-45,74,74,74,74,74,-33,-34,-35,74,74,-38,-39,-40,-41,-42,-43,-44,74,74,-62,74,74,74,]),'TkNEqual':([37,41,42,43,44,45,51,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,121,122,123,],[75,-47,-48,-49,-50,-51,-48,75,-46,75,-45,75,75,75,75,75,-33,-34,-35,75,75,-38,-39,-40,-41,-42,-43,-44,75,75,-62,75,75,75,]),'TkClosePar':([41,42,43,44,45,51,76,77,78,98,99,100,101,102,103,104,105,106,107,108,109,114,121,122,],[-47,-48,-49,-50,-51,-48,-46,109,-45,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-62,127,128,]),'TkCBracket':([41,42,43,44,45,51,76,78,91,98,99,100,101,102,103,104,105,106,107,108,109,114,119,126,130,],[-47,-48,-49,-50,-51,-48,-46,-45,114,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-62,-14,-15,132,]),'TkTo':([41,42,43,44,45,51,76,78,93,98,99,100,101,102,103,104,105,106,107,108,109,114,],[-47,-48,-49,-50,-51,-48,-46,-45,116,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-62,]),'TkInt':([48,],[82,]),'TkBool':([48,],[83,]),'TkArray':([48,],[85,]),'TkSoForth':([118,119,126,],[125,-14,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'BLOCK':([0,64,117,129,],[1,96,96,96,]),'DECLARE':([2,],[3,]),'LIST_INSTRUCTIONS':([3,64,117,129,],[5,97,97,97,]),'INSTRUCTION':([3,22,64,117,129,],[6,50,6,6,6,]),'ASIG':([3,22,64,117,129,],[7,7,7,7,7,]),'PRINT':([3,22,64,117,129,],[8,8,8,8,8,]),'FOR_LOOP':([3,22,64,117,129,],[9,9,9,9,9,]),'DO_LOOP':([3,22,64,117,129,],[10,10,10,10,10,]),'CONDITIONAL':([3,22,64,117,129,],[11,11,11,11,11,]),'LIST_DECLARE':([4,],[18,]),'VARIABLE_DECLARATION':([4,47,49,],[19,80,86,]),'TOPRINT':([14,],[24,]),'EXPRESSION_TO_PRINT':([14,57,],[25,89,]),'STRING':([14,57,],[27,27,]),'READ_ARRAY':([14,16,17,23,38,39,40,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,87,88,113,115,116,],[31,45,45,45,45,45,45,31,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ARRAY':([14,16,17,23,38,39,40,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,87,88,113,115,116,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'WRITE_ARRAY':([14,16,17,23,38,39,40,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,87,88,113,115,116,],[34,34,34,56,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'GUARD':([16,17,],[36,46,]),'E':([16,17,23,38,39,40,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,87,88,113,115,116,],[37,37,53,76,77,78,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,111,112,121,122,123,]),'EXPRESSION':([23,],[52,]),'ASIG_ARRAY':([23,],[54,]),'CREATE_ARRAY':([23,],[55,]),'TYPE':([48,],[81,]),'ARRAY_DECLARATION':([48,],[84,]),'SUBPROGRAM':([64,117,129,],[95,124,131,]),'NUM':([110,125,],[118,130,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> BLOCK","S'",1,None,None,None),
  ('BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock','BLOCK',4,'p_program','yacc.py',40),
  ('SUBPROGRAM -> BLOCK','SUBPROGRAM',1,'p_subprogram','yacc.py',49),
  ('SUBPROGRAM -> LIST_INSTRUCTIONS','SUBPROGRAM',1,'p_subprogram','yacc.py',50),
  ('DECLARE -> TkDeclare LIST_DECLARE','DECLARE',2,'p_declare','yacc.py',56),
  ('DECLARE -> <empty>','DECLARE',0,'p_declare','yacc.py',57),
  ('LIST_DECLARE -> VARIABLE_DECLARATION','LIST_DECLARE',1,'p_list_declare_base','yacc.py',66),
  ('LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION','LIST_DECLARE',3,'p_list_declare','yacc.py',72),
  ('VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE','VARIABLE_DECLARATION',3,'p_list_variables_declare_base','yacc.py',79),
  ('VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION','VARIABLE_DECLARATION',3,'p_list_variables_declare','yacc.py',85),
  ('TYPE -> TkInt','TYPE',1,'p_type_varible_declare','yacc.py',91),
  ('TYPE -> TkBool','TYPE',1,'p_type_varible_declare','yacc.py',92),
  ('TYPE -> ARRAY_DECLARATION','TYPE',1,'p_type_varible_declare','yacc.py',93),
  ('ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket','ARRAY_DECLARATION',6,'p_array_declaration','yacc.py',99),
  ('NUM -> TkNum','NUM',1,'p_num_integer','yacc.py',105),
  ('NUM -> TkMinus TkNum','NUM',2,'p_num_integer','yacc.py',106),
  ('LIST_INSTRUCTIONS -> INSTRUCTION','LIST_INSTRUCTIONS',1,'p_intruccions_list_base','yacc.py',116),
  ('LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION','LIST_INSTRUCTIONS',3,'p_intruccions_list','yacc.py',122),
  ('INSTRUCTION -> ASIG','INSTRUCTION',1,'p_instruccion','yacc.py',128),
  ('INSTRUCTION -> PRINT','INSTRUCTION',1,'p_instruccion','yacc.py',129),
  ('INSTRUCTION -> FOR_LOOP','INSTRUCTION',1,'p_instruccion','yacc.py',130),
  ('INSTRUCTION -> DO_LOOP','INSTRUCTION',1,'p_instruccion','yacc.py',131),
  ('INSTRUCTION -> CONDITIONAL','INSTRUCTION',1,'p_instruccion','yacc.py',132),
  ('INSTRUCTION -> TkSkip','INSTRUCTION',1,'p_instruccion','yacc.py',133),
  ('ASIG -> TkId TkAsig EXPRESSION','ASIG',3,'p_asig','yacc.py',143),
  ('EXPRESSION -> E','EXPRESSION',1,'p_asig_expresion','yacc.py',149),
  ('EXPRESSION -> ASIG_ARRAY','EXPRESSION',1,'p_asig_expresion','yacc.py',150),
  ('ASIG_ARRAY -> CREATE_ARRAY','ASIG_ARRAY',1,'p_asig_array','yacc.py',156),
  ('ASIG_ARRAY -> WRITE_ARRAY','ASIG_ARRAY',1,'p_asig_array','yacc.py',157),
  ('CREATE_ARRAY -> E TkComma E','CREATE_ARRAY',3,'p_create_array','yacc.py',163),
  ('CREATE_ARRAY -> CREATE_ARRAY TkComma E','CREATE_ARRAY',3,'p_create_array_base','yacc.py',169),
  ('WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar','WRITE_ARRAY',6,'p_write_array_base','yacc.py',175),
  ('WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar','WRITE_ARRAY',6,'p_write_array','yacc.py',182),
  ('E -> E TkMult E','E',3,'p_expression_op_binary','yacc.py',189),
  ('E -> E TkPlus E','E',3,'p_expression_op_binary','yacc.py',190),
  ('E -> E TkMinus E','E',3,'p_expression_op_binary','yacc.py',191),
  ('E -> E TkOr E','E',3,'p_expression_op_binary','yacc.py',192),
  ('E -> E TkAnd E','E',3,'p_expression_op_binary','yacc.py',193),
  ('E -> E TkLess E','E',3,'p_expression_op_binary','yacc.py',194),
  ('E -> E TkLeq E','E',3,'p_expression_op_binary','yacc.py',195),
  ('E -> E TkGeq E','E',3,'p_expression_op_binary','yacc.py',196),
  ('E -> E TkGreater E','E',3,'p_expression_op_binary','yacc.py',197),
  ('E -> E TkEqual E','E',3,'p_expression_op_binary','yacc.py',198),
  ('E -> E TkNEqual E','E',3,'p_expression_op_binary','yacc.py',199),
  ('E -> TkOpenPar E TkClosePar','E',3,'p_expression_par','yacc.py',205),
  ('E -> TkNot E','E',2,'p_expression_op_unary','yacc.py',211),
  ('E -> TkMinus E','E',2,'p_expression_op_unary','yacc.py',212),
  ('E -> TkNum','E',1,'p_expression_base','yacc.py',224),
  ('E -> TkId','E',1,'p_expression_base','yacc.py',225),
  ('E -> TkTrue','E',1,'p_expression_base','yacc.py',226),
  ('E -> TkFalse','E',1,'p_expression_base','yacc.py',227),
  ('E -> READ_ARRAY','E',1,'p_expression_base','yacc.py',228),
  ('PRINT -> TkPrint TOPRINT','PRINT',2,'p_print','yacc.py',242),
  ('TOPRINT -> EXPRESSION_TO_PRINT','TOPRINT',1,'p_to_print_base','yacc.py',248),
  ('TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT','TOPRINT',3,'p_to_print','yacc.py',254),
  ('EXPRESSION_TO_PRINT -> TkId','EXPRESSION_TO_PRINT',1,'p_expression_print','yacc.py',260),
  ('EXPRESSION_TO_PRINT -> STRING','EXPRESSION_TO_PRINT',1,'p_expression_print','yacc.py',261),
  ('EXPRESSION_TO_PRINT -> TkNum','EXPRESSION_TO_PRINT',1,'p_expression_print','yacc.py',262),
  ('EXPRESSION_TO_PRINT -> TkTrue','EXPRESSION_TO_PRINT',1,'p_expression_print','yacc.py',263),
  ('EXPRESSION_TO_PRINT -> TkFalse','EXPRESSION_TO_PRINT',1,'p_expression_print','yacc.py',264),
  ('EXPRESSION_TO_PRINT -> READ_ARRAY','EXPRESSION_TO_PRINT',1,'p_expression_print','yacc.py',265),
  ('STRING -> TkString','STRING',1,'p_string','yacc.py',278),
  ('READ_ARRAY -> ARRAY TkOBracket E TkCBracket','READ_ARRAY',4,'p_array_index','yacc.py',284),
  ('ARRAY -> TkId','ARRAY',1,'p_array_index_id_or_read','yacc.py',290),
  ('ARRAY -> WRITE_ARRAY','ARRAY',1,'p_array_index_id_or_read','yacc.py',291),
  ('FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof','FOR_LOOP',9,'p_for_loop','yacc.py',301),
  ('DO_LOOP -> TkDo GUARD TkOd','DO_LOOP',3,'p_do_loop','yacc.py',308),
  ('CONDITIONAL -> TkIf GUARD TkFi','CONDITIONAL',3,'p_if_conditional','yacc.py',315),
  ('GUARD -> E TkArrow SUBPROGRAM','GUARD',3,'p_guard_base','yacc.py',321),
  ('GUARD -> GUARD TkGuard E TkArrow SUBPROGRAM','GUARD',5,'p_guard','yacc.py',327),
]
