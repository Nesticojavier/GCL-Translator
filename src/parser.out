Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BLOCK
Rule 1     BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock
Rule 2     SUBPROGRAM -> BLOCK
Rule 3     SUBPROGRAM -> LIST_INSTRUCTIONS
Rule 4     DECLARE -> TkDeclare LIST_DECLARE
Rule 5     DECLARE -> <empty>
Rule 6     LIST_DECLARE -> VARIABLE_DECLARATION
Rule 7     LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION
Rule 8     VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE
Rule 9     VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION
Rule 10    TYPE -> TkInt
Rule 11    TYPE -> TkBool
Rule 12    TYPE -> ARRAY_DECLARATION
Rule 13    ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket
Rule 14    NUM -> TkNum
Rule 15    NUM -> TkMinus TkNum
Rule 16    LIST_INSTRUCTIONS -> INSTRUCTION
Rule 17    LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
Rule 18    INSTRUCTION -> ASIG
Rule 19    INSTRUCTION -> PRINT
Rule 20    INSTRUCTION -> FOR_LOOP
Rule 21    INSTRUCTION -> DO_LOOP
Rule 22    INSTRUCTION -> CONDITIONAL
Rule 23    INSTRUCTION -> TkSkip
Rule 24    ASIG -> TkId TkAsig EXPRESSION
Rule 25    EXPRESSION -> E
Rule 26    EXPRESSION -> ASIG_ARRAY
Rule 27    ASIG_ARRAY -> CREATE_ARRAY
Rule 28    ASIG_ARRAY -> WRITE_ARRAY
Rule 29    CREATE_ARRAY -> E TkComma E
Rule 30    CREATE_ARRAY -> CREATE_ARRAY TkComma E
Rule 31    WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar
Rule 32    WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar
Rule 33    E -> E TkMult E
Rule 34    E -> E TkPlus E
Rule 35    E -> E TkMinus E
Rule 36    E -> E TkOr E
Rule 37    E -> E TkAnd E
Rule 38    E -> E TkLess E
Rule 39    E -> E TkLeq E
Rule 40    E -> E TkGeq E
Rule 41    E -> E TkGreater E
Rule 42    E -> E TkEqual E
Rule 43    E -> E TkNEqual E
Rule 44    E -> TkOpenPar E TkClosePar
Rule 45    E -> TkNot E
Rule 46    E -> TkMinus E
Rule 47    E -> TkNum
Rule 48    E -> TkId
Rule 49    E -> TkTrue
Rule 50    E -> TkFalse
Rule 51    E -> READ_ARRAY
Rule 52    PRINT -> TkPrint TOPRINT
Rule 53    TOPRINT -> EXPRESSION_TO_PRINT
Rule 54    TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT
Rule 55    EXPRESSION_TO_PRINT -> TkId
Rule 56    EXPRESSION_TO_PRINT -> STRING
Rule 57    EXPRESSION_TO_PRINT -> TkNum
Rule 58    EXPRESSION_TO_PRINT -> TkTrue
Rule 59    EXPRESSION_TO_PRINT -> TkFalse
Rule 60    EXPRESSION_TO_PRINT -> READ_ARRAY
Rule 61    STRING -> TkString
Rule 62    READ_ARRAY -> ARRAY TkOBracket E TkCBracket
Rule 63    ARRAY -> TkId
Rule 64    ARRAY -> WRITE_ARRAY
Rule 65    FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof
Rule 66    DO_LOOP -> TkDo GUARD TkOd
Rule 67    CONDITIONAL -> TkIf GUARD TkFi
Rule 68    GUARD -> E TkArrow SUBPROGRAM
Rule 69    GUARD -> GUARD TkGuard E TkArrow SUBPROGRAM

Terminals, with rules where they appear

TkAnd                : 37
TkArray              : 13
TkArrow              : 65 68 69
TkAsig               : 24
TkBool               : 11
TkCBlock             : 1
TkCBracket           : 13 62
TkClosePar           : 31 32 44
TkComma              : 9 29 30
TkConcat             : 54
TkDeclare            : 4
TkDo                 : 66
TkEqual              : 42
TkFalse              : 50 59
TkFi                 : 67
TkFor                : 65
TkGeq                : 40
TkGreater            : 41
TkGuard              : 69
TkId                 : 8 9 24 31 48 55 63 65
TkIf                 : 67
TkIn                 : 65
TkInt                : 10
TkLeq                : 39
TkLess               : 38
TkMinus              : 15 35 46
TkMult               : 33
TkNEqual             : 43
TkNot                : 45
TkNum                : 14 15 47 57
TkOBlock             : 1
TkOBracket           : 13 62
TkOd                 : 66
TkOpenPar            : 31 32 44
TkOr                 : 36
TkPlus               : 34
TkPrint              : 52
TkRof                : 65
TkSemicolon          : 7 17
TkSkip               : 23
TkSoForth            : 13
TkString             : 61
TkTo                 : 65
TkTrue               : 49 58
TkTwoPoints          : 8 31 32
error                : 

Nonterminals, with rules where they appear

ARRAY                : 62
ARRAY_DECLARATION    : 12
ASIG                 : 18
ASIG_ARRAY           : 26
BLOCK                : 2 0
CONDITIONAL          : 22
CREATE_ARRAY         : 27 30
DECLARE              : 1
DO_LOOP              : 21
E                    : 25 29 29 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 45 46 62 65 65 68 69
EXPRESSION           : 24
EXPRESSION_TO_PRINT  : 53 54
FOR_LOOP             : 20
GUARD                : 66 67 69
INSTRUCTION          : 16 17
LIST_DECLARE         : 4 7
LIST_INSTRUCTIONS    : 1 3 17
NUM                  : 13 13
PRINT                : 19
READ_ARRAY           : 51 60
STRING               : 56
SUBPROGRAM           : 65 68 69
TOPRINT              : 52 54
TYPE                 : 8
VARIABLE_DECLARATION : 6 7 9
WRITE_ARRAY          : 28 32 64

Parsing method: SLR

state 0

    (0) S' -> . BLOCK
    (1) BLOCK -> . TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock

    TkOBlock        shift and go to state 2

    BLOCK                          shift and go to state 1

state 1

    (0) S' -> BLOCK .



state 2

    (1) BLOCK -> TkOBlock . DECLARE LIST_INSTRUCTIONS TkCBlock
    (4) DECLARE -> . TkDeclare LIST_DECLARE
    (5) DECLARE -> .

    TkDeclare       shift and go to state 4
    TkSkip          reduce using rule 5 (DECLARE -> .)
    TkId            reduce using rule 5 (DECLARE -> .)
    TkPrint         reduce using rule 5 (DECLARE -> .)
    TkFor           reduce using rule 5 (DECLARE -> .)
    TkDo            reduce using rule 5 (DECLARE -> .)
    TkIf            reduce using rule 5 (DECLARE -> .)

    DECLARE                        shift and go to state 3

state 3

    (1) BLOCK -> TkOBlock DECLARE . LIST_INSTRUCTIONS TkCBlock
    (16) LIST_INSTRUCTIONS -> . INSTRUCTION
    (17) LIST_INSTRUCTIONS -> . LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
    (18) INSTRUCTION -> . ASIG
    (19) INSTRUCTION -> . PRINT
    (20) INSTRUCTION -> . FOR_LOOP
    (21) INSTRUCTION -> . DO_LOOP
    (22) INSTRUCTION -> . CONDITIONAL
    (23) INSTRUCTION -> . TkSkip
    (24) ASIG -> . TkId TkAsig EXPRESSION
    (52) PRINT -> . TkPrint TOPRINT
    (65) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof
    (66) DO_LOOP -> . TkDo GUARD TkOd
    (67) CONDITIONAL -> . TkIf GUARD TkFi

    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkFor           shift and go to state 15
    TkDo            shift and go to state 16
    TkIf            shift and go to state 17

    LIST_INSTRUCTIONS              shift and go to state 5
    INSTRUCTION                    shift and go to state 6
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    FOR_LOOP                       shift and go to state 9
    DO_LOOP                        shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 4

    (4) DECLARE -> TkDeclare . LIST_DECLARE
    (6) LIST_DECLARE -> . VARIABLE_DECLARATION
    (7) LIST_DECLARE -> . LIST_DECLARE TkSemicolon VARIABLE_DECLARATION
    (8) VARIABLE_DECLARATION -> . TkId TkTwoPoints TYPE
    (9) VARIABLE_DECLARATION -> . TkId TkComma VARIABLE_DECLARATION

    TkId            shift and go to state 20

    LIST_DECLARE                   shift and go to state 18
    VARIABLE_DECLARATION           shift and go to state 19

state 5

    (1) BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS . TkCBlock
    (17) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS . TkSemicolon INSTRUCTION

    TkCBlock        shift and go to state 21
    TkSemicolon     shift and go to state 22


state 6

    (16) LIST_INSTRUCTIONS -> INSTRUCTION .

    TkCBlock        reduce using rule 16 (LIST_INSTRUCTIONS -> INSTRUCTION .)
    TkSemicolon     reduce using rule 16 (LIST_INSTRUCTIONS -> INSTRUCTION .)
    TkRof           reduce using rule 16 (LIST_INSTRUCTIONS -> INSTRUCTION .)
    TkOd            reduce using rule 16 (LIST_INSTRUCTIONS -> INSTRUCTION .)
    TkFi            reduce using rule 16 (LIST_INSTRUCTIONS -> INSTRUCTION .)
    TkGuard         reduce using rule 16 (LIST_INSTRUCTIONS -> INSTRUCTION .)


state 7

    (18) INSTRUCTION -> ASIG .

    TkCBlock        reduce using rule 18 (INSTRUCTION -> ASIG .)
    TkSemicolon     reduce using rule 18 (INSTRUCTION -> ASIG .)
    TkRof           reduce using rule 18 (INSTRUCTION -> ASIG .)
    TkOd            reduce using rule 18 (INSTRUCTION -> ASIG .)
    TkFi            reduce using rule 18 (INSTRUCTION -> ASIG .)
    TkGuard         reduce using rule 18 (INSTRUCTION -> ASIG .)


state 8

    (19) INSTRUCTION -> PRINT .

    TkCBlock        reduce using rule 19 (INSTRUCTION -> PRINT .)
    TkSemicolon     reduce using rule 19 (INSTRUCTION -> PRINT .)
    TkRof           reduce using rule 19 (INSTRUCTION -> PRINT .)
    TkOd            reduce using rule 19 (INSTRUCTION -> PRINT .)
    TkFi            reduce using rule 19 (INSTRUCTION -> PRINT .)
    TkGuard         reduce using rule 19 (INSTRUCTION -> PRINT .)


state 9

    (20) INSTRUCTION -> FOR_LOOP .

    TkCBlock        reduce using rule 20 (INSTRUCTION -> FOR_LOOP .)
    TkSemicolon     reduce using rule 20 (INSTRUCTION -> FOR_LOOP .)
    TkRof           reduce using rule 20 (INSTRUCTION -> FOR_LOOP .)
    TkOd            reduce using rule 20 (INSTRUCTION -> FOR_LOOP .)
    TkFi            reduce using rule 20 (INSTRUCTION -> FOR_LOOP .)
    TkGuard         reduce using rule 20 (INSTRUCTION -> FOR_LOOP .)


state 10

    (21) INSTRUCTION -> DO_LOOP .

    TkCBlock        reduce using rule 21 (INSTRUCTION -> DO_LOOP .)
    TkSemicolon     reduce using rule 21 (INSTRUCTION -> DO_LOOP .)
    TkRof           reduce using rule 21 (INSTRUCTION -> DO_LOOP .)
    TkOd            reduce using rule 21 (INSTRUCTION -> DO_LOOP .)
    TkFi            reduce using rule 21 (INSTRUCTION -> DO_LOOP .)
    TkGuard         reduce using rule 21 (INSTRUCTION -> DO_LOOP .)


state 11

    (22) INSTRUCTION -> CONDITIONAL .

    TkCBlock        reduce using rule 22 (INSTRUCTION -> CONDITIONAL .)
    TkSemicolon     reduce using rule 22 (INSTRUCTION -> CONDITIONAL .)
    TkRof           reduce using rule 22 (INSTRUCTION -> CONDITIONAL .)
    TkOd            reduce using rule 22 (INSTRUCTION -> CONDITIONAL .)
    TkFi            reduce using rule 22 (INSTRUCTION -> CONDITIONAL .)
    TkGuard         reduce using rule 22 (INSTRUCTION -> CONDITIONAL .)


state 12

    (23) INSTRUCTION -> TkSkip .

    TkCBlock        reduce using rule 23 (INSTRUCTION -> TkSkip .)
    TkSemicolon     reduce using rule 23 (INSTRUCTION -> TkSkip .)
    TkRof           reduce using rule 23 (INSTRUCTION -> TkSkip .)
    TkOd            reduce using rule 23 (INSTRUCTION -> TkSkip .)
    TkFi            reduce using rule 23 (INSTRUCTION -> TkSkip .)
    TkGuard         reduce using rule 23 (INSTRUCTION -> TkSkip .)


state 13

    (24) ASIG -> TkId . TkAsig EXPRESSION

    TkAsig          shift and go to state 23


state 14

    (52) PRINT -> TkPrint . TOPRINT
    (53) TOPRINT -> . EXPRESSION_TO_PRINT
    (54) TOPRINT -> . TOPRINT TkConcat EXPRESSION_TO_PRINT
    (55) EXPRESSION_TO_PRINT -> . TkId
    (56) EXPRESSION_TO_PRINT -> . STRING
    (57) EXPRESSION_TO_PRINT -> . TkNum
    (58) EXPRESSION_TO_PRINT -> . TkTrue
    (59) EXPRESSION_TO_PRINT -> . TkFalse
    (60) EXPRESSION_TO_PRINT -> . READ_ARRAY
    (61) STRING -> . TkString
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkId            shift and go to state 26
    TkNum           shift and go to state 28
    TkTrue          shift and go to state 29
    TkFalse         shift and go to state 30
    TkString        shift and go to state 32

    TOPRINT                        shift and go to state 24
    EXPRESSION_TO_PRINT            shift and go to state 25
    STRING                         shift and go to state 27
    READ_ARRAY                     shift and go to state 31
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 15

    (65) FOR_LOOP -> TkFor . TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof

    TkId            shift and go to state 35


state 16

    (66) DO_LOOP -> TkDo . GUARD TkOd
    (68) GUARD -> . E TkArrow SUBPROGRAM
    (69) GUARD -> . GUARD TkGuard E TkArrow SUBPROGRAM
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    GUARD                          shift and go to state 36
    E                              shift and go to state 37
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 17

    (67) CONDITIONAL -> TkIf . GUARD TkFi
    (68) GUARD -> . E TkArrow SUBPROGRAM
    (69) GUARD -> . GUARD TkGuard E TkArrow SUBPROGRAM
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    GUARD                          shift and go to state 46
    E                              shift and go to state 37
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 18

    (4) DECLARE -> TkDeclare LIST_DECLARE .
    (7) LIST_DECLARE -> LIST_DECLARE . TkSemicolon VARIABLE_DECLARATION

    TkSkip          reduce using rule 4 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkId            reduce using rule 4 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkPrint         reduce using rule 4 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkFor           reduce using rule 4 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkDo            reduce using rule 4 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkIf            reduce using rule 4 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkSemicolon     shift and go to state 47


state 19

    (6) LIST_DECLARE -> VARIABLE_DECLARATION .

    TkSkip          reduce using rule 6 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkId            reduce using rule 6 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkPrint         reduce using rule 6 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkFor           reduce using rule 6 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkDo            reduce using rule 6 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkIf            reduce using rule 6 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkSemicolon     reduce using rule 6 (LIST_DECLARE -> VARIABLE_DECLARATION .)


state 20

    (8) VARIABLE_DECLARATION -> TkId . TkTwoPoints TYPE
    (9) VARIABLE_DECLARATION -> TkId . TkComma VARIABLE_DECLARATION

    TkTwoPoints     shift and go to state 48
    TkComma         shift and go to state 49


state 21

    (1) BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock .

    $end            reduce using rule 1 (BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock .)
    TkRof           reduce using rule 1 (BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock .)
    TkOd            reduce using rule 1 (BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock .)
    TkFi            reduce using rule 1 (BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock .)
    TkGuard         reduce using rule 1 (BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock .)


state 22

    (17) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon . INSTRUCTION
    (18) INSTRUCTION -> . ASIG
    (19) INSTRUCTION -> . PRINT
    (20) INSTRUCTION -> . FOR_LOOP
    (21) INSTRUCTION -> . DO_LOOP
    (22) INSTRUCTION -> . CONDITIONAL
    (23) INSTRUCTION -> . TkSkip
    (24) ASIG -> . TkId TkAsig EXPRESSION
    (52) PRINT -> . TkPrint TOPRINT
    (65) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof
    (66) DO_LOOP -> . TkDo GUARD TkOd
    (67) CONDITIONAL -> . TkIf GUARD TkFi

    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkFor           shift and go to state 15
    TkDo            shift and go to state 16
    TkIf            shift and go to state 17

    INSTRUCTION                    shift and go to state 50
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    FOR_LOOP                       shift and go to state 9
    DO_LOOP                        shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 23

    (24) ASIG -> TkId TkAsig . EXPRESSION
    (25) EXPRESSION -> . E
    (26) EXPRESSION -> . ASIG_ARRAY
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (27) ASIG_ARRAY -> . CREATE_ARRAY
    (28) ASIG_ARRAY -> . WRITE_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (29) CREATE_ARRAY -> . E TkComma E
    (30) CREATE_ARRAY -> . CREATE_ARRAY TkComma E
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 51
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    EXPRESSION                     shift and go to state 52
    E                              shift and go to state 53
    ASIG_ARRAY                     shift and go to state 54
    READ_ARRAY                     shift and go to state 45
    CREATE_ARRAY                   shift and go to state 55
    WRITE_ARRAY                    shift and go to state 56
    ARRAY                          shift and go to state 33

state 24

    (52) PRINT -> TkPrint TOPRINT .
    (54) TOPRINT -> TOPRINT . TkConcat EXPRESSION_TO_PRINT

    TkCBlock        reduce using rule 52 (PRINT -> TkPrint TOPRINT .)
    TkSemicolon     reduce using rule 52 (PRINT -> TkPrint TOPRINT .)
    TkRof           reduce using rule 52 (PRINT -> TkPrint TOPRINT .)
    TkOd            reduce using rule 52 (PRINT -> TkPrint TOPRINT .)
    TkFi            reduce using rule 52 (PRINT -> TkPrint TOPRINT .)
    TkGuard         reduce using rule 52 (PRINT -> TkPrint TOPRINT .)
    TkConcat        shift and go to state 57


state 25

    (53) TOPRINT -> EXPRESSION_TO_PRINT .

    TkCBlock        reduce using rule 53 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkSemicolon     reduce using rule 53 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkConcat        reduce using rule 53 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkRof           reduce using rule 53 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkOd            reduce using rule 53 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkFi            reduce using rule 53 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkGuard         reduce using rule 53 (TOPRINT -> EXPRESSION_TO_PRINT .)


state 26

    (55) EXPRESSION_TO_PRINT -> TkId .
    (63) ARRAY -> TkId .
    (31) WRITE_ARRAY -> TkId . TkOpenPar E TkTwoPoints E TkClosePar

    TkCBlock        reduce using rule 55 (EXPRESSION_TO_PRINT -> TkId .)
    TkSemicolon     reduce using rule 55 (EXPRESSION_TO_PRINT -> TkId .)
    TkConcat        reduce using rule 55 (EXPRESSION_TO_PRINT -> TkId .)
    TkRof           reduce using rule 55 (EXPRESSION_TO_PRINT -> TkId .)
    TkOd            reduce using rule 55 (EXPRESSION_TO_PRINT -> TkId .)
    TkFi            reduce using rule 55 (EXPRESSION_TO_PRINT -> TkId .)
    TkGuard         reduce using rule 55 (EXPRESSION_TO_PRINT -> TkId .)
    TkOBracket      reduce using rule 63 (ARRAY -> TkId .)
    TkOpenPar       shift and go to state 58


state 27

    (56) EXPRESSION_TO_PRINT -> STRING .

    TkCBlock        reduce using rule 56 (EXPRESSION_TO_PRINT -> STRING .)
    TkSemicolon     reduce using rule 56 (EXPRESSION_TO_PRINT -> STRING .)
    TkConcat        reduce using rule 56 (EXPRESSION_TO_PRINT -> STRING .)
    TkRof           reduce using rule 56 (EXPRESSION_TO_PRINT -> STRING .)
    TkOd            reduce using rule 56 (EXPRESSION_TO_PRINT -> STRING .)
    TkFi            reduce using rule 56 (EXPRESSION_TO_PRINT -> STRING .)
    TkGuard         reduce using rule 56 (EXPRESSION_TO_PRINT -> STRING .)


state 28

    (57) EXPRESSION_TO_PRINT -> TkNum .

    TkCBlock        reduce using rule 57 (EXPRESSION_TO_PRINT -> TkNum .)
    TkSemicolon     reduce using rule 57 (EXPRESSION_TO_PRINT -> TkNum .)
    TkConcat        reduce using rule 57 (EXPRESSION_TO_PRINT -> TkNum .)
    TkRof           reduce using rule 57 (EXPRESSION_TO_PRINT -> TkNum .)
    TkOd            reduce using rule 57 (EXPRESSION_TO_PRINT -> TkNum .)
    TkFi            reduce using rule 57 (EXPRESSION_TO_PRINT -> TkNum .)
    TkGuard         reduce using rule 57 (EXPRESSION_TO_PRINT -> TkNum .)


state 29

    (58) EXPRESSION_TO_PRINT -> TkTrue .

    TkCBlock        reduce using rule 58 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkSemicolon     reduce using rule 58 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkConcat        reduce using rule 58 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkRof           reduce using rule 58 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkOd            reduce using rule 58 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkFi            reduce using rule 58 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkGuard         reduce using rule 58 (EXPRESSION_TO_PRINT -> TkTrue .)


state 30

    (59) EXPRESSION_TO_PRINT -> TkFalse .

    TkCBlock        reduce using rule 59 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkSemicolon     reduce using rule 59 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkConcat        reduce using rule 59 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkRof           reduce using rule 59 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkOd            reduce using rule 59 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkFi            reduce using rule 59 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkGuard         reduce using rule 59 (EXPRESSION_TO_PRINT -> TkFalse .)


state 31

    (60) EXPRESSION_TO_PRINT -> READ_ARRAY .

    TkCBlock        reduce using rule 60 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkSemicolon     reduce using rule 60 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkConcat        reduce using rule 60 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkRof           reduce using rule 60 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkOd            reduce using rule 60 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkFi            reduce using rule 60 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkGuard         reduce using rule 60 (EXPRESSION_TO_PRINT -> READ_ARRAY .)


state 32

    (61) STRING -> TkString .

    TkCBlock        reduce using rule 61 (STRING -> TkString .)
    TkSemicolon     reduce using rule 61 (STRING -> TkString .)
    TkConcat        reduce using rule 61 (STRING -> TkString .)
    TkRof           reduce using rule 61 (STRING -> TkString .)
    TkOd            reduce using rule 61 (STRING -> TkString .)
    TkFi            reduce using rule 61 (STRING -> TkString .)
    TkGuard         reduce using rule 61 (STRING -> TkString .)


state 33

    (62) READ_ARRAY -> ARRAY . TkOBracket E TkCBracket

    TkOBracket      shift and go to state 59


state 34

    (64) ARRAY -> WRITE_ARRAY .
    (32) WRITE_ARRAY -> WRITE_ARRAY . TkOpenPar E TkTwoPoints E TkClosePar

    TkOBracket      reduce using rule 64 (ARRAY -> WRITE_ARRAY .)
    TkOpenPar       shift and go to state 60


state 35

    (65) FOR_LOOP -> TkFor TkId . TkIn E TkTo E TkArrow SUBPROGRAM TkRof

    TkIn            shift and go to state 61


state 36

    (66) DO_LOOP -> TkDo GUARD . TkOd
    (69) GUARD -> GUARD . TkGuard E TkArrow SUBPROGRAM

    TkOd            shift and go to state 62
    TkGuard         shift and go to state 63


state 37

    (68) GUARD -> E . TkArrow SUBPROGRAM
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkArrow         shift and go to state 64
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 38

    (46) E -> TkMinus . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 76
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 39

    (44) E -> TkOpenPar . E TkClosePar
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 77
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 40

    (45) E -> TkNot . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 78
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 41

    (47) E -> TkNum .

    TkCBlock        reduce using rule 47 (E -> TkNum .)
    TkSemicolon     reduce using rule 47 (E -> TkNum .)
    TkComma         reduce using rule 47 (E -> TkNum .)
    TkTwoPoints     reduce using rule 47 (E -> TkNum .)
    TkClosePar      reduce using rule 47 (E -> TkNum .)
    TkMult          reduce using rule 47 (E -> TkNum .)
    TkPlus          reduce using rule 47 (E -> TkNum .)
    TkMinus         reduce using rule 47 (E -> TkNum .)
    TkOr            reduce using rule 47 (E -> TkNum .)
    TkAnd           reduce using rule 47 (E -> TkNum .)
    TkLess          reduce using rule 47 (E -> TkNum .)
    TkLeq           reduce using rule 47 (E -> TkNum .)
    TkGeq           reduce using rule 47 (E -> TkNum .)
    TkGreater       reduce using rule 47 (E -> TkNum .)
    TkEqual         reduce using rule 47 (E -> TkNum .)
    TkNEqual        reduce using rule 47 (E -> TkNum .)
    TkCBracket      reduce using rule 47 (E -> TkNum .)
    TkTo            reduce using rule 47 (E -> TkNum .)
    TkArrow         reduce using rule 47 (E -> TkNum .)
    TkRof           reduce using rule 47 (E -> TkNum .)
    TkOd            reduce using rule 47 (E -> TkNum .)
    TkFi            reduce using rule 47 (E -> TkNum .)
    TkGuard         reduce using rule 47 (E -> TkNum .)


state 42

    (48) E -> TkId .
    (63) ARRAY -> TkId .
    (31) WRITE_ARRAY -> TkId . TkOpenPar E TkTwoPoints E TkClosePar

    TkCBlock        reduce using rule 48 (E -> TkId .)
    TkSemicolon     reduce using rule 48 (E -> TkId .)
    TkComma         reduce using rule 48 (E -> TkId .)
    TkTwoPoints     reduce using rule 48 (E -> TkId .)
    TkClosePar      reduce using rule 48 (E -> TkId .)
    TkMult          reduce using rule 48 (E -> TkId .)
    TkPlus          reduce using rule 48 (E -> TkId .)
    TkMinus         reduce using rule 48 (E -> TkId .)
    TkOr            reduce using rule 48 (E -> TkId .)
    TkAnd           reduce using rule 48 (E -> TkId .)
    TkLess          reduce using rule 48 (E -> TkId .)
    TkLeq           reduce using rule 48 (E -> TkId .)
    TkGeq           reduce using rule 48 (E -> TkId .)
    TkGreater       reduce using rule 48 (E -> TkId .)
    TkEqual         reduce using rule 48 (E -> TkId .)
    TkNEqual        reduce using rule 48 (E -> TkId .)
    TkCBracket      reduce using rule 48 (E -> TkId .)
    TkTo            reduce using rule 48 (E -> TkId .)
    TkArrow         reduce using rule 48 (E -> TkId .)
    TkRof           reduce using rule 48 (E -> TkId .)
    TkOd            reduce using rule 48 (E -> TkId .)
    TkFi            reduce using rule 48 (E -> TkId .)
    TkGuard         reduce using rule 48 (E -> TkId .)
    TkOBracket      reduce using rule 63 (ARRAY -> TkId .)
    TkOpenPar       shift and go to state 58


state 43

    (49) E -> TkTrue .

    TkCBlock        reduce using rule 49 (E -> TkTrue .)
    TkSemicolon     reduce using rule 49 (E -> TkTrue .)
    TkComma         reduce using rule 49 (E -> TkTrue .)
    TkTwoPoints     reduce using rule 49 (E -> TkTrue .)
    TkClosePar      reduce using rule 49 (E -> TkTrue .)
    TkMult          reduce using rule 49 (E -> TkTrue .)
    TkPlus          reduce using rule 49 (E -> TkTrue .)
    TkMinus         reduce using rule 49 (E -> TkTrue .)
    TkOr            reduce using rule 49 (E -> TkTrue .)
    TkAnd           reduce using rule 49 (E -> TkTrue .)
    TkLess          reduce using rule 49 (E -> TkTrue .)
    TkLeq           reduce using rule 49 (E -> TkTrue .)
    TkGeq           reduce using rule 49 (E -> TkTrue .)
    TkGreater       reduce using rule 49 (E -> TkTrue .)
    TkEqual         reduce using rule 49 (E -> TkTrue .)
    TkNEqual        reduce using rule 49 (E -> TkTrue .)
    TkCBracket      reduce using rule 49 (E -> TkTrue .)
    TkTo            reduce using rule 49 (E -> TkTrue .)
    TkArrow         reduce using rule 49 (E -> TkTrue .)
    TkRof           reduce using rule 49 (E -> TkTrue .)
    TkOd            reduce using rule 49 (E -> TkTrue .)
    TkFi            reduce using rule 49 (E -> TkTrue .)
    TkGuard         reduce using rule 49 (E -> TkTrue .)


state 44

    (50) E -> TkFalse .

    TkCBlock        reduce using rule 50 (E -> TkFalse .)
    TkSemicolon     reduce using rule 50 (E -> TkFalse .)
    TkComma         reduce using rule 50 (E -> TkFalse .)
    TkTwoPoints     reduce using rule 50 (E -> TkFalse .)
    TkClosePar      reduce using rule 50 (E -> TkFalse .)
    TkMult          reduce using rule 50 (E -> TkFalse .)
    TkPlus          reduce using rule 50 (E -> TkFalse .)
    TkMinus         reduce using rule 50 (E -> TkFalse .)
    TkOr            reduce using rule 50 (E -> TkFalse .)
    TkAnd           reduce using rule 50 (E -> TkFalse .)
    TkLess          reduce using rule 50 (E -> TkFalse .)
    TkLeq           reduce using rule 50 (E -> TkFalse .)
    TkGeq           reduce using rule 50 (E -> TkFalse .)
    TkGreater       reduce using rule 50 (E -> TkFalse .)
    TkEqual         reduce using rule 50 (E -> TkFalse .)
    TkNEqual        reduce using rule 50 (E -> TkFalse .)
    TkCBracket      reduce using rule 50 (E -> TkFalse .)
    TkTo            reduce using rule 50 (E -> TkFalse .)
    TkArrow         reduce using rule 50 (E -> TkFalse .)
    TkRof           reduce using rule 50 (E -> TkFalse .)
    TkOd            reduce using rule 50 (E -> TkFalse .)
    TkFi            reduce using rule 50 (E -> TkFalse .)
    TkGuard         reduce using rule 50 (E -> TkFalse .)


state 45

    (51) E -> READ_ARRAY .

    TkCBlock        reduce using rule 51 (E -> READ_ARRAY .)
    TkSemicolon     reduce using rule 51 (E -> READ_ARRAY .)
    TkComma         reduce using rule 51 (E -> READ_ARRAY .)
    TkTwoPoints     reduce using rule 51 (E -> READ_ARRAY .)
    TkClosePar      reduce using rule 51 (E -> READ_ARRAY .)
    TkMult          reduce using rule 51 (E -> READ_ARRAY .)
    TkPlus          reduce using rule 51 (E -> READ_ARRAY .)
    TkMinus         reduce using rule 51 (E -> READ_ARRAY .)
    TkOr            reduce using rule 51 (E -> READ_ARRAY .)
    TkAnd           reduce using rule 51 (E -> READ_ARRAY .)
    TkLess          reduce using rule 51 (E -> READ_ARRAY .)
    TkLeq           reduce using rule 51 (E -> READ_ARRAY .)
    TkGeq           reduce using rule 51 (E -> READ_ARRAY .)
    TkGreater       reduce using rule 51 (E -> READ_ARRAY .)
    TkEqual         reduce using rule 51 (E -> READ_ARRAY .)
    TkNEqual        reduce using rule 51 (E -> READ_ARRAY .)
    TkCBracket      reduce using rule 51 (E -> READ_ARRAY .)
    TkTo            reduce using rule 51 (E -> READ_ARRAY .)
    TkArrow         reduce using rule 51 (E -> READ_ARRAY .)
    TkRof           reduce using rule 51 (E -> READ_ARRAY .)
    TkOd            reduce using rule 51 (E -> READ_ARRAY .)
    TkFi            reduce using rule 51 (E -> READ_ARRAY .)
    TkGuard         reduce using rule 51 (E -> READ_ARRAY .)


state 46

    (67) CONDITIONAL -> TkIf GUARD . TkFi
    (69) GUARD -> GUARD . TkGuard E TkArrow SUBPROGRAM

    TkFi            shift and go to state 79
    TkGuard         shift and go to state 63


state 47

    (7) LIST_DECLARE -> LIST_DECLARE TkSemicolon . VARIABLE_DECLARATION
    (8) VARIABLE_DECLARATION -> . TkId TkTwoPoints TYPE
    (9) VARIABLE_DECLARATION -> . TkId TkComma VARIABLE_DECLARATION

    TkId            shift and go to state 20

    VARIABLE_DECLARATION           shift and go to state 80

state 48

    (8) VARIABLE_DECLARATION -> TkId TkTwoPoints . TYPE
    (10) TYPE -> . TkInt
    (11) TYPE -> . TkBool
    (12) TYPE -> . ARRAY_DECLARATION
    (13) ARRAY_DECLARATION -> . TkArray TkOBracket NUM TkSoForth NUM TkCBracket

    TkInt           shift and go to state 82
    TkBool          shift and go to state 83
    TkArray         shift and go to state 85

    TYPE                           shift and go to state 81
    ARRAY_DECLARATION              shift and go to state 84

state 49

    (9) VARIABLE_DECLARATION -> TkId TkComma . VARIABLE_DECLARATION
    (8) VARIABLE_DECLARATION -> . TkId TkTwoPoints TYPE
    (9) VARIABLE_DECLARATION -> . TkId TkComma VARIABLE_DECLARATION

    TkId            shift and go to state 20

    VARIABLE_DECLARATION           shift and go to state 86

state 50

    (17) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .

    TkCBlock        reduce using rule 17 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)
    TkSemicolon     reduce using rule 17 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)
    TkRof           reduce using rule 17 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)
    TkOd            reduce using rule 17 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)
    TkFi            reduce using rule 17 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)
    TkGuard         reduce using rule 17 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)


state 51

    (48) E -> TkId .
    (31) WRITE_ARRAY -> TkId . TkOpenPar E TkTwoPoints E TkClosePar
    (63) ARRAY -> TkId .

    TkCBlock        reduce using rule 48 (E -> TkId .)
    TkSemicolon     reduce using rule 48 (E -> TkId .)
    TkComma         reduce using rule 48 (E -> TkId .)
    TkTwoPoints     reduce using rule 48 (E -> TkId .)
    TkClosePar      reduce using rule 48 (E -> TkId .)
    TkMult          reduce using rule 48 (E -> TkId .)
    TkPlus          reduce using rule 48 (E -> TkId .)
    TkMinus         reduce using rule 48 (E -> TkId .)
    TkOr            reduce using rule 48 (E -> TkId .)
    TkAnd           reduce using rule 48 (E -> TkId .)
    TkLess          reduce using rule 48 (E -> TkId .)
    TkLeq           reduce using rule 48 (E -> TkId .)
    TkGeq           reduce using rule 48 (E -> TkId .)
    TkGreater       reduce using rule 48 (E -> TkId .)
    TkEqual         reduce using rule 48 (E -> TkId .)
    TkNEqual        reduce using rule 48 (E -> TkId .)
    TkCBracket      reduce using rule 48 (E -> TkId .)
    TkTo            reduce using rule 48 (E -> TkId .)
    TkArrow         reduce using rule 48 (E -> TkId .)
    TkRof           reduce using rule 48 (E -> TkId .)
    TkOd            reduce using rule 48 (E -> TkId .)
    TkFi            reduce using rule 48 (E -> TkId .)
    TkGuard         reduce using rule 48 (E -> TkId .)
    TkOpenPar       shift and go to state 58
    TkOBracket      reduce using rule 63 (ARRAY -> TkId .)


state 52

    (24) ASIG -> TkId TkAsig EXPRESSION .

    TkCBlock        reduce using rule 24 (ASIG -> TkId TkAsig EXPRESSION .)
    TkSemicolon     reduce using rule 24 (ASIG -> TkId TkAsig EXPRESSION .)
    TkRof           reduce using rule 24 (ASIG -> TkId TkAsig EXPRESSION .)
    TkOd            reduce using rule 24 (ASIG -> TkId TkAsig EXPRESSION .)
    TkFi            reduce using rule 24 (ASIG -> TkId TkAsig EXPRESSION .)
    TkGuard         reduce using rule 24 (ASIG -> TkId TkAsig EXPRESSION .)


state 53

    (25) EXPRESSION -> E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E
    (29) CREATE_ARRAY -> E . TkComma E

    TkCBlock        reduce using rule 25 (EXPRESSION -> E .)
    TkSemicolon     reduce using rule 25 (EXPRESSION -> E .)
    TkRof           reduce using rule 25 (EXPRESSION -> E .)
    TkOd            reduce using rule 25 (EXPRESSION -> E .)
    TkFi            reduce using rule 25 (EXPRESSION -> E .)
    TkGuard         reduce using rule 25 (EXPRESSION -> E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75
    TkComma         shift and go to state 87


state 54

    (26) EXPRESSION -> ASIG_ARRAY .

    TkCBlock        reduce using rule 26 (EXPRESSION -> ASIG_ARRAY .)
    TkSemicolon     reduce using rule 26 (EXPRESSION -> ASIG_ARRAY .)
    TkRof           reduce using rule 26 (EXPRESSION -> ASIG_ARRAY .)
    TkOd            reduce using rule 26 (EXPRESSION -> ASIG_ARRAY .)
    TkFi            reduce using rule 26 (EXPRESSION -> ASIG_ARRAY .)
    TkGuard         reduce using rule 26 (EXPRESSION -> ASIG_ARRAY .)


state 55

    (27) ASIG_ARRAY -> CREATE_ARRAY .
    (30) CREATE_ARRAY -> CREATE_ARRAY . TkComma E

    TkCBlock        reduce using rule 27 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkSemicolon     reduce using rule 27 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkRof           reduce using rule 27 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkOd            reduce using rule 27 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkFi            reduce using rule 27 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkGuard         reduce using rule 27 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkComma         shift and go to state 88


state 56

    (28) ASIG_ARRAY -> WRITE_ARRAY .
    (32) WRITE_ARRAY -> WRITE_ARRAY . TkOpenPar E TkTwoPoints E TkClosePar
    (64) ARRAY -> WRITE_ARRAY .

    TkCBlock        reduce using rule 28 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkSemicolon     reduce using rule 28 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkRof           reduce using rule 28 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkOd            reduce using rule 28 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkFi            reduce using rule 28 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkGuard         reduce using rule 28 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkOpenPar       shift and go to state 60
    TkOBracket      reduce using rule 64 (ARRAY -> WRITE_ARRAY .)


state 57

    (54) TOPRINT -> TOPRINT TkConcat . EXPRESSION_TO_PRINT
    (55) EXPRESSION_TO_PRINT -> . TkId
    (56) EXPRESSION_TO_PRINT -> . STRING
    (57) EXPRESSION_TO_PRINT -> . TkNum
    (58) EXPRESSION_TO_PRINT -> . TkTrue
    (59) EXPRESSION_TO_PRINT -> . TkFalse
    (60) EXPRESSION_TO_PRINT -> . READ_ARRAY
    (61) STRING -> . TkString
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkId            shift and go to state 26
    TkNum           shift and go to state 28
    TkTrue          shift and go to state 29
    TkFalse         shift and go to state 30
    TkString        shift and go to state 32

    EXPRESSION_TO_PRINT            shift and go to state 89
    STRING                         shift and go to state 27
    READ_ARRAY                     shift and go to state 31
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 58

    (31) WRITE_ARRAY -> TkId TkOpenPar . E TkTwoPoints E TkClosePar
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 90
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 59

    (62) READ_ARRAY -> ARRAY TkOBracket . E TkCBracket
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    ARRAY                          shift and go to state 33
    E                              shift and go to state 91
    READ_ARRAY                     shift and go to state 45
    WRITE_ARRAY                    shift and go to state 34

state 60

    (32) WRITE_ARRAY -> WRITE_ARRAY TkOpenPar . E TkTwoPoints E TkClosePar
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    WRITE_ARRAY                    shift and go to state 34
    E                              shift and go to state 92
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33

state 61

    (65) FOR_LOOP -> TkFor TkId TkIn . E TkTo E TkArrow SUBPROGRAM TkRof
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 93
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 62

    (66) DO_LOOP -> TkDo GUARD TkOd .

    TkCBlock        reduce using rule 66 (DO_LOOP -> TkDo GUARD TkOd .)
    TkSemicolon     reduce using rule 66 (DO_LOOP -> TkDo GUARD TkOd .)
    TkRof           reduce using rule 66 (DO_LOOP -> TkDo GUARD TkOd .)
    TkOd            reduce using rule 66 (DO_LOOP -> TkDo GUARD TkOd .)
    TkFi            reduce using rule 66 (DO_LOOP -> TkDo GUARD TkOd .)
    TkGuard         reduce using rule 66 (DO_LOOP -> TkDo GUARD TkOd .)


state 63

    (69) GUARD -> GUARD TkGuard . E TkArrow SUBPROGRAM
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 94
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 64

    (68) GUARD -> E TkArrow . SUBPROGRAM
    (2) SUBPROGRAM -> . BLOCK
    (3) SUBPROGRAM -> . LIST_INSTRUCTIONS
    (1) BLOCK -> . TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock
    (16) LIST_INSTRUCTIONS -> . INSTRUCTION
    (17) LIST_INSTRUCTIONS -> . LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
    (18) INSTRUCTION -> . ASIG
    (19) INSTRUCTION -> . PRINT
    (20) INSTRUCTION -> . FOR_LOOP
    (21) INSTRUCTION -> . DO_LOOP
    (22) INSTRUCTION -> . CONDITIONAL
    (23) INSTRUCTION -> . TkSkip
    (24) ASIG -> . TkId TkAsig EXPRESSION
    (52) PRINT -> . TkPrint TOPRINT
    (65) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof
    (66) DO_LOOP -> . TkDo GUARD TkOd
    (67) CONDITIONAL -> . TkIf GUARD TkFi

    TkOBlock        shift and go to state 2
    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkFor           shift and go to state 15
    TkDo            shift and go to state 16
    TkIf            shift and go to state 17

    SUBPROGRAM                     shift and go to state 95
    BLOCK                          shift and go to state 96
    LIST_INSTRUCTIONS              shift and go to state 97
    INSTRUCTION                    shift and go to state 6
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    FOR_LOOP                       shift and go to state 9
    DO_LOOP                        shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 65

    (33) E -> E TkMult . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 98
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 66

    (34) E -> E TkPlus . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 99
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 67

    (35) E -> E TkMinus . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 100
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 68

    (36) E -> E TkOr . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 101
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 69

    (37) E -> E TkAnd . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 102
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 70

    (38) E -> E TkLess . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 103
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 71

    (39) E -> E TkLeq . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 104
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 72

    (40) E -> E TkGeq . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 105
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 73

    (41) E -> E TkGreater . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 106
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 74

    (42) E -> E TkEqual . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 107
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 75

    (43) E -> E TkNEqual . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 108
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 76

    (46) E -> TkMinus E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 46 (E -> TkMinus E .)
    TkSemicolon     reduce using rule 46 (E -> TkMinus E .)
    TkComma         reduce using rule 46 (E -> TkMinus E .)
    TkTwoPoints     reduce using rule 46 (E -> TkMinus E .)
    TkClosePar      reduce using rule 46 (E -> TkMinus E .)
    TkMult          reduce using rule 46 (E -> TkMinus E .)
    TkPlus          reduce using rule 46 (E -> TkMinus E .)
    TkMinus         reduce using rule 46 (E -> TkMinus E .)
    TkOr            reduce using rule 46 (E -> TkMinus E .)
    TkAnd           reduce using rule 46 (E -> TkMinus E .)
    TkLess          reduce using rule 46 (E -> TkMinus E .)
    TkLeq           reduce using rule 46 (E -> TkMinus E .)
    TkGeq           reduce using rule 46 (E -> TkMinus E .)
    TkGreater       reduce using rule 46 (E -> TkMinus E .)
    TkEqual         reduce using rule 46 (E -> TkMinus E .)
    TkNEqual        reduce using rule 46 (E -> TkMinus E .)
    TkCBracket      reduce using rule 46 (E -> TkMinus E .)
    TkTo            reduce using rule 46 (E -> TkMinus E .)
    TkArrow         reduce using rule 46 (E -> TkMinus E .)
    TkRof           reduce using rule 46 (E -> TkMinus E .)
    TkOd            reduce using rule 46 (E -> TkMinus E .)
    TkFi            reduce using rule 46 (E -> TkMinus E .)
    TkGuard         reduce using rule 46 (E -> TkMinus E .)

  ! TkMult          [ shift and go to state 65 ]
  ! TkPlus          [ shift and go to state 66 ]
  ! TkMinus         [ shift and go to state 67 ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkLess          [ shift and go to state 70 ]
  ! TkLeq           [ shift and go to state 71 ]
  ! TkGeq           [ shift and go to state 72 ]
  ! TkGreater       [ shift and go to state 73 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 77

    (44) E -> TkOpenPar E . TkClosePar
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkClosePar      shift and go to state 109
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 78

    (45) E -> TkNot E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 45 (E -> TkNot E .)
    TkSemicolon     reduce using rule 45 (E -> TkNot E .)
    TkComma         reduce using rule 45 (E -> TkNot E .)
    TkTwoPoints     reduce using rule 45 (E -> TkNot E .)
    TkClosePar      reduce using rule 45 (E -> TkNot E .)
    TkMult          reduce using rule 45 (E -> TkNot E .)
    TkPlus          reduce using rule 45 (E -> TkNot E .)
    TkMinus         reduce using rule 45 (E -> TkNot E .)
    TkOr            reduce using rule 45 (E -> TkNot E .)
    TkAnd           reduce using rule 45 (E -> TkNot E .)
    TkLess          reduce using rule 45 (E -> TkNot E .)
    TkLeq           reduce using rule 45 (E -> TkNot E .)
    TkGeq           reduce using rule 45 (E -> TkNot E .)
    TkGreater       reduce using rule 45 (E -> TkNot E .)
    TkEqual         reduce using rule 45 (E -> TkNot E .)
    TkNEqual        reduce using rule 45 (E -> TkNot E .)
    TkCBracket      reduce using rule 45 (E -> TkNot E .)
    TkTo            reduce using rule 45 (E -> TkNot E .)
    TkArrow         reduce using rule 45 (E -> TkNot E .)
    TkRof           reduce using rule 45 (E -> TkNot E .)
    TkOd            reduce using rule 45 (E -> TkNot E .)
    TkFi            reduce using rule 45 (E -> TkNot E .)
    TkGuard         reduce using rule 45 (E -> TkNot E .)

  ! TkMult          [ shift and go to state 65 ]
  ! TkPlus          [ shift and go to state 66 ]
  ! TkMinus         [ shift and go to state 67 ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkLess          [ shift and go to state 70 ]
  ! TkLeq           [ shift and go to state 71 ]
  ! TkGeq           [ shift and go to state 72 ]
  ! TkGreater       [ shift and go to state 73 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 79

    (67) CONDITIONAL -> TkIf GUARD TkFi .

    TkCBlock        reduce using rule 67 (CONDITIONAL -> TkIf GUARD TkFi .)
    TkSemicolon     reduce using rule 67 (CONDITIONAL -> TkIf GUARD TkFi .)
    TkRof           reduce using rule 67 (CONDITIONAL -> TkIf GUARD TkFi .)
    TkOd            reduce using rule 67 (CONDITIONAL -> TkIf GUARD TkFi .)
    TkFi            reduce using rule 67 (CONDITIONAL -> TkIf GUARD TkFi .)
    TkGuard         reduce using rule 67 (CONDITIONAL -> TkIf GUARD TkFi .)


state 80

    (7) LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .

    TkSkip          reduce using rule 7 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkId            reduce using rule 7 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkPrint         reduce using rule 7 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkFor           reduce using rule 7 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkDo            reduce using rule 7 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkIf            reduce using rule 7 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkSemicolon     reduce using rule 7 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)


state 81

    (8) VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .

    TkSkip          reduce using rule 8 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkId            reduce using rule 8 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkPrint         reduce using rule 8 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkFor           reduce using rule 8 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkDo            reduce using rule 8 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkIf            reduce using rule 8 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkSemicolon     reduce using rule 8 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)


state 82

    (10) TYPE -> TkInt .

    TkSkip          reduce using rule 10 (TYPE -> TkInt .)
    TkId            reduce using rule 10 (TYPE -> TkInt .)
    TkPrint         reduce using rule 10 (TYPE -> TkInt .)
    TkFor           reduce using rule 10 (TYPE -> TkInt .)
    TkDo            reduce using rule 10 (TYPE -> TkInt .)
    TkIf            reduce using rule 10 (TYPE -> TkInt .)
    TkSemicolon     reduce using rule 10 (TYPE -> TkInt .)


state 83

    (11) TYPE -> TkBool .

    TkSkip          reduce using rule 11 (TYPE -> TkBool .)
    TkId            reduce using rule 11 (TYPE -> TkBool .)
    TkPrint         reduce using rule 11 (TYPE -> TkBool .)
    TkFor           reduce using rule 11 (TYPE -> TkBool .)
    TkDo            reduce using rule 11 (TYPE -> TkBool .)
    TkIf            reduce using rule 11 (TYPE -> TkBool .)
    TkSemicolon     reduce using rule 11 (TYPE -> TkBool .)


state 84

    (12) TYPE -> ARRAY_DECLARATION .

    TkSkip          reduce using rule 12 (TYPE -> ARRAY_DECLARATION .)
    TkId            reduce using rule 12 (TYPE -> ARRAY_DECLARATION .)
    TkPrint         reduce using rule 12 (TYPE -> ARRAY_DECLARATION .)
    TkFor           reduce using rule 12 (TYPE -> ARRAY_DECLARATION .)
    TkDo            reduce using rule 12 (TYPE -> ARRAY_DECLARATION .)
    TkIf            reduce using rule 12 (TYPE -> ARRAY_DECLARATION .)
    TkSemicolon     reduce using rule 12 (TYPE -> ARRAY_DECLARATION .)


state 85

    (13) ARRAY_DECLARATION -> TkArray . TkOBracket NUM TkSoForth NUM TkCBracket

    TkOBracket      shift and go to state 110


state 86

    (9) VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .

    TkSkip          reduce using rule 9 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkId            reduce using rule 9 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkPrint         reduce using rule 9 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkFor           reduce using rule 9 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkDo            reduce using rule 9 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkIf            reduce using rule 9 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkSemicolon     reduce using rule 9 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)


state 87

    (29) CREATE_ARRAY -> E TkComma . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 111
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 88

    (30) CREATE_ARRAY -> CREATE_ARRAY TkComma . E
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 112
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 89

    (54) TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .

    TkCBlock        reduce using rule 54 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkSemicolon     reduce using rule 54 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkConcat        reduce using rule 54 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkRof           reduce using rule 54 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkOd            reduce using rule 54 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkFi            reduce using rule 54 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkGuard         reduce using rule 54 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)


state 90

    (31) WRITE_ARRAY -> TkId TkOpenPar E . TkTwoPoints E TkClosePar
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkTwoPoints     shift and go to state 113
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 91

    (62) READ_ARRAY -> ARRAY TkOBracket E . TkCBracket
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBracket      shift and go to state 114
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 92

    (32) WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E . TkTwoPoints E TkClosePar
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkTwoPoints     shift and go to state 115
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 93

    (65) FOR_LOOP -> TkFor TkId TkIn E . TkTo E TkArrow SUBPROGRAM TkRof
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkTo            shift and go to state 116
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 94

    (69) GUARD -> GUARD TkGuard E . TkArrow SUBPROGRAM
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkArrow         shift and go to state 117
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 95

    (68) GUARD -> E TkArrow SUBPROGRAM .

    TkOd            reduce using rule 68 (GUARD -> E TkArrow SUBPROGRAM .)
    TkFi            reduce using rule 68 (GUARD -> E TkArrow SUBPROGRAM .)
    TkGuard         reduce using rule 68 (GUARD -> E TkArrow SUBPROGRAM .)


state 96

    (2) SUBPROGRAM -> BLOCK .

    TkRof           reduce using rule 2 (SUBPROGRAM -> BLOCK .)
    TkOd            reduce using rule 2 (SUBPROGRAM -> BLOCK .)
    TkFi            reduce using rule 2 (SUBPROGRAM -> BLOCK .)
    TkGuard         reduce using rule 2 (SUBPROGRAM -> BLOCK .)


state 97

    (3) SUBPROGRAM -> LIST_INSTRUCTIONS .
    (17) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS . TkSemicolon INSTRUCTION

    TkRof           reduce using rule 3 (SUBPROGRAM -> LIST_INSTRUCTIONS .)
    TkOd            reduce using rule 3 (SUBPROGRAM -> LIST_INSTRUCTIONS .)
    TkFi            reduce using rule 3 (SUBPROGRAM -> LIST_INSTRUCTIONS .)
    TkGuard         reduce using rule 3 (SUBPROGRAM -> LIST_INSTRUCTIONS .)
    TkSemicolon     shift and go to state 22


state 98

    (33) E -> E TkMult E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 33 (E -> E TkMult E .)
    TkSemicolon     reduce using rule 33 (E -> E TkMult E .)
    TkComma         reduce using rule 33 (E -> E TkMult E .)
    TkTwoPoints     reduce using rule 33 (E -> E TkMult E .)
    TkClosePar      reduce using rule 33 (E -> E TkMult E .)
    TkPlus          reduce using rule 33 (E -> E TkMult E .)
    TkMinus         reduce using rule 33 (E -> E TkMult E .)
    TkOr            reduce using rule 33 (E -> E TkMult E .)
    TkAnd           reduce using rule 33 (E -> E TkMult E .)
    TkLess          reduce using rule 33 (E -> E TkMult E .)
    TkLeq           reduce using rule 33 (E -> E TkMult E .)
    TkGeq           reduce using rule 33 (E -> E TkMult E .)
    TkGreater       reduce using rule 33 (E -> E TkMult E .)
    TkEqual         reduce using rule 33 (E -> E TkMult E .)
    TkNEqual        reduce using rule 33 (E -> E TkMult E .)
    TkCBracket      reduce using rule 33 (E -> E TkMult E .)
    TkTo            reduce using rule 33 (E -> E TkMult E .)
    TkArrow         reduce using rule 33 (E -> E TkMult E .)
    TkRof           reduce using rule 33 (E -> E TkMult E .)
    TkOd            reduce using rule 33 (E -> E TkMult E .)
    TkFi            reduce using rule 33 (E -> E TkMult E .)
    TkGuard         reduce using rule 33 (E -> E TkMult E .)
    TkMult          shift and go to state 65

  ! TkMult          [ reduce using rule 33 (E -> E TkMult E .) ]
  ! TkPlus          [ shift and go to state 66 ]
  ! TkMinus         [ shift and go to state 67 ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkLess          [ shift and go to state 70 ]
  ! TkLeq           [ shift and go to state 71 ]
  ! TkGeq           [ shift and go to state 72 ]
  ! TkGreater       [ shift and go to state 73 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 99

    (34) E -> E TkPlus E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 34 (E -> E TkPlus E .)
    TkSemicolon     reduce using rule 34 (E -> E TkPlus E .)
    TkComma         reduce using rule 34 (E -> E TkPlus E .)
    TkTwoPoints     reduce using rule 34 (E -> E TkPlus E .)
    TkClosePar      reduce using rule 34 (E -> E TkPlus E .)
    TkPlus          reduce using rule 34 (E -> E TkPlus E .)
    TkMinus         reduce using rule 34 (E -> E TkPlus E .)
    TkOr            reduce using rule 34 (E -> E TkPlus E .)
    TkAnd           reduce using rule 34 (E -> E TkPlus E .)
    TkLess          reduce using rule 34 (E -> E TkPlus E .)
    TkLeq           reduce using rule 34 (E -> E TkPlus E .)
    TkGeq           reduce using rule 34 (E -> E TkPlus E .)
    TkGreater       reduce using rule 34 (E -> E TkPlus E .)
    TkEqual         reduce using rule 34 (E -> E TkPlus E .)
    TkNEqual        reduce using rule 34 (E -> E TkPlus E .)
    TkCBracket      reduce using rule 34 (E -> E TkPlus E .)
    TkTo            reduce using rule 34 (E -> E TkPlus E .)
    TkArrow         reduce using rule 34 (E -> E TkPlus E .)
    TkRof           reduce using rule 34 (E -> E TkPlus E .)
    TkOd            reduce using rule 34 (E -> E TkPlus E .)
    TkFi            reduce using rule 34 (E -> E TkPlus E .)
    TkGuard         reduce using rule 34 (E -> E TkPlus E .)
    TkMult          shift and go to state 65

  ! TkMult          [ reduce using rule 34 (E -> E TkPlus E .) ]
  ! TkPlus          [ shift and go to state 66 ]
  ! TkMinus         [ shift and go to state 67 ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkLess          [ shift and go to state 70 ]
  ! TkLeq           [ shift and go to state 71 ]
  ! TkGeq           [ shift and go to state 72 ]
  ! TkGreater       [ shift and go to state 73 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 100

    (35) E -> E TkMinus E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 35 (E -> E TkMinus E .)
    TkSemicolon     reduce using rule 35 (E -> E TkMinus E .)
    TkComma         reduce using rule 35 (E -> E TkMinus E .)
    TkTwoPoints     reduce using rule 35 (E -> E TkMinus E .)
    TkClosePar      reduce using rule 35 (E -> E TkMinus E .)
    TkPlus          reduce using rule 35 (E -> E TkMinus E .)
    TkMinus         reduce using rule 35 (E -> E TkMinus E .)
    TkOr            reduce using rule 35 (E -> E TkMinus E .)
    TkAnd           reduce using rule 35 (E -> E TkMinus E .)
    TkLess          reduce using rule 35 (E -> E TkMinus E .)
    TkLeq           reduce using rule 35 (E -> E TkMinus E .)
    TkGeq           reduce using rule 35 (E -> E TkMinus E .)
    TkGreater       reduce using rule 35 (E -> E TkMinus E .)
    TkEqual         reduce using rule 35 (E -> E TkMinus E .)
    TkNEqual        reduce using rule 35 (E -> E TkMinus E .)
    TkCBracket      reduce using rule 35 (E -> E TkMinus E .)
    TkTo            reduce using rule 35 (E -> E TkMinus E .)
    TkArrow         reduce using rule 35 (E -> E TkMinus E .)
    TkRof           reduce using rule 35 (E -> E TkMinus E .)
    TkOd            reduce using rule 35 (E -> E TkMinus E .)
    TkFi            reduce using rule 35 (E -> E TkMinus E .)
    TkGuard         reduce using rule 35 (E -> E TkMinus E .)
    TkMult          shift and go to state 65

  ! TkMult          [ reduce using rule 35 (E -> E TkMinus E .) ]
  ! TkPlus          [ shift and go to state 66 ]
  ! TkMinus         [ shift and go to state 67 ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkLess          [ shift and go to state 70 ]
  ! TkLeq           [ shift and go to state 71 ]
  ! TkGeq           [ shift and go to state 72 ]
  ! TkGreater       [ shift and go to state 73 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 101

    (36) E -> E TkOr E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 36 (E -> E TkOr E .)
    TkSemicolon     reduce using rule 36 (E -> E TkOr E .)
    TkComma         reduce using rule 36 (E -> E TkOr E .)
    TkTwoPoints     reduce using rule 36 (E -> E TkOr E .)
    TkClosePar      reduce using rule 36 (E -> E TkOr E .)
    TkOr            reduce using rule 36 (E -> E TkOr E .)
    TkCBracket      reduce using rule 36 (E -> E TkOr E .)
    TkTo            reduce using rule 36 (E -> E TkOr E .)
    TkArrow         reduce using rule 36 (E -> E TkOr E .)
    TkRof           reduce using rule 36 (E -> E TkOr E .)
    TkOd            reduce using rule 36 (E -> E TkOr E .)
    TkFi            reduce using rule 36 (E -> E TkOr E .)
    TkGuard         reduce using rule 36 (E -> E TkOr E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75

  ! TkMult          [ reduce using rule 36 (E -> E TkOr E .) ]
  ! TkPlus          [ reduce using rule 36 (E -> E TkOr E .) ]
  ! TkMinus         [ reduce using rule 36 (E -> E TkOr E .) ]
  ! TkAnd           [ reduce using rule 36 (E -> E TkOr E .) ]
  ! TkLess          [ reduce using rule 36 (E -> E TkOr E .) ]
  ! TkLeq           [ reduce using rule 36 (E -> E TkOr E .) ]
  ! TkGeq           [ reduce using rule 36 (E -> E TkOr E .) ]
  ! TkGreater       [ reduce using rule 36 (E -> E TkOr E .) ]
  ! TkEqual         [ reduce using rule 36 (E -> E TkOr E .) ]
  ! TkNEqual        [ reduce using rule 36 (E -> E TkOr E .) ]
  ! TkOr            [ shift and go to state 68 ]


state 102

    (37) E -> E TkAnd E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 37 (E -> E TkAnd E .)
    TkSemicolon     reduce using rule 37 (E -> E TkAnd E .)
    TkComma         reduce using rule 37 (E -> E TkAnd E .)
    TkTwoPoints     reduce using rule 37 (E -> E TkAnd E .)
    TkClosePar      reduce using rule 37 (E -> E TkAnd E .)
    TkOr            reduce using rule 37 (E -> E TkAnd E .)
    TkAnd           reduce using rule 37 (E -> E TkAnd E .)
    TkCBracket      reduce using rule 37 (E -> E TkAnd E .)
    TkTo            reduce using rule 37 (E -> E TkAnd E .)
    TkArrow         reduce using rule 37 (E -> E TkAnd E .)
    TkRof           reduce using rule 37 (E -> E TkAnd E .)
    TkOd            reduce using rule 37 (E -> E TkAnd E .)
    TkFi            reduce using rule 37 (E -> E TkAnd E .)
    TkGuard         reduce using rule 37 (E -> E TkAnd E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75

  ! TkMult          [ reduce using rule 37 (E -> E TkAnd E .) ]
  ! TkPlus          [ reduce using rule 37 (E -> E TkAnd E .) ]
  ! TkMinus         [ reduce using rule 37 (E -> E TkAnd E .) ]
  ! TkLess          [ reduce using rule 37 (E -> E TkAnd E .) ]
  ! TkLeq           [ reduce using rule 37 (E -> E TkAnd E .) ]
  ! TkGeq           [ reduce using rule 37 (E -> E TkAnd E .) ]
  ! TkGreater       [ reduce using rule 37 (E -> E TkAnd E .) ]
  ! TkEqual         [ reduce using rule 37 (E -> E TkAnd E .) ]
  ! TkNEqual        [ reduce using rule 37 (E -> E TkAnd E .) ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]


state 103

    (38) E -> E TkLess E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 38 (E -> E TkLess E .)
    TkSemicolon     reduce using rule 38 (E -> E TkLess E .)
    TkComma         reduce using rule 38 (E -> E TkLess E .)
    TkTwoPoints     reduce using rule 38 (E -> E TkLess E .)
    TkClosePar      reduce using rule 38 (E -> E TkLess E .)
    TkOr            reduce using rule 38 (E -> E TkLess E .)
    TkAnd           reduce using rule 38 (E -> E TkLess E .)
    TkLess          reduce using rule 38 (E -> E TkLess E .)
    TkLeq           reduce using rule 38 (E -> E TkLess E .)
    TkGeq           reduce using rule 38 (E -> E TkLess E .)
    TkGreater       reduce using rule 38 (E -> E TkLess E .)
    TkEqual         reduce using rule 38 (E -> E TkLess E .)
    TkNEqual        reduce using rule 38 (E -> E TkLess E .)
    TkCBracket      reduce using rule 38 (E -> E TkLess E .)
    TkTo            reduce using rule 38 (E -> E TkLess E .)
    TkArrow         reduce using rule 38 (E -> E TkLess E .)
    TkRof           reduce using rule 38 (E -> E TkLess E .)
    TkOd            reduce using rule 38 (E -> E TkLess E .)
    TkFi            reduce using rule 38 (E -> E TkLess E .)
    TkGuard         reduce using rule 38 (E -> E TkLess E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67

  ! TkMult          [ reduce using rule 38 (E -> E TkLess E .) ]
  ! TkPlus          [ reduce using rule 38 (E -> E TkLess E .) ]
  ! TkMinus         [ reduce using rule 38 (E -> E TkLess E .) ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkLess          [ shift and go to state 70 ]
  ! TkLeq           [ shift and go to state 71 ]
  ! TkGeq           [ shift and go to state 72 ]
  ! TkGreater       [ shift and go to state 73 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 104

    (39) E -> E TkLeq E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 39 (E -> E TkLeq E .)
    TkSemicolon     reduce using rule 39 (E -> E TkLeq E .)
    TkComma         reduce using rule 39 (E -> E TkLeq E .)
    TkTwoPoints     reduce using rule 39 (E -> E TkLeq E .)
    TkClosePar      reduce using rule 39 (E -> E TkLeq E .)
    TkOr            reduce using rule 39 (E -> E TkLeq E .)
    TkAnd           reduce using rule 39 (E -> E TkLeq E .)
    TkLess          reduce using rule 39 (E -> E TkLeq E .)
    TkLeq           reduce using rule 39 (E -> E TkLeq E .)
    TkGeq           reduce using rule 39 (E -> E TkLeq E .)
    TkGreater       reduce using rule 39 (E -> E TkLeq E .)
    TkEqual         reduce using rule 39 (E -> E TkLeq E .)
    TkNEqual        reduce using rule 39 (E -> E TkLeq E .)
    TkCBracket      reduce using rule 39 (E -> E TkLeq E .)
    TkTo            reduce using rule 39 (E -> E TkLeq E .)
    TkArrow         reduce using rule 39 (E -> E TkLeq E .)
    TkRof           reduce using rule 39 (E -> E TkLeq E .)
    TkOd            reduce using rule 39 (E -> E TkLeq E .)
    TkFi            reduce using rule 39 (E -> E TkLeq E .)
    TkGuard         reduce using rule 39 (E -> E TkLeq E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67

  ! TkMult          [ reduce using rule 39 (E -> E TkLeq E .) ]
  ! TkPlus          [ reduce using rule 39 (E -> E TkLeq E .) ]
  ! TkMinus         [ reduce using rule 39 (E -> E TkLeq E .) ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkLess          [ shift and go to state 70 ]
  ! TkLeq           [ shift and go to state 71 ]
  ! TkGeq           [ shift and go to state 72 ]
  ! TkGreater       [ shift and go to state 73 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 105

    (40) E -> E TkGeq E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 40 (E -> E TkGeq E .)
    TkSemicolon     reduce using rule 40 (E -> E TkGeq E .)
    TkComma         reduce using rule 40 (E -> E TkGeq E .)
    TkTwoPoints     reduce using rule 40 (E -> E TkGeq E .)
    TkClosePar      reduce using rule 40 (E -> E TkGeq E .)
    TkOr            reduce using rule 40 (E -> E TkGeq E .)
    TkAnd           reduce using rule 40 (E -> E TkGeq E .)
    TkLess          reduce using rule 40 (E -> E TkGeq E .)
    TkLeq           reduce using rule 40 (E -> E TkGeq E .)
    TkGeq           reduce using rule 40 (E -> E TkGeq E .)
    TkGreater       reduce using rule 40 (E -> E TkGeq E .)
    TkEqual         reduce using rule 40 (E -> E TkGeq E .)
    TkNEqual        reduce using rule 40 (E -> E TkGeq E .)
    TkCBracket      reduce using rule 40 (E -> E TkGeq E .)
    TkTo            reduce using rule 40 (E -> E TkGeq E .)
    TkArrow         reduce using rule 40 (E -> E TkGeq E .)
    TkRof           reduce using rule 40 (E -> E TkGeq E .)
    TkOd            reduce using rule 40 (E -> E TkGeq E .)
    TkFi            reduce using rule 40 (E -> E TkGeq E .)
    TkGuard         reduce using rule 40 (E -> E TkGeq E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67

  ! TkMult          [ reduce using rule 40 (E -> E TkGeq E .) ]
  ! TkPlus          [ reduce using rule 40 (E -> E TkGeq E .) ]
  ! TkMinus         [ reduce using rule 40 (E -> E TkGeq E .) ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkLess          [ shift and go to state 70 ]
  ! TkLeq           [ shift and go to state 71 ]
  ! TkGeq           [ shift and go to state 72 ]
  ! TkGreater       [ shift and go to state 73 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 106

    (41) E -> E TkGreater E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 41 (E -> E TkGreater E .)
    TkSemicolon     reduce using rule 41 (E -> E TkGreater E .)
    TkComma         reduce using rule 41 (E -> E TkGreater E .)
    TkTwoPoints     reduce using rule 41 (E -> E TkGreater E .)
    TkClosePar      reduce using rule 41 (E -> E TkGreater E .)
    TkOr            reduce using rule 41 (E -> E TkGreater E .)
    TkAnd           reduce using rule 41 (E -> E TkGreater E .)
    TkLess          reduce using rule 41 (E -> E TkGreater E .)
    TkLeq           reduce using rule 41 (E -> E TkGreater E .)
    TkGeq           reduce using rule 41 (E -> E TkGreater E .)
    TkGreater       reduce using rule 41 (E -> E TkGreater E .)
    TkEqual         reduce using rule 41 (E -> E TkGreater E .)
    TkNEqual        reduce using rule 41 (E -> E TkGreater E .)
    TkCBracket      reduce using rule 41 (E -> E TkGreater E .)
    TkTo            reduce using rule 41 (E -> E TkGreater E .)
    TkArrow         reduce using rule 41 (E -> E TkGreater E .)
    TkRof           reduce using rule 41 (E -> E TkGreater E .)
    TkOd            reduce using rule 41 (E -> E TkGreater E .)
    TkFi            reduce using rule 41 (E -> E TkGreater E .)
    TkGuard         reduce using rule 41 (E -> E TkGreater E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67

  ! TkMult          [ reduce using rule 41 (E -> E TkGreater E .) ]
  ! TkPlus          [ reduce using rule 41 (E -> E TkGreater E .) ]
  ! TkMinus         [ reduce using rule 41 (E -> E TkGreater E .) ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkLess          [ shift and go to state 70 ]
  ! TkLeq           [ shift and go to state 71 ]
  ! TkGeq           [ shift and go to state 72 ]
  ! TkGreater       [ shift and go to state 73 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 107

    (42) E -> E TkEqual E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 42 (E -> E TkEqual E .)
    TkSemicolon     reduce using rule 42 (E -> E TkEqual E .)
    TkComma         reduce using rule 42 (E -> E TkEqual E .)
    TkTwoPoints     reduce using rule 42 (E -> E TkEqual E .)
    TkClosePar      reduce using rule 42 (E -> E TkEqual E .)
    TkOr            reduce using rule 42 (E -> E TkEqual E .)
    TkAnd           reduce using rule 42 (E -> E TkEqual E .)
    TkEqual         reduce using rule 42 (E -> E TkEqual E .)
    TkNEqual        reduce using rule 42 (E -> E TkEqual E .)
    TkCBracket      reduce using rule 42 (E -> E TkEqual E .)
    TkTo            reduce using rule 42 (E -> E TkEqual E .)
    TkArrow         reduce using rule 42 (E -> E TkEqual E .)
    TkRof           reduce using rule 42 (E -> E TkEqual E .)
    TkOd            reduce using rule 42 (E -> E TkEqual E .)
    TkFi            reduce using rule 42 (E -> E TkEqual E .)
    TkGuard         reduce using rule 42 (E -> E TkEqual E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73

  ! TkMult          [ reduce using rule 42 (E -> E TkEqual E .) ]
  ! TkPlus          [ reduce using rule 42 (E -> E TkEqual E .) ]
  ! TkMinus         [ reduce using rule 42 (E -> E TkEqual E .) ]
  ! TkLess          [ reduce using rule 42 (E -> E TkEqual E .) ]
  ! TkLeq           [ reduce using rule 42 (E -> E TkEqual E .) ]
  ! TkGeq           [ reduce using rule 42 (E -> E TkEqual E .) ]
  ! TkGreater       [ reduce using rule 42 (E -> E TkEqual E .) ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 108

    (43) E -> E TkNEqual E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 43 (E -> E TkNEqual E .)
    TkSemicolon     reduce using rule 43 (E -> E TkNEqual E .)
    TkComma         reduce using rule 43 (E -> E TkNEqual E .)
    TkTwoPoints     reduce using rule 43 (E -> E TkNEqual E .)
    TkClosePar      reduce using rule 43 (E -> E TkNEqual E .)
    TkOr            reduce using rule 43 (E -> E TkNEqual E .)
    TkAnd           reduce using rule 43 (E -> E TkNEqual E .)
    TkEqual         reduce using rule 43 (E -> E TkNEqual E .)
    TkNEqual        reduce using rule 43 (E -> E TkNEqual E .)
    TkCBracket      reduce using rule 43 (E -> E TkNEqual E .)
    TkTo            reduce using rule 43 (E -> E TkNEqual E .)
    TkArrow         reduce using rule 43 (E -> E TkNEqual E .)
    TkRof           reduce using rule 43 (E -> E TkNEqual E .)
    TkOd            reduce using rule 43 (E -> E TkNEqual E .)
    TkFi            reduce using rule 43 (E -> E TkNEqual E .)
    TkGuard         reduce using rule 43 (E -> E TkNEqual E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73

  ! TkMult          [ reduce using rule 43 (E -> E TkNEqual E .) ]
  ! TkPlus          [ reduce using rule 43 (E -> E TkNEqual E .) ]
  ! TkMinus         [ reduce using rule 43 (E -> E TkNEqual E .) ]
  ! TkLess          [ reduce using rule 43 (E -> E TkNEqual E .) ]
  ! TkLeq           [ reduce using rule 43 (E -> E TkNEqual E .) ]
  ! TkGeq           [ reduce using rule 43 (E -> E TkNEqual E .) ]
  ! TkGreater       [ reduce using rule 43 (E -> E TkNEqual E .) ]
  ! TkOr            [ shift and go to state 68 ]
  ! TkAnd           [ shift and go to state 69 ]
  ! TkEqual         [ shift and go to state 74 ]
  ! TkNEqual        [ shift and go to state 75 ]


state 109

    (44) E -> TkOpenPar E TkClosePar .

    TkCBlock        reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkSemicolon     reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkComma         reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkTwoPoints     reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkClosePar      reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkMult          reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkPlus          reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkMinus         reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkOr            reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkAnd           reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkLess          reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkLeq           reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkGeq           reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkGreater       reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkEqual         reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkNEqual        reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkCBracket      reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkTo            reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkArrow         reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkRof           reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkOd            reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkFi            reduce using rule 44 (E -> TkOpenPar E TkClosePar .)
    TkGuard         reduce using rule 44 (E -> TkOpenPar E TkClosePar .)


state 110

    (13) ARRAY_DECLARATION -> TkArray TkOBracket . NUM TkSoForth NUM TkCBracket
    (14) NUM -> . TkNum
    (15) NUM -> . TkMinus TkNum

    TkNum           shift and go to state 119
    TkMinus         shift and go to state 120

    NUM                            shift and go to state 118

state 111

    (29) CREATE_ARRAY -> E TkComma E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 29 (CREATE_ARRAY -> E TkComma E .)
    TkSemicolon     reduce using rule 29 (CREATE_ARRAY -> E TkComma E .)
    TkComma         reduce using rule 29 (CREATE_ARRAY -> E TkComma E .)
    TkRof           reduce using rule 29 (CREATE_ARRAY -> E TkComma E .)
    TkOd            reduce using rule 29 (CREATE_ARRAY -> E TkComma E .)
    TkFi            reduce using rule 29 (CREATE_ARRAY -> E TkComma E .)
    TkGuard         reduce using rule 29 (CREATE_ARRAY -> E TkComma E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 112

    (30) CREATE_ARRAY -> CREATE_ARRAY TkComma E .
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkCBlock        reduce using rule 30 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkSemicolon     reduce using rule 30 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkComma         reduce using rule 30 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkRof           reduce using rule 30 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkOd            reduce using rule 30 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkFi            reduce using rule 30 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkGuard         reduce using rule 30 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 113

    (31) WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints . E TkClosePar
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 121
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 114

    (62) READ_ARRAY -> ARRAY TkOBracket E TkCBracket .

    TkCBlock        reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkSemicolon     reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkComma         reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkTwoPoints     reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkClosePar      reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkMult          reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkPlus          reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkMinus         reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkOr            reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkAnd           reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkLess          reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkLeq           reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkGeq           reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkGreater       reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkEqual         reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkNEqual        reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkConcat        reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkCBracket      reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkTo            reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkArrow         reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkRof           reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkOd            reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkFi            reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)
    TkGuard         reduce using rule 62 (READ_ARRAY -> ARRAY TkOBracket E TkCBracket .)


state 115

    (32) WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints . E TkClosePar
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    WRITE_ARRAY                    shift and go to state 34
    E                              shift and go to state 122
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33

state 116

    (65) FOR_LOOP -> TkFor TkId TkIn E TkTo . E TkArrow SUBPROGRAM TkRof
    (33) E -> . E TkMult E
    (34) E -> . E TkPlus E
    (35) E -> . E TkMinus E
    (36) E -> . E TkOr E
    (37) E -> . E TkAnd E
    (38) E -> . E TkLess E
    (39) E -> . E TkLeq E
    (40) E -> . E TkGeq E
    (41) E -> . E TkGreater E
    (42) E -> . E TkEqual E
    (43) E -> . E TkNEqual E
    (44) E -> . TkOpenPar E TkClosePar
    (45) E -> . TkNot E
    (46) E -> . TkMinus E
    (47) E -> . TkNum
    (48) E -> . TkId
    (49) E -> . TkTrue
    (50) E -> . TkFalse
    (51) E -> . READ_ARRAY
    (62) READ_ARRAY -> . ARRAY TkOBracket E TkCBracket
    (63) ARRAY -> . TkId
    (64) ARRAY -> . WRITE_ARRAY
    (31) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (32) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 39
    TkNot           shift and go to state 40
    TkMinus         shift and go to state 38
    TkNum           shift and go to state 41
    TkId            shift and go to state 42
    TkTrue          shift and go to state 43
    TkFalse         shift and go to state 44

    E                              shift and go to state 123
    READ_ARRAY                     shift and go to state 45
    ARRAY                          shift and go to state 33
    WRITE_ARRAY                    shift and go to state 34

state 117

    (69) GUARD -> GUARD TkGuard E TkArrow . SUBPROGRAM
    (2) SUBPROGRAM -> . BLOCK
    (3) SUBPROGRAM -> . LIST_INSTRUCTIONS
    (1) BLOCK -> . TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock
    (16) LIST_INSTRUCTIONS -> . INSTRUCTION
    (17) LIST_INSTRUCTIONS -> . LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
    (18) INSTRUCTION -> . ASIG
    (19) INSTRUCTION -> . PRINT
    (20) INSTRUCTION -> . FOR_LOOP
    (21) INSTRUCTION -> . DO_LOOP
    (22) INSTRUCTION -> . CONDITIONAL
    (23) INSTRUCTION -> . TkSkip
    (24) ASIG -> . TkId TkAsig EXPRESSION
    (52) PRINT -> . TkPrint TOPRINT
    (65) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof
    (66) DO_LOOP -> . TkDo GUARD TkOd
    (67) CONDITIONAL -> . TkIf GUARD TkFi

    TkOBlock        shift and go to state 2
    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkFor           shift and go to state 15
    TkDo            shift and go to state 16
    TkIf            shift and go to state 17

    SUBPROGRAM                     shift and go to state 124
    BLOCK                          shift and go to state 96
    LIST_INSTRUCTIONS              shift and go to state 97
    INSTRUCTION                    shift and go to state 6
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    FOR_LOOP                       shift and go to state 9
    DO_LOOP                        shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 118

    (13) ARRAY_DECLARATION -> TkArray TkOBracket NUM . TkSoForth NUM TkCBracket

    TkSoForth       shift and go to state 125


state 119

    (14) NUM -> TkNum .

    TkSoForth       reduce using rule 14 (NUM -> TkNum .)
    TkCBracket      reduce using rule 14 (NUM -> TkNum .)


state 120

    (15) NUM -> TkMinus . TkNum

    TkNum           shift and go to state 126


state 121

    (31) WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E . TkClosePar
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkClosePar      shift and go to state 127
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 122

    (32) WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E . TkClosePar
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkClosePar      shift and go to state 128
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 123

    (65) FOR_LOOP -> TkFor TkId TkIn E TkTo E . TkArrow SUBPROGRAM TkRof
    (33) E -> E . TkMult E
    (34) E -> E . TkPlus E
    (35) E -> E . TkMinus E
    (36) E -> E . TkOr E
    (37) E -> E . TkAnd E
    (38) E -> E . TkLess E
    (39) E -> E . TkLeq E
    (40) E -> E . TkGeq E
    (41) E -> E . TkGreater E
    (42) E -> E . TkEqual E
    (43) E -> E . TkNEqual E

    TkArrow         shift and go to state 129
    TkMult          shift and go to state 65
    TkPlus          shift and go to state 66
    TkMinus         shift and go to state 67
    TkOr            shift and go to state 68
    TkAnd           shift and go to state 69
    TkLess          shift and go to state 70
    TkLeq           shift and go to state 71
    TkGeq           shift and go to state 72
    TkGreater       shift and go to state 73
    TkEqual         shift and go to state 74
    TkNEqual        shift and go to state 75


state 124

    (69) GUARD -> GUARD TkGuard E TkArrow SUBPROGRAM .

    TkOd            reduce using rule 69 (GUARD -> GUARD TkGuard E TkArrow SUBPROGRAM .)
    TkFi            reduce using rule 69 (GUARD -> GUARD TkGuard E TkArrow SUBPROGRAM .)
    TkGuard         reduce using rule 69 (GUARD -> GUARD TkGuard E TkArrow SUBPROGRAM .)


state 125

    (13) ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth . NUM TkCBracket
    (14) NUM -> . TkNum
    (15) NUM -> . TkMinus TkNum

    TkNum           shift and go to state 119
    TkMinus         shift and go to state 120

    NUM                            shift and go to state 130

state 126

    (15) NUM -> TkMinus TkNum .

    TkSoForth       reduce using rule 15 (NUM -> TkMinus TkNum .)
    TkCBracket      reduce using rule 15 (NUM -> TkMinus TkNum .)


state 127

    (31) WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .

    TkCBlock        reduce using rule 31 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkSemicolon     reduce using rule 31 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkOpenPar       reduce using rule 31 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkOBracket      reduce using rule 31 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkRof           reduce using rule 31 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkOd            reduce using rule 31 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkFi            reduce using rule 31 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkGuard         reduce using rule 31 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)


state 128

    (32) WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .

    TkCBlock        reduce using rule 32 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkSemicolon     reduce using rule 32 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkOpenPar       reduce using rule 32 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkOBracket      reduce using rule 32 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkRof           reduce using rule 32 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkOd            reduce using rule 32 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkFi            reduce using rule 32 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkGuard         reduce using rule 32 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)


state 129

    (65) FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow . SUBPROGRAM TkRof
    (2) SUBPROGRAM -> . BLOCK
    (3) SUBPROGRAM -> . LIST_INSTRUCTIONS
    (1) BLOCK -> . TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock
    (16) LIST_INSTRUCTIONS -> . INSTRUCTION
    (17) LIST_INSTRUCTIONS -> . LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
    (18) INSTRUCTION -> . ASIG
    (19) INSTRUCTION -> . PRINT
    (20) INSTRUCTION -> . FOR_LOOP
    (21) INSTRUCTION -> . DO_LOOP
    (22) INSTRUCTION -> . CONDITIONAL
    (23) INSTRUCTION -> . TkSkip
    (24) ASIG -> . TkId TkAsig EXPRESSION
    (52) PRINT -> . TkPrint TOPRINT
    (65) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof
    (66) DO_LOOP -> . TkDo GUARD TkOd
    (67) CONDITIONAL -> . TkIf GUARD TkFi

    TkOBlock        shift and go to state 2
    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkFor           shift and go to state 15
    TkDo            shift and go to state 16
    TkIf            shift and go to state 17

    SUBPROGRAM                     shift and go to state 131
    BLOCK                          shift and go to state 96
    LIST_INSTRUCTIONS              shift and go to state 97
    INSTRUCTION                    shift and go to state 6
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    FOR_LOOP                       shift and go to state 9
    DO_LOOP                        shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 130

    (13) ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM . TkCBracket

    TkCBracket      shift and go to state 132


state 131

    (65) FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM . TkRof

    TkRof           shift and go to state 133


state 132

    (13) ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket .

    TkSkip          reduce using rule 13 (ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket .)
    TkId            reduce using rule 13 (ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket .)
    TkPrint         reduce using rule 13 (ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket .)
    TkFor           reduce using rule 13 (ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket .)
    TkDo            reduce using rule 13 (ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket .)
    TkIf            reduce using rule 13 (ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket .)
    TkSemicolon     reduce using rule 13 (ARRAY_DECLARATION -> TkArray TkOBracket NUM TkSoForth NUM TkCBracket .)


state 133

    (65) FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof .

    TkCBlock        reduce using rule 65 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof .)
    TkSemicolon     reduce using rule 65 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof .)
    TkRof           reduce using rule 65 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof .)
    TkOd            reduce using rule 65 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof .)
    TkFi            reduce using rule 65 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof .)
    TkGuard         reduce using rule 65 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow SUBPROGRAM TkRof .)

