Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BLOCK
Rule 1     BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock
Rule 2     DECLARE -> TkDeclare LIST_DECLARE
Rule 3     DECLARE -> <empty>
Rule 4     LIST_DECLARE -> VARIABLE_DECLARATION
Rule 5     LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION
Rule 6     VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE
Rule 7     VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION
Rule 8     TYPE -> TkInt
Rule 9     TYPE -> TkBool
Rule 10    TYPE -> ARRAY_DECLARATION
Rule 11    ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket
Rule 12    LIST_INSTRUCTIONS -> INSTRUCTION
Rule 13    LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
Rule 14    INSTRUCTION -> ASIG
Rule 15    INSTRUCTION -> PRINT
Rule 16    INSTRUCTION -> DO_LOOP
Rule 17    INSTRUCTION -> FOR_LOOP
Rule 18    INSTRUCTION -> CONDITIONAL
Rule 19    INSTRUCTION -> TkSkip
Rule 20    ASIG -> TkId TkAsig EXPRESSION
Rule 21    EXPRESSION -> E
Rule 22    EXPRESSION -> ASIG_ARRAY
Rule 23    ASIG_ARRAY -> CREATE_ARRAY
Rule 24    ASIG_ARRAY -> WRITE_ARRAY
Rule 25    CREATE_ARRAY -> E TkComma E
Rule 26    CREATE_ARRAY -> CREATE_ARRAY TkComma E
Rule 27    WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar
Rule 28    WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar
Rule 29    E -> E TkMult E
Rule 30    E -> E TkPlus E
Rule 31    E -> E TkMinus E
Rule 32    E -> E TkOr E
Rule 33    E -> E TkAnd E
Rule 34    E -> E TkLess E
Rule 35    E -> E TkLeq E
Rule 36    E -> E TkGeq E
Rule 37    E -> E TkGreater E
Rule 38    E -> E TkEqual E
Rule 39    E -> E TkNEqual E
Rule 40    E -> TkOpenPar E TkClosePar
Rule 41    E -> TkNot E
Rule 42    E -> TkMinus E
Rule 43    E -> TkNum
Rule 44    E -> TkId
Rule 45    E -> TkTrue
Rule 46    E -> TkFalse
Rule 47    E -> READ_ARRAY
Rule 48    PRINT -> TkPrint TOPRINT
Rule 49    TOPRINT -> EXPRESSION_TO_PRINT
Rule 50    TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT
Rule 51    EXPRESSION_TO_PRINT -> TkId
Rule 52    EXPRESSION_TO_PRINT -> TkString
Rule 53    EXPRESSION_TO_PRINT -> TkNum
Rule 54    EXPRESSION_TO_PRINT -> TkTrue
Rule 55    EXPRESSION_TO_PRINT -> TkFalse
Rule 56    EXPRESSION_TO_PRINT -> READ_ARRAY
Rule 57    READ_ARRAY -> TkId TkOBracket E TkCBracket
Rule 58    DO_LOOP -> TkDo E TkArrow LIST_INSTRUCTIONS TkOd
Rule 59    FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof
Rule 60    CONDITIONAL -> TkIf GUARD TkFi
Rule 61    GUARD -> E TkArrow LIST_INSTRUCTIONS
Rule 62    GUARD -> GUARD TkGuard E TkArrow LIST_INSTRUCTIONS

Terminals, with rules where they appear

TkAnd                : 33
TkArray              : 11
TkArrow              : 58 59 61 62
TkAsig               : 20
TkBool               : 9
TkCBlock             : 1
TkCBracket           : 11 57
TkClosePar           : 27 28 40
TkComma              : 7 25 26
TkConcat             : 50
TkDeclare            : 2
TkDo                 : 58
TkEqual              : 38
TkFalse              : 46 55
TkFi                 : 60
TkFor                : 59
TkGeq                : 36
TkGreater            : 37
TkGuard              : 62
TkId                 : 6 7 20 27 44 51 57 59
TkIf                 : 60
TkIn                 : 59
TkInt                : 8
TkLeq                : 35
TkLess               : 34
TkMinus              : 31 42
TkMult               : 29
TkNEqual             : 39
TkNot                : 41
TkNum                : 11 11 43 53
TkOBlock             : 1
TkOBracket           : 11 57
TkOd                 : 58
TkOpenPar            : 27 28 40
TkOr                 : 32
TkPlus               : 30
TkPrint              : 48
TkRof                : 59
TkSemicolon          : 5 13
TkSkip               : 19
TkSoForth            : 11
TkString             : 52
TkTo                 : 59
TkTrue               : 45 54
TkTwoPoints          : 6 27 28
error                : 

Nonterminals, with rules where they appear

ARRAY_DECLARATION    : 10
ASIG                 : 14
ASIG_ARRAY           : 22
BLOCK                : 0
CONDITIONAL          : 18
CREATE_ARRAY         : 23 26
DECLARE              : 1
DO_LOOP              : 16
E                    : 21 25 25 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 41 42 57 58 59 59 61 62
EXPRESSION           : 20
EXPRESSION_TO_PRINT  : 49 50
FOR_LOOP             : 17
GUARD                : 60 62
INSTRUCTION          : 12 13
LIST_DECLARE         : 2 5
LIST_INSTRUCTIONS    : 1 13 58 59 61 62
PRINT                : 15
READ_ARRAY           : 47 56
TOPRINT              : 48 50
TYPE                 : 6
VARIABLE_DECLARATION : 4 5 7
WRITE_ARRAY          : 24 28

Parsing method: LALR

state 0

    (0) S' -> . BLOCK
    (1) BLOCK -> . TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock

    TkOBlock        shift and go to state 2

    BLOCK                          shift and go to state 1

state 1

    (0) S' -> BLOCK .



state 2

    (1) BLOCK -> TkOBlock . DECLARE LIST_INSTRUCTIONS TkCBlock
    (2) DECLARE -> . TkDeclare LIST_DECLARE
    (3) DECLARE -> .

    TkDeclare       shift and go to state 4
    TkSkip          reduce using rule 3 (DECLARE -> .)
    TkId            reduce using rule 3 (DECLARE -> .)
    TkPrint         reduce using rule 3 (DECLARE -> .)
    TkDo            reduce using rule 3 (DECLARE -> .)
    TkFor           reduce using rule 3 (DECLARE -> .)
    TkIf            reduce using rule 3 (DECLARE -> .)

    DECLARE                        shift and go to state 3

state 3

    (1) BLOCK -> TkOBlock DECLARE . LIST_INSTRUCTIONS TkCBlock
    (12) LIST_INSTRUCTIONS -> . INSTRUCTION
    (13) LIST_INSTRUCTIONS -> . LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
    (14) INSTRUCTION -> . ASIG
    (15) INSTRUCTION -> . PRINT
    (16) INSTRUCTION -> . DO_LOOP
    (17) INSTRUCTION -> . FOR_LOOP
    (18) INSTRUCTION -> . CONDITIONAL
    (19) INSTRUCTION -> . TkSkip
    (20) ASIG -> . TkId TkAsig EXPRESSION
    (48) PRINT -> . TkPrint TOPRINT
    (58) DO_LOOP -> . TkDo E TkArrow LIST_INSTRUCTIONS TkOd
    (59) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof
    (60) CONDITIONAL -> . TkIf GUARD TkFi

    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkDo            shift and go to state 15
    TkFor           shift and go to state 16
    TkIf            shift and go to state 17

    LIST_INSTRUCTIONS              shift and go to state 5
    INSTRUCTION                    shift and go to state 6
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    DO_LOOP                        shift and go to state 9
    FOR_LOOP                       shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 4

    (2) DECLARE -> TkDeclare . LIST_DECLARE
    (4) LIST_DECLARE -> . VARIABLE_DECLARATION
    (5) LIST_DECLARE -> . LIST_DECLARE TkSemicolon VARIABLE_DECLARATION
    (6) VARIABLE_DECLARATION -> . TkId TkTwoPoints TYPE
    (7) VARIABLE_DECLARATION -> . TkId TkComma VARIABLE_DECLARATION

    TkId            shift and go to state 20

    LIST_DECLARE                   shift and go to state 18
    VARIABLE_DECLARATION           shift and go to state 19

state 5

    (1) BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS . TkCBlock
    (13) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS . TkSemicolon INSTRUCTION

    TkCBlock        shift and go to state 21
    TkSemicolon     shift and go to state 22


state 6

    (12) LIST_INSTRUCTIONS -> INSTRUCTION .

    TkCBlock        reduce using rule 12 (LIST_INSTRUCTIONS -> INSTRUCTION .)
    TkSemicolon     reduce using rule 12 (LIST_INSTRUCTIONS -> INSTRUCTION .)
    TkOd            reduce using rule 12 (LIST_INSTRUCTIONS -> INSTRUCTION .)
    TkFi            reduce using rule 12 (LIST_INSTRUCTIONS -> INSTRUCTION .)
    TkGuard         reduce using rule 12 (LIST_INSTRUCTIONS -> INSTRUCTION .)
    TkRof           reduce using rule 12 (LIST_INSTRUCTIONS -> INSTRUCTION .)


state 7

    (14) INSTRUCTION -> ASIG .

    TkCBlock        reduce using rule 14 (INSTRUCTION -> ASIG .)
    TkSemicolon     reduce using rule 14 (INSTRUCTION -> ASIG .)
    TkOd            reduce using rule 14 (INSTRUCTION -> ASIG .)
    TkFi            reduce using rule 14 (INSTRUCTION -> ASIG .)
    TkGuard         reduce using rule 14 (INSTRUCTION -> ASIG .)
    TkRof           reduce using rule 14 (INSTRUCTION -> ASIG .)


state 8

    (15) INSTRUCTION -> PRINT .

    TkCBlock        reduce using rule 15 (INSTRUCTION -> PRINT .)
    TkSemicolon     reduce using rule 15 (INSTRUCTION -> PRINT .)
    TkOd            reduce using rule 15 (INSTRUCTION -> PRINT .)
    TkFi            reduce using rule 15 (INSTRUCTION -> PRINT .)
    TkGuard         reduce using rule 15 (INSTRUCTION -> PRINT .)
    TkRof           reduce using rule 15 (INSTRUCTION -> PRINT .)


state 9

    (16) INSTRUCTION -> DO_LOOP .

    TkCBlock        reduce using rule 16 (INSTRUCTION -> DO_LOOP .)
    TkSemicolon     reduce using rule 16 (INSTRUCTION -> DO_LOOP .)
    TkOd            reduce using rule 16 (INSTRUCTION -> DO_LOOP .)
    TkFi            reduce using rule 16 (INSTRUCTION -> DO_LOOP .)
    TkGuard         reduce using rule 16 (INSTRUCTION -> DO_LOOP .)
    TkRof           reduce using rule 16 (INSTRUCTION -> DO_LOOP .)


state 10

    (17) INSTRUCTION -> FOR_LOOP .

    TkCBlock        reduce using rule 17 (INSTRUCTION -> FOR_LOOP .)
    TkSemicolon     reduce using rule 17 (INSTRUCTION -> FOR_LOOP .)
    TkOd            reduce using rule 17 (INSTRUCTION -> FOR_LOOP .)
    TkFi            reduce using rule 17 (INSTRUCTION -> FOR_LOOP .)
    TkGuard         reduce using rule 17 (INSTRUCTION -> FOR_LOOP .)
    TkRof           reduce using rule 17 (INSTRUCTION -> FOR_LOOP .)


state 11

    (18) INSTRUCTION -> CONDITIONAL .

    TkCBlock        reduce using rule 18 (INSTRUCTION -> CONDITIONAL .)
    TkSemicolon     reduce using rule 18 (INSTRUCTION -> CONDITIONAL .)
    TkOd            reduce using rule 18 (INSTRUCTION -> CONDITIONAL .)
    TkFi            reduce using rule 18 (INSTRUCTION -> CONDITIONAL .)
    TkGuard         reduce using rule 18 (INSTRUCTION -> CONDITIONAL .)
    TkRof           reduce using rule 18 (INSTRUCTION -> CONDITIONAL .)


state 12

    (19) INSTRUCTION -> TkSkip .

    TkCBlock        reduce using rule 19 (INSTRUCTION -> TkSkip .)
    TkSemicolon     reduce using rule 19 (INSTRUCTION -> TkSkip .)
    TkOd            reduce using rule 19 (INSTRUCTION -> TkSkip .)
    TkFi            reduce using rule 19 (INSTRUCTION -> TkSkip .)
    TkGuard         reduce using rule 19 (INSTRUCTION -> TkSkip .)
    TkRof           reduce using rule 19 (INSTRUCTION -> TkSkip .)


state 13

    (20) ASIG -> TkId . TkAsig EXPRESSION

    TkAsig          shift and go to state 23


state 14

    (48) PRINT -> TkPrint . TOPRINT
    (49) TOPRINT -> . EXPRESSION_TO_PRINT
    (50) TOPRINT -> . TOPRINT TkConcat EXPRESSION_TO_PRINT
    (51) EXPRESSION_TO_PRINT -> . TkId
    (52) EXPRESSION_TO_PRINT -> . TkString
    (53) EXPRESSION_TO_PRINT -> . TkNum
    (54) EXPRESSION_TO_PRINT -> . TkTrue
    (55) EXPRESSION_TO_PRINT -> . TkFalse
    (56) EXPRESSION_TO_PRINT -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkId            shift and go to state 26
    TkString        shift and go to state 27
    TkNum           shift and go to state 28
    TkTrue          shift and go to state 29
    TkFalse         shift and go to state 30

    TOPRINT                        shift and go to state 24
    EXPRESSION_TO_PRINT            shift and go to state 25
    READ_ARRAY                     shift and go to state 31

state 15

    (58) DO_LOOP -> TkDo . E TkArrow LIST_INSTRUCTIONS TkOd
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 32
    READ_ARRAY                     shift and go to state 40

state 16

    (59) FOR_LOOP -> TkFor . TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof

    TkId            shift and go to state 41


state 17

    (60) CONDITIONAL -> TkIf . GUARD TkFi
    (61) GUARD -> . E TkArrow LIST_INSTRUCTIONS
    (62) GUARD -> . GUARD TkGuard E TkArrow LIST_INSTRUCTIONS
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    GUARD                          shift and go to state 42
    E                              shift and go to state 43
    READ_ARRAY                     shift and go to state 40

state 18

    (2) DECLARE -> TkDeclare LIST_DECLARE .
    (5) LIST_DECLARE -> LIST_DECLARE . TkSemicolon VARIABLE_DECLARATION

    TkSkip          reduce using rule 2 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkId            reduce using rule 2 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkPrint         reduce using rule 2 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkDo            reduce using rule 2 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkFor           reduce using rule 2 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkIf            reduce using rule 2 (DECLARE -> TkDeclare LIST_DECLARE .)
    TkSemicolon     shift and go to state 44


state 19

    (4) LIST_DECLARE -> VARIABLE_DECLARATION .

    TkSemicolon     reduce using rule 4 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkSkip          reduce using rule 4 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkId            reduce using rule 4 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkPrint         reduce using rule 4 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkDo            reduce using rule 4 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkFor           reduce using rule 4 (LIST_DECLARE -> VARIABLE_DECLARATION .)
    TkIf            reduce using rule 4 (LIST_DECLARE -> VARIABLE_DECLARATION .)


state 20

    (6) VARIABLE_DECLARATION -> TkId . TkTwoPoints TYPE
    (7) VARIABLE_DECLARATION -> TkId . TkComma VARIABLE_DECLARATION

    TkTwoPoints     shift and go to state 45
    TkComma         shift and go to state 46


state 21

    (1) BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock .

    $end            reduce using rule 1 (BLOCK -> TkOBlock DECLARE LIST_INSTRUCTIONS TkCBlock .)


state 22

    (13) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon . INSTRUCTION
    (14) INSTRUCTION -> . ASIG
    (15) INSTRUCTION -> . PRINT
    (16) INSTRUCTION -> . DO_LOOP
    (17) INSTRUCTION -> . FOR_LOOP
    (18) INSTRUCTION -> . CONDITIONAL
    (19) INSTRUCTION -> . TkSkip
    (20) ASIG -> . TkId TkAsig EXPRESSION
    (48) PRINT -> . TkPrint TOPRINT
    (58) DO_LOOP -> . TkDo E TkArrow LIST_INSTRUCTIONS TkOd
    (59) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof
    (60) CONDITIONAL -> . TkIf GUARD TkFi

    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkDo            shift and go to state 15
    TkFor           shift and go to state 16
    TkIf            shift and go to state 17

    INSTRUCTION                    shift and go to state 47
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    DO_LOOP                        shift and go to state 9
    FOR_LOOP                       shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 23

    (20) ASIG -> TkId TkAsig . EXPRESSION
    (21) EXPRESSION -> . E
    (22) EXPRESSION -> . ASIG_ARRAY
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (23) ASIG_ARRAY -> . CREATE_ARRAY
    (24) ASIG_ARRAY -> . WRITE_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket
    (25) CREATE_ARRAY -> . E TkComma E
    (26) CREATE_ARRAY -> . CREATE_ARRAY TkComma E
    (27) WRITE_ARRAY -> . TkId TkOpenPar E TkTwoPoints E TkClosePar
    (28) WRITE_ARRAY -> . WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 48
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    EXPRESSION                     shift and go to state 49
    E                              shift and go to state 50
    ASIG_ARRAY                     shift and go to state 51
    READ_ARRAY                     shift and go to state 40
    CREATE_ARRAY                   shift and go to state 52
    WRITE_ARRAY                    shift and go to state 53

state 24

    (48) PRINT -> TkPrint TOPRINT .
    (50) TOPRINT -> TOPRINT . TkConcat EXPRESSION_TO_PRINT

    TkCBlock        reduce using rule 48 (PRINT -> TkPrint TOPRINT .)
    TkSemicolon     reduce using rule 48 (PRINT -> TkPrint TOPRINT .)
    TkOd            reduce using rule 48 (PRINT -> TkPrint TOPRINT .)
    TkFi            reduce using rule 48 (PRINT -> TkPrint TOPRINT .)
    TkGuard         reduce using rule 48 (PRINT -> TkPrint TOPRINT .)
    TkRof           reduce using rule 48 (PRINT -> TkPrint TOPRINT .)
    TkConcat        shift and go to state 54


state 25

    (49) TOPRINT -> EXPRESSION_TO_PRINT .

    TkConcat        reduce using rule 49 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkCBlock        reduce using rule 49 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkSemicolon     reduce using rule 49 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkOd            reduce using rule 49 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkFi            reduce using rule 49 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkGuard         reduce using rule 49 (TOPRINT -> EXPRESSION_TO_PRINT .)
    TkRof           reduce using rule 49 (TOPRINT -> EXPRESSION_TO_PRINT .)


state 26

    (51) EXPRESSION_TO_PRINT -> TkId .
    (57) READ_ARRAY -> TkId . TkOBracket E TkCBracket

    TkConcat        reduce using rule 51 (EXPRESSION_TO_PRINT -> TkId .)
    TkCBlock        reduce using rule 51 (EXPRESSION_TO_PRINT -> TkId .)
    TkSemicolon     reduce using rule 51 (EXPRESSION_TO_PRINT -> TkId .)
    TkOd            reduce using rule 51 (EXPRESSION_TO_PRINT -> TkId .)
    TkFi            reduce using rule 51 (EXPRESSION_TO_PRINT -> TkId .)
    TkGuard         reduce using rule 51 (EXPRESSION_TO_PRINT -> TkId .)
    TkRof           reduce using rule 51 (EXPRESSION_TO_PRINT -> TkId .)
    TkOBracket      shift and go to state 55


state 27

    (52) EXPRESSION_TO_PRINT -> TkString .

    TkConcat        reduce using rule 52 (EXPRESSION_TO_PRINT -> TkString .)
    TkCBlock        reduce using rule 52 (EXPRESSION_TO_PRINT -> TkString .)
    TkSemicolon     reduce using rule 52 (EXPRESSION_TO_PRINT -> TkString .)
    TkOd            reduce using rule 52 (EXPRESSION_TO_PRINT -> TkString .)
    TkFi            reduce using rule 52 (EXPRESSION_TO_PRINT -> TkString .)
    TkGuard         reduce using rule 52 (EXPRESSION_TO_PRINT -> TkString .)
    TkRof           reduce using rule 52 (EXPRESSION_TO_PRINT -> TkString .)


state 28

    (53) EXPRESSION_TO_PRINT -> TkNum .

    TkConcat        reduce using rule 53 (EXPRESSION_TO_PRINT -> TkNum .)
    TkCBlock        reduce using rule 53 (EXPRESSION_TO_PRINT -> TkNum .)
    TkSemicolon     reduce using rule 53 (EXPRESSION_TO_PRINT -> TkNum .)
    TkOd            reduce using rule 53 (EXPRESSION_TO_PRINT -> TkNum .)
    TkFi            reduce using rule 53 (EXPRESSION_TO_PRINT -> TkNum .)
    TkGuard         reduce using rule 53 (EXPRESSION_TO_PRINT -> TkNum .)
    TkRof           reduce using rule 53 (EXPRESSION_TO_PRINT -> TkNum .)


state 29

    (54) EXPRESSION_TO_PRINT -> TkTrue .

    TkConcat        reduce using rule 54 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkCBlock        reduce using rule 54 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkSemicolon     reduce using rule 54 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkOd            reduce using rule 54 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkFi            reduce using rule 54 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkGuard         reduce using rule 54 (EXPRESSION_TO_PRINT -> TkTrue .)
    TkRof           reduce using rule 54 (EXPRESSION_TO_PRINT -> TkTrue .)


state 30

    (55) EXPRESSION_TO_PRINT -> TkFalse .

    TkConcat        reduce using rule 55 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkCBlock        reduce using rule 55 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkSemicolon     reduce using rule 55 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkOd            reduce using rule 55 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkFi            reduce using rule 55 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkGuard         reduce using rule 55 (EXPRESSION_TO_PRINT -> TkFalse .)
    TkRof           reduce using rule 55 (EXPRESSION_TO_PRINT -> TkFalse .)


state 31

    (56) EXPRESSION_TO_PRINT -> READ_ARRAY .

    TkConcat        reduce using rule 56 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkCBlock        reduce using rule 56 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkSemicolon     reduce using rule 56 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkOd            reduce using rule 56 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkFi            reduce using rule 56 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkGuard         reduce using rule 56 (EXPRESSION_TO_PRINT -> READ_ARRAY .)
    TkRof           reduce using rule 56 (EXPRESSION_TO_PRINT -> READ_ARRAY .)


state 32

    (58) DO_LOOP -> TkDo E . TkArrow LIST_INSTRUCTIONS TkOd
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         shift and go to state 56
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 33

    (42) E -> TkMinus . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 68
    READ_ARRAY                     shift and go to state 40

state 34

    (40) E -> TkOpenPar . E TkClosePar
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 69
    READ_ARRAY                     shift and go to state 40

state 35

    (41) E -> TkNot . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 70
    READ_ARRAY                     shift and go to state 40

state 36

    (43) E -> TkNum .

    TkArrow         reduce using rule 43 (E -> TkNum .)
    TkMult          reduce using rule 43 (E -> TkNum .)
    TkPlus          reduce using rule 43 (E -> TkNum .)
    TkMinus         reduce using rule 43 (E -> TkNum .)
    TkOr            reduce using rule 43 (E -> TkNum .)
    TkAnd           reduce using rule 43 (E -> TkNum .)
    TkLess          reduce using rule 43 (E -> TkNum .)
    TkLeq           reduce using rule 43 (E -> TkNum .)
    TkGeq           reduce using rule 43 (E -> TkNum .)
    TkGreater       reduce using rule 43 (E -> TkNum .)
    TkEqual         reduce using rule 43 (E -> TkNum .)
    TkNEqual        reduce using rule 43 (E -> TkNum .)
    TkComma         reduce using rule 43 (E -> TkNum .)
    TkCBlock        reduce using rule 43 (E -> TkNum .)
    TkSemicolon     reduce using rule 43 (E -> TkNum .)
    TkOd            reduce using rule 43 (E -> TkNum .)
    TkFi            reduce using rule 43 (E -> TkNum .)
    TkGuard         reduce using rule 43 (E -> TkNum .)
    TkRof           reduce using rule 43 (E -> TkNum .)
    TkClosePar      reduce using rule 43 (E -> TkNum .)
    TkCBracket      reduce using rule 43 (E -> TkNum .)
    TkTo            reduce using rule 43 (E -> TkNum .)
    TkTwoPoints     reduce using rule 43 (E -> TkNum .)


state 37

    (44) E -> TkId .
    (57) READ_ARRAY -> TkId . TkOBracket E TkCBracket

    TkArrow         reduce using rule 44 (E -> TkId .)
    TkMult          reduce using rule 44 (E -> TkId .)
    TkPlus          reduce using rule 44 (E -> TkId .)
    TkMinus         reduce using rule 44 (E -> TkId .)
    TkOr            reduce using rule 44 (E -> TkId .)
    TkAnd           reduce using rule 44 (E -> TkId .)
    TkLess          reduce using rule 44 (E -> TkId .)
    TkLeq           reduce using rule 44 (E -> TkId .)
    TkGeq           reduce using rule 44 (E -> TkId .)
    TkGreater       reduce using rule 44 (E -> TkId .)
    TkEqual         reduce using rule 44 (E -> TkId .)
    TkNEqual        reduce using rule 44 (E -> TkId .)
    TkComma         reduce using rule 44 (E -> TkId .)
    TkCBlock        reduce using rule 44 (E -> TkId .)
    TkSemicolon     reduce using rule 44 (E -> TkId .)
    TkOd            reduce using rule 44 (E -> TkId .)
    TkFi            reduce using rule 44 (E -> TkId .)
    TkGuard         reduce using rule 44 (E -> TkId .)
    TkRof           reduce using rule 44 (E -> TkId .)
    TkClosePar      reduce using rule 44 (E -> TkId .)
    TkCBracket      reduce using rule 44 (E -> TkId .)
    TkTo            reduce using rule 44 (E -> TkId .)
    TkTwoPoints     reduce using rule 44 (E -> TkId .)
    TkOBracket      shift and go to state 55


state 38

    (45) E -> TkTrue .

    TkArrow         reduce using rule 45 (E -> TkTrue .)
    TkMult          reduce using rule 45 (E -> TkTrue .)
    TkPlus          reduce using rule 45 (E -> TkTrue .)
    TkMinus         reduce using rule 45 (E -> TkTrue .)
    TkOr            reduce using rule 45 (E -> TkTrue .)
    TkAnd           reduce using rule 45 (E -> TkTrue .)
    TkLess          reduce using rule 45 (E -> TkTrue .)
    TkLeq           reduce using rule 45 (E -> TkTrue .)
    TkGeq           reduce using rule 45 (E -> TkTrue .)
    TkGreater       reduce using rule 45 (E -> TkTrue .)
    TkEqual         reduce using rule 45 (E -> TkTrue .)
    TkNEqual        reduce using rule 45 (E -> TkTrue .)
    TkComma         reduce using rule 45 (E -> TkTrue .)
    TkCBlock        reduce using rule 45 (E -> TkTrue .)
    TkSemicolon     reduce using rule 45 (E -> TkTrue .)
    TkOd            reduce using rule 45 (E -> TkTrue .)
    TkFi            reduce using rule 45 (E -> TkTrue .)
    TkGuard         reduce using rule 45 (E -> TkTrue .)
    TkRof           reduce using rule 45 (E -> TkTrue .)
    TkClosePar      reduce using rule 45 (E -> TkTrue .)
    TkCBracket      reduce using rule 45 (E -> TkTrue .)
    TkTo            reduce using rule 45 (E -> TkTrue .)
    TkTwoPoints     reduce using rule 45 (E -> TkTrue .)


state 39

    (46) E -> TkFalse .

    TkArrow         reduce using rule 46 (E -> TkFalse .)
    TkMult          reduce using rule 46 (E -> TkFalse .)
    TkPlus          reduce using rule 46 (E -> TkFalse .)
    TkMinus         reduce using rule 46 (E -> TkFalse .)
    TkOr            reduce using rule 46 (E -> TkFalse .)
    TkAnd           reduce using rule 46 (E -> TkFalse .)
    TkLess          reduce using rule 46 (E -> TkFalse .)
    TkLeq           reduce using rule 46 (E -> TkFalse .)
    TkGeq           reduce using rule 46 (E -> TkFalse .)
    TkGreater       reduce using rule 46 (E -> TkFalse .)
    TkEqual         reduce using rule 46 (E -> TkFalse .)
    TkNEqual        reduce using rule 46 (E -> TkFalse .)
    TkComma         reduce using rule 46 (E -> TkFalse .)
    TkCBlock        reduce using rule 46 (E -> TkFalse .)
    TkSemicolon     reduce using rule 46 (E -> TkFalse .)
    TkOd            reduce using rule 46 (E -> TkFalse .)
    TkFi            reduce using rule 46 (E -> TkFalse .)
    TkGuard         reduce using rule 46 (E -> TkFalse .)
    TkRof           reduce using rule 46 (E -> TkFalse .)
    TkClosePar      reduce using rule 46 (E -> TkFalse .)
    TkCBracket      reduce using rule 46 (E -> TkFalse .)
    TkTo            reduce using rule 46 (E -> TkFalse .)
    TkTwoPoints     reduce using rule 46 (E -> TkFalse .)


state 40

    (47) E -> READ_ARRAY .

    TkArrow         reduce using rule 47 (E -> READ_ARRAY .)
    TkMult          reduce using rule 47 (E -> READ_ARRAY .)
    TkPlus          reduce using rule 47 (E -> READ_ARRAY .)
    TkMinus         reduce using rule 47 (E -> READ_ARRAY .)
    TkOr            reduce using rule 47 (E -> READ_ARRAY .)
    TkAnd           reduce using rule 47 (E -> READ_ARRAY .)
    TkLess          reduce using rule 47 (E -> READ_ARRAY .)
    TkLeq           reduce using rule 47 (E -> READ_ARRAY .)
    TkGeq           reduce using rule 47 (E -> READ_ARRAY .)
    TkGreater       reduce using rule 47 (E -> READ_ARRAY .)
    TkEqual         reduce using rule 47 (E -> READ_ARRAY .)
    TkNEqual        reduce using rule 47 (E -> READ_ARRAY .)
    TkComma         reduce using rule 47 (E -> READ_ARRAY .)
    TkCBlock        reduce using rule 47 (E -> READ_ARRAY .)
    TkSemicolon     reduce using rule 47 (E -> READ_ARRAY .)
    TkOd            reduce using rule 47 (E -> READ_ARRAY .)
    TkFi            reduce using rule 47 (E -> READ_ARRAY .)
    TkGuard         reduce using rule 47 (E -> READ_ARRAY .)
    TkRof           reduce using rule 47 (E -> READ_ARRAY .)
    TkClosePar      reduce using rule 47 (E -> READ_ARRAY .)
    TkCBracket      reduce using rule 47 (E -> READ_ARRAY .)
    TkTo            reduce using rule 47 (E -> READ_ARRAY .)
    TkTwoPoints     reduce using rule 47 (E -> READ_ARRAY .)


state 41

    (59) FOR_LOOP -> TkFor TkId . TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof

    TkIn            shift and go to state 71


state 42

    (60) CONDITIONAL -> TkIf GUARD . TkFi
    (62) GUARD -> GUARD . TkGuard E TkArrow LIST_INSTRUCTIONS

    TkFi            shift and go to state 72
    TkGuard         shift and go to state 73


state 43

    (61) GUARD -> E . TkArrow LIST_INSTRUCTIONS
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         shift and go to state 74
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 44

    (5) LIST_DECLARE -> LIST_DECLARE TkSemicolon . VARIABLE_DECLARATION
    (6) VARIABLE_DECLARATION -> . TkId TkTwoPoints TYPE
    (7) VARIABLE_DECLARATION -> . TkId TkComma VARIABLE_DECLARATION

    TkId            shift and go to state 20

    VARIABLE_DECLARATION           shift and go to state 75

state 45

    (6) VARIABLE_DECLARATION -> TkId TkTwoPoints . TYPE
    (8) TYPE -> . TkInt
    (9) TYPE -> . TkBool
    (10) TYPE -> . ARRAY_DECLARATION
    (11) ARRAY_DECLARATION -> . TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket

    TkInt           shift and go to state 77
    TkBool          shift and go to state 78
    TkArray         shift and go to state 80

    TYPE                           shift and go to state 76
    ARRAY_DECLARATION              shift and go to state 79

state 46

    (7) VARIABLE_DECLARATION -> TkId TkComma . VARIABLE_DECLARATION
    (6) VARIABLE_DECLARATION -> . TkId TkTwoPoints TYPE
    (7) VARIABLE_DECLARATION -> . TkId TkComma VARIABLE_DECLARATION

    TkId            shift and go to state 20

    VARIABLE_DECLARATION           shift and go to state 81

state 47

    (13) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .

    TkCBlock        reduce using rule 13 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)
    TkSemicolon     reduce using rule 13 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)
    TkOd            reduce using rule 13 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)
    TkFi            reduce using rule 13 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)
    TkGuard         reduce using rule 13 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)
    TkRof           reduce using rule 13 (LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS TkSemicolon INSTRUCTION .)


state 48

    (44) E -> TkId .
    (57) READ_ARRAY -> TkId . TkOBracket E TkCBracket
    (27) WRITE_ARRAY -> TkId . TkOpenPar E TkTwoPoints E TkClosePar

    TkMult          reduce using rule 44 (E -> TkId .)
    TkPlus          reduce using rule 44 (E -> TkId .)
    TkMinus         reduce using rule 44 (E -> TkId .)
    TkOr            reduce using rule 44 (E -> TkId .)
    TkAnd           reduce using rule 44 (E -> TkId .)
    TkLess          reduce using rule 44 (E -> TkId .)
    TkLeq           reduce using rule 44 (E -> TkId .)
    TkGeq           reduce using rule 44 (E -> TkId .)
    TkGreater       reduce using rule 44 (E -> TkId .)
    TkEqual         reduce using rule 44 (E -> TkId .)
    TkNEqual        reduce using rule 44 (E -> TkId .)
    TkComma         reduce using rule 44 (E -> TkId .)
    TkCBlock        reduce using rule 44 (E -> TkId .)
    TkSemicolon     reduce using rule 44 (E -> TkId .)
    TkOd            reduce using rule 44 (E -> TkId .)
    TkFi            reduce using rule 44 (E -> TkId .)
    TkGuard         reduce using rule 44 (E -> TkId .)
    TkRof           reduce using rule 44 (E -> TkId .)
    TkOBracket      shift and go to state 55
    TkOpenPar       shift and go to state 82


state 49

    (20) ASIG -> TkId TkAsig EXPRESSION .

    TkCBlock        reduce using rule 20 (ASIG -> TkId TkAsig EXPRESSION .)
    TkSemicolon     reduce using rule 20 (ASIG -> TkId TkAsig EXPRESSION .)
    TkOd            reduce using rule 20 (ASIG -> TkId TkAsig EXPRESSION .)
    TkFi            reduce using rule 20 (ASIG -> TkId TkAsig EXPRESSION .)
    TkGuard         reduce using rule 20 (ASIG -> TkId TkAsig EXPRESSION .)
    TkRof           reduce using rule 20 (ASIG -> TkId TkAsig EXPRESSION .)


state 50

    (21) EXPRESSION -> E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E
    (25) CREATE_ARRAY -> E . TkComma E

    TkCBlock        reduce using rule 21 (EXPRESSION -> E .)
    TkSemicolon     reduce using rule 21 (EXPRESSION -> E .)
    TkOd            reduce using rule 21 (EXPRESSION -> E .)
    TkFi            reduce using rule 21 (EXPRESSION -> E .)
    TkGuard         reduce using rule 21 (EXPRESSION -> E .)
    TkRof           reduce using rule 21 (EXPRESSION -> E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67
    TkComma         shift and go to state 83


state 51

    (22) EXPRESSION -> ASIG_ARRAY .

    TkCBlock        reduce using rule 22 (EXPRESSION -> ASIG_ARRAY .)
    TkSemicolon     reduce using rule 22 (EXPRESSION -> ASIG_ARRAY .)
    TkOd            reduce using rule 22 (EXPRESSION -> ASIG_ARRAY .)
    TkFi            reduce using rule 22 (EXPRESSION -> ASIG_ARRAY .)
    TkGuard         reduce using rule 22 (EXPRESSION -> ASIG_ARRAY .)
    TkRof           reduce using rule 22 (EXPRESSION -> ASIG_ARRAY .)


state 52

    (23) ASIG_ARRAY -> CREATE_ARRAY .
    (26) CREATE_ARRAY -> CREATE_ARRAY . TkComma E

    TkCBlock        reduce using rule 23 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkSemicolon     reduce using rule 23 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkOd            reduce using rule 23 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkFi            reduce using rule 23 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkGuard         reduce using rule 23 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkRof           reduce using rule 23 (ASIG_ARRAY -> CREATE_ARRAY .)
    TkComma         shift and go to state 84


state 53

    (24) ASIG_ARRAY -> WRITE_ARRAY .
    (28) WRITE_ARRAY -> WRITE_ARRAY . TkOpenPar E TkTwoPoints E TkClosePar

    TkCBlock        reduce using rule 24 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkSemicolon     reduce using rule 24 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkOd            reduce using rule 24 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkFi            reduce using rule 24 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkGuard         reduce using rule 24 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkRof           reduce using rule 24 (ASIG_ARRAY -> WRITE_ARRAY .)
    TkOpenPar       shift and go to state 85


state 54

    (50) TOPRINT -> TOPRINT TkConcat . EXPRESSION_TO_PRINT
    (51) EXPRESSION_TO_PRINT -> . TkId
    (52) EXPRESSION_TO_PRINT -> . TkString
    (53) EXPRESSION_TO_PRINT -> . TkNum
    (54) EXPRESSION_TO_PRINT -> . TkTrue
    (55) EXPRESSION_TO_PRINT -> . TkFalse
    (56) EXPRESSION_TO_PRINT -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkId            shift and go to state 26
    TkString        shift and go to state 27
    TkNum           shift and go to state 28
    TkTrue          shift and go to state 29
    TkFalse         shift and go to state 30

    EXPRESSION_TO_PRINT            shift and go to state 86
    READ_ARRAY                     shift and go to state 31

state 55

    (57) READ_ARRAY -> TkId TkOBracket . E TkCBracket
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 87
    READ_ARRAY                     shift and go to state 40

state 56

    (58) DO_LOOP -> TkDo E TkArrow . LIST_INSTRUCTIONS TkOd
    (12) LIST_INSTRUCTIONS -> . INSTRUCTION
    (13) LIST_INSTRUCTIONS -> . LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
    (14) INSTRUCTION -> . ASIG
    (15) INSTRUCTION -> . PRINT
    (16) INSTRUCTION -> . DO_LOOP
    (17) INSTRUCTION -> . FOR_LOOP
    (18) INSTRUCTION -> . CONDITIONAL
    (19) INSTRUCTION -> . TkSkip
    (20) ASIG -> . TkId TkAsig EXPRESSION
    (48) PRINT -> . TkPrint TOPRINT
    (58) DO_LOOP -> . TkDo E TkArrow LIST_INSTRUCTIONS TkOd
    (59) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof
    (60) CONDITIONAL -> . TkIf GUARD TkFi

    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkDo            shift and go to state 15
    TkFor           shift and go to state 16
    TkIf            shift and go to state 17

    LIST_INSTRUCTIONS              shift and go to state 88
    INSTRUCTION                    shift and go to state 6
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    DO_LOOP                        shift and go to state 9
    FOR_LOOP                       shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 57

    (29) E -> E TkMult . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 89
    READ_ARRAY                     shift and go to state 40

state 58

    (30) E -> E TkPlus . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 90
    READ_ARRAY                     shift and go to state 40

state 59

    (31) E -> E TkMinus . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 91
    READ_ARRAY                     shift and go to state 40

state 60

    (32) E -> E TkOr . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 92
    READ_ARRAY                     shift and go to state 40

state 61

    (33) E -> E TkAnd . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 93
    READ_ARRAY                     shift and go to state 40

state 62

    (34) E -> E TkLess . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 94
    READ_ARRAY                     shift and go to state 40

state 63

    (35) E -> E TkLeq . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 95
    READ_ARRAY                     shift and go to state 40

state 64

    (36) E -> E TkGeq . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 96
    READ_ARRAY                     shift and go to state 40

state 65

    (37) E -> E TkGreater . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 97
    READ_ARRAY                     shift and go to state 40

state 66

    (38) E -> E TkEqual . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 98
    READ_ARRAY                     shift and go to state 40

state 67

    (39) E -> E TkNEqual . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 99
    READ_ARRAY                     shift and go to state 40

state 68

    (42) E -> TkMinus E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 42 (E -> TkMinus E .)
    TkPlus          reduce using rule 42 (E -> TkMinus E .)
    TkMinus         reduce using rule 42 (E -> TkMinus E .)
    TkOr            reduce using rule 42 (E -> TkMinus E .)
    TkAnd           reduce using rule 42 (E -> TkMinus E .)
    TkLess          reduce using rule 42 (E -> TkMinus E .)
    TkLeq           reduce using rule 42 (E -> TkMinus E .)
    TkGeq           reduce using rule 42 (E -> TkMinus E .)
    TkGreater       reduce using rule 42 (E -> TkMinus E .)
    TkEqual         reduce using rule 42 (E -> TkMinus E .)
    TkNEqual        reduce using rule 42 (E -> TkMinus E .)
    TkComma         reduce using rule 42 (E -> TkMinus E .)
    TkCBlock        reduce using rule 42 (E -> TkMinus E .)
    TkSemicolon     reduce using rule 42 (E -> TkMinus E .)
    TkOd            reduce using rule 42 (E -> TkMinus E .)
    TkFi            reduce using rule 42 (E -> TkMinus E .)
    TkGuard         reduce using rule 42 (E -> TkMinus E .)
    TkRof           reduce using rule 42 (E -> TkMinus E .)
    TkClosePar      reduce using rule 42 (E -> TkMinus E .)
    TkCBracket      reduce using rule 42 (E -> TkMinus E .)
    TkTo            reduce using rule 42 (E -> TkMinus E .)
    TkTwoPoints     reduce using rule 42 (E -> TkMinus E .)
    TkMult          shift and go to state 57

  ! TkMult          [ reduce using rule 42 (E -> TkMinus E .) ]
  ! TkPlus          [ shift and go to state 58 ]
  ! TkMinus         [ shift and go to state 59 ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]
  ! TkLess          [ shift and go to state 62 ]
  ! TkLeq           [ shift and go to state 63 ]
  ! TkGeq           [ shift and go to state 64 ]
  ! TkGreater       [ shift and go to state 65 ]
  ! TkEqual         [ shift and go to state 66 ]
  ! TkNEqual        [ shift and go to state 67 ]


state 69

    (40) E -> TkOpenPar E . TkClosePar
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkClosePar      shift and go to state 100
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 70

    (41) E -> TkNot E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 41 (E -> TkNot E .)
    TkOr            reduce using rule 41 (E -> TkNot E .)
    TkAnd           reduce using rule 41 (E -> TkNot E .)
    TkComma         reduce using rule 41 (E -> TkNot E .)
    TkCBlock        reduce using rule 41 (E -> TkNot E .)
    TkSemicolon     reduce using rule 41 (E -> TkNot E .)
    TkOd            reduce using rule 41 (E -> TkNot E .)
    TkFi            reduce using rule 41 (E -> TkNot E .)
    TkGuard         reduce using rule 41 (E -> TkNot E .)
    TkRof           reduce using rule 41 (E -> TkNot E .)
    TkClosePar      reduce using rule 41 (E -> TkNot E .)
    TkCBracket      reduce using rule 41 (E -> TkNot E .)
    TkTo            reduce using rule 41 (E -> TkNot E .)
    TkTwoPoints     reduce using rule 41 (E -> TkNot E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67

  ! TkMult          [ reduce using rule 41 (E -> TkNot E .) ]
  ! TkPlus          [ reduce using rule 41 (E -> TkNot E .) ]
  ! TkMinus         [ reduce using rule 41 (E -> TkNot E .) ]
  ! TkLess          [ reduce using rule 41 (E -> TkNot E .) ]
  ! TkLeq           [ reduce using rule 41 (E -> TkNot E .) ]
  ! TkGeq           [ reduce using rule 41 (E -> TkNot E .) ]
  ! TkGreater       [ reduce using rule 41 (E -> TkNot E .) ]
  ! TkEqual         [ reduce using rule 41 (E -> TkNot E .) ]
  ! TkNEqual        [ reduce using rule 41 (E -> TkNot E .) ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]


state 71

    (59) FOR_LOOP -> TkFor TkId TkIn . E TkTo E TkArrow LIST_INSTRUCTIONS TkRof
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 101
    READ_ARRAY                     shift and go to state 40

state 72

    (60) CONDITIONAL -> TkIf GUARD TkFi .

    TkCBlock        reduce using rule 60 (CONDITIONAL -> TkIf GUARD TkFi .)
    TkSemicolon     reduce using rule 60 (CONDITIONAL -> TkIf GUARD TkFi .)
    TkOd            reduce using rule 60 (CONDITIONAL -> TkIf GUARD TkFi .)
    TkFi            reduce using rule 60 (CONDITIONAL -> TkIf GUARD TkFi .)
    TkGuard         reduce using rule 60 (CONDITIONAL -> TkIf GUARD TkFi .)
    TkRof           reduce using rule 60 (CONDITIONAL -> TkIf GUARD TkFi .)


state 73

    (62) GUARD -> GUARD TkGuard . E TkArrow LIST_INSTRUCTIONS
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 102
    READ_ARRAY                     shift and go to state 40

state 74

    (61) GUARD -> E TkArrow . LIST_INSTRUCTIONS
    (12) LIST_INSTRUCTIONS -> . INSTRUCTION
    (13) LIST_INSTRUCTIONS -> . LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
    (14) INSTRUCTION -> . ASIG
    (15) INSTRUCTION -> . PRINT
    (16) INSTRUCTION -> . DO_LOOP
    (17) INSTRUCTION -> . FOR_LOOP
    (18) INSTRUCTION -> . CONDITIONAL
    (19) INSTRUCTION -> . TkSkip
    (20) ASIG -> . TkId TkAsig EXPRESSION
    (48) PRINT -> . TkPrint TOPRINT
    (58) DO_LOOP -> . TkDo E TkArrow LIST_INSTRUCTIONS TkOd
    (59) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof
    (60) CONDITIONAL -> . TkIf GUARD TkFi

    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkDo            shift and go to state 15
    TkFor           shift and go to state 16
    TkIf            shift and go to state 17

    LIST_INSTRUCTIONS              shift and go to state 103
    INSTRUCTION                    shift and go to state 6
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    DO_LOOP                        shift and go to state 9
    FOR_LOOP                       shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 75

    (5) LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .

    TkSemicolon     reduce using rule 5 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkSkip          reduce using rule 5 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkId            reduce using rule 5 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkPrint         reduce using rule 5 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkDo            reduce using rule 5 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkFor           reduce using rule 5 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)
    TkIf            reduce using rule 5 (LIST_DECLARE -> LIST_DECLARE TkSemicolon VARIABLE_DECLARATION .)


state 76

    (6) VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .

    TkSemicolon     reduce using rule 6 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkSkip          reduce using rule 6 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkId            reduce using rule 6 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkPrint         reduce using rule 6 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkDo            reduce using rule 6 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkFor           reduce using rule 6 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)
    TkIf            reduce using rule 6 (VARIABLE_DECLARATION -> TkId TkTwoPoints TYPE .)


state 77

    (8) TYPE -> TkInt .

    TkSemicolon     reduce using rule 8 (TYPE -> TkInt .)
    TkSkip          reduce using rule 8 (TYPE -> TkInt .)
    TkId            reduce using rule 8 (TYPE -> TkInt .)
    TkPrint         reduce using rule 8 (TYPE -> TkInt .)
    TkDo            reduce using rule 8 (TYPE -> TkInt .)
    TkFor           reduce using rule 8 (TYPE -> TkInt .)
    TkIf            reduce using rule 8 (TYPE -> TkInt .)


state 78

    (9) TYPE -> TkBool .

    TkSemicolon     reduce using rule 9 (TYPE -> TkBool .)
    TkSkip          reduce using rule 9 (TYPE -> TkBool .)
    TkId            reduce using rule 9 (TYPE -> TkBool .)
    TkPrint         reduce using rule 9 (TYPE -> TkBool .)
    TkDo            reduce using rule 9 (TYPE -> TkBool .)
    TkFor           reduce using rule 9 (TYPE -> TkBool .)
    TkIf            reduce using rule 9 (TYPE -> TkBool .)


state 79

    (10) TYPE -> ARRAY_DECLARATION .

    TkSemicolon     reduce using rule 10 (TYPE -> ARRAY_DECLARATION .)
    TkSkip          reduce using rule 10 (TYPE -> ARRAY_DECLARATION .)
    TkId            reduce using rule 10 (TYPE -> ARRAY_DECLARATION .)
    TkPrint         reduce using rule 10 (TYPE -> ARRAY_DECLARATION .)
    TkDo            reduce using rule 10 (TYPE -> ARRAY_DECLARATION .)
    TkFor           reduce using rule 10 (TYPE -> ARRAY_DECLARATION .)
    TkIf            reduce using rule 10 (TYPE -> ARRAY_DECLARATION .)


state 80

    (11) ARRAY_DECLARATION -> TkArray . TkOBracket TkNum TkSoForth TkNum TkCBracket

    TkOBracket      shift and go to state 104


state 81

    (7) VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .

    TkSemicolon     reduce using rule 7 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkSkip          reduce using rule 7 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkId            reduce using rule 7 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkPrint         reduce using rule 7 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkDo            reduce using rule 7 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkFor           reduce using rule 7 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)
    TkIf            reduce using rule 7 (VARIABLE_DECLARATION -> TkId TkComma VARIABLE_DECLARATION .)


state 82

    (27) WRITE_ARRAY -> TkId TkOpenPar . E TkTwoPoints E TkClosePar
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 105
    READ_ARRAY                     shift and go to state 40

state 83

    (25) CREATE_ARRAY -> E TkComma . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 106
    READ_ARRAY                     shift and go to state 40

state 84

    (26) CREATE_ARRAY -> CREATE_ARRAY TkComma . E
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 107
    READ_ARRAY                     shift and go to state 40

state 85

    (28) WRITE_ARRAY -> WRITE_ARRAY TkOpenPar . E TkTwoPoints E TkClosePar
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 108
    READ_ARRAY                     shift and go to state 40

state 86

    (50) TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .

    TkConcat        reduce using rule 50 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkCBlock        reduce using rule 50 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkSemicolon     reduce using rule 50 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkOd            reduce using rule 50 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkFi            reduce using rule 50 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkGuard         reduce using rule 50 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)
    TkRof           reduce using rule 50 (TOPRINT -> TOPRINT TkConcat EXPRESSION_TO_PRINT .)


state 87

    (57) READ_ARRAY -> TkId TkOBracket E . TkCBracket
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkCBracket      shift and go to state 109
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 88

    (58) DO_LOOP -> TkDo E TkArrow LIST_INSTRUCTIONS . TkOd
    (13) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS . TkSemicolon INSTRUCTION

    TkOd            shift and go to state 110
    TkSemicolon     shift and go to state 22


state 89

    (29) E -> E TkMult E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 29 (E -> E TkMult E .)
    TkPlus          reduce using rule 29 (E -> E TkMult E .)
    TkMinus         reduce using rule 29 (E -> E TkMult E .)
    TkOr            reduce using rule 29 (E -> E TkMult E .)
    TkAnd           reduce using rule 29 (E -> E TkMult E .)
    TkLess          reduce using rule 29 (E -> E TkMult E .)
    TkLeq           reduce using rule 29 (E -> E TkMult E .)
    TkGeq           reduce using rule 29 (E -> E TkMult E .)
    TkGreater       reduce using rule 29 (E -> E TkMult E .)
    TkEqual         reduce using rule 29 (E -> E TkMult E .)
    TkNEqual        reduce using rule 29 (E -> E TkMult E .)
    TkComma         reduce using rule 29 (E -> E TkMult E .)
    TkCBlock        reduce using rule 29 (E -> E TkMult E .)
    TkSemicolon     reduce using rule 29 (E -> E TkMult E .)
    TkOd            reduce using rule 29 (E -> E TkMult E .)
    TkFi            reduce using rule 29 (E -> E TkMult E .)
    TkGuard         reduce using rule 29 (E -> E TkMult E .)
    TkRof           reduce using rule 29 (E -> E TkMult E .)
    TkClosePar      reduce using rule 29 (E -> E TkMult E .)
    TkCBracket      reduce using rule 29 (E -> E TkMult E .)
    TkTo            reduce using rule 29 (E -> E TkMult E .)
    TkTwoPoints     reduce using rule 29 (E -> E TkMult E .)
    TkMult          shift and go to state 57

  ! TkMult          [ reduce using rule 29 (E -> E TkMult E .) ]
  ! TkPlus          [ shift and go to state 58 ]
  ! TkMinus         [ shift and go to state 59 ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]
  ! TkLess          [ shift and go to state 62 ]
  ! TkLeq           [ shift and go to state 63 ]
  ! TkGeq           [ shift and go to state 64 ]
  ! TkGreater       [ shift and go to state 65 ]
  ! TkEqual         [ shift and go to state 66 ]
  ! TkNEqual        [ shift and go to state 67 ]


state 90

    (30) E -> E TkPlus E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 30 (E -> E TkPlus E .)
    TkPlus          reduce using rule 30 (E -> E TkPlus E .)
    TkMinus         reduce using rule 30 (E -> E TkPlus E .)
    TkOr            reduce using rule 30 (E -> E TkPlus E .)
    TkAnd           reduce using rule 30 (E -> E TkPlus E .)
    TkLess          reduce using rule 30 (E -> E TkPlus E .)
    TkLeq           reduce using rule 30 (E -> E TkPlus E .)
    TkGeq           reduce using rule 30 (E -> E TkPlus E .)
    TkGreater       reduce using rule 30 (E -> E TkPlus E .)
    TkEqual         reduce using rule 30 (E -> E TkPlus E .)
    TkNEqual        reduce using rule 30 (E -> E TkPlus E .)
    TkComma         reduce using rule 30 (E -> E TkPlus E .)
    TkCBlock        reduce using rule 30 (E -> E TkPlus E .)
    TkSemicolon     reduce using rule 30 (E -> E TkPlus E .)
    TkOd            reduce using rule 30 (E -> E TkPlus E .)
    TkFi            reduce using rule 30 (E -> E TkPlus E .)
    TkGuard         reduce using rule 30 (E -> E TkPlus E .)
    TkRof           reduce using rule 30 (E -> E TkPlus E .)
    TkClosePar      reduce using rule 30 (E -> E TkPlus E .)
    TkCBracket      reduce using rule 30 (E -> E TkPlus E .)
    TkTo            reduce using rule 30 (E -> E TkPlus E .)
    TkTwoPoints     reduce using rule 30 (E -> E TkPlus E .)
    TkMult          shift and go to state 57

  ! TkMult          [ reduce using rule 30 (E -> E TkPlus E .) ]
  ! TkPlus          [ shift and go to state 58 ]
  ! TkMinus         [ shift and go to state 59 ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]
  ! TkLess          [ shift and go to state 62 ]
  ! TkLeq           [ shift and go to state 63 ]
  ! TkGeq           [ shift and go to state 64 ]
  ! TkGreater       [ shift and go to state 65 ]
  ! TkEqual         [ shift and go to state 66 ]
  ! TkNEqual        [ shift and go to state 67 ]


state 91

    (31) E -> E TkMinus E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 31 (E -> E TkMinus E .)
    TkPlus          reduce using rule 31 (E -> E TkMinus E .)
    TkMinus         reduce using rule 31 (E -> E TkMinus E .)
    TkOr            reduce using rule 31 (E -> E TkMinus E .)
    TkAnd           reduce using rule 31 (E -> E TkMinus E .)
    TkLess          reduce using rule 31 (E -> E TkMinus E .)
    TkLeq           reduce using rule 31 (E -> E TkMinus E .)
    TkGeq           reduce using rule 31 (E -> E TkMinus E .)
    TkGreater       reduce using rule 31 (E -> E TkMinus E .)
    TkEqual         reduce using rule 31 (E -> E TkMinus E .)
    TkNEqual        reduce using rule 31 (E -> E TkMinus E .)
    TkComma         reduce using rule 31 (E -> E TkMinus E .)
    TkCBlock        reduce using rule 31 (E -> E TkMinus E .)
    TkSemicolon     reduce using rule 31 (E -> E TkMinus E .)
    TkOd            reduce using rule 31 (E -> E TkMinus E .)
    TkFi            reduce using rule 31 (E -> E TkMinus E .)
    TkGuard         reduce using rule 31 (E -> E TkMinus E .)
    TkRof           reduce using rule 31 (E -> E TkMinus E .)
    TkClosePar      reduce using rule 31 (E -> E TkMinus E .)
    TkCBracket      reduce using rule 31 (E -> E TkMinus E .)
    TkTo            reduce using rule 31 (E -> E TkMinus E .)
    TkTwoPoints     reduce using rule 31 (E -> E TkMinus E .)
    TkMult          shift and go to state 57

  ! TkMult          [ reduce using rule 31 (E -> E TkMinus E .) ]
  ! TkPlus          [ shift and go to state 58 ]
  ! TkMinus         [ shift and go to state 59 ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]
  ! TkLess          [ shift and go to state 62 ]
  ! TkLeq           [ shift and go to state 63 ]
  ! TkGeq           [ shift and go to state 64 ]
  ! TkGreater       [ shift and go to state 65 ]
  ! TkEqual         [ shift and go to state 66 ]
  ! TkNEqual        [ shift and go to state 67 ]


state 92

    (32) E -> E TkOr E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 32 (E -> E TkOr E .)
    TkOr            reduce using rule 32 (E -> E TkOr E .)
    TkComma         reduce using rule 32 (E -> E TkOr E .)
    TkCBlock        reduce using rule 32 (E -> E TkOr E .)
    TkSemicolon     reduce using rule 32 (E -> E TkOr E .)
    TkOd            reduce using rule 32 (E -> E TkOr E .)
    TkFi            reduce using rule 32 (E -> E TkOr E .)
    TkGuard         reduce using rule 32 (E -> E TkOr E .)
    TkRof           reduce using rule 32 (E -> E TkOr E .)
    TkClosePar      reduce using rule 32 (E -> E TkOr E .)
    TkCBracket      reduce using rule 32 (E -> E TkOr E .)
    TkTo            reduce using rule 32 (E -> E TkOr E .)
    TkTwoPoints     reduce using rule 32 (E -> E TkOr E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67

  ! TkMult          [ reduce using rule 32 (E -> E TkOr E .) ]
  ! TkPlus          [ reduce using rule 32 (E -> E TkOr E .) ]
  ! TkMinus         [ reduce using rule 32 (E -> E TkOr E .) ]
  ! TkAnd           [ reduce using rule 32 (E -> E TkOr E .) ]
  ! TkLess          [ reduce using rule 32 (E -> E TkOr E .) ]
  ! TkLeq           [ reduce using rule 32 (E -> E TkOr E .) ]
  ! TkGeq           [ reduce using rule 32 (E -> E TkOr E .) ]
  ! TkGreater       [ reduce using rule 32 (E -> E TkOr E .) ]
  ! TkEqual         [ reduce using rule 32 (E -> E TkOr E .) ]
  ! TkNEqual        [ reduce using rule 32 (E -> E TkOr E .) ]
  ! TkOr            [ shift and go to state 60 ]


state 93

    (33) E -> E TkAnd E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 33 (E -> E TkAnd E .)
    TkOr            reduce using rule 33 (E -> E TkAnd E .)
    TkAnd           reduce using rule 33 (E -> E TkAnd E .)
    TkComma         reduce using rule 33 (E -> E TkAnd E .)
    TkCBlock        reduce using rule 33 (E -> E TkAnd E .)
    TkSemicolon     reduce using rule 33 (E -> E TkAnd E .)
    TkOd            reduce using rule 33 (E -> E TkAnd E .)
    TkFi            reduce using rule 33 (E -> E TkAnd E .)
    TkGuard         reduce using rule 33 (E -> E TkAnd E .)
    TkRof           reduce using rule 33 (E -> E TkAnd E .)
    TkClosePar      reduce using rule 33 (E -> E TkAnd E .)
    TkCBracket      reduce using rule 33 (E -> E TkAnd E .)
    TkTo            reduce using rule 33 (E -> E TkAnd E .)
    TkTwoPoints     reduce using rule 33 (E -> E TkAnd E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67

  ! TkMult          [ reduce using rule 33 (E -> E TkAnd E .) ]
  ! TkPlus          [ reduce using rule 33 (E -> E TkAnd E .) ]
  ! TkMinus         [ reduce using rule 33 (E -> E TkAnd E .) ]
  ! TkLess          [ reduce using rule 33 (E -> E TkAnd E .) ]
  ! TkLeq           [ reduce using rule 33 (E -> E TkAnd E .) ]
  ! TkGeq           [ reduce using rule 33 (E -> E TkAnd E .) ]
  ! TkGreater       [ reduce using rule 33 (E -> E TkAnd E .) ]
  ! TkEqual         [ reduce using rule 33 (E -> E TkAnd E .) ]
  ! TkNEqual        [ reduce using rule 33 (E -> E TkAnd E .) ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]


state 94

    (34) E -> E TkLess E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 34 (E -> E TkLess E .)
    TkOr            reduce using rule 34 (E -> E TkLess E .)
    TkAnd           reduce using rule 34 (E -> E TkLess E .)
    TkLess          reduce using rule 34 (E -> E TkLess E .)
    TkLeq           reduce using rule 34 (E -> E TkLess E .)
    TkGeq           reduce using rule 34 (E -> E TkLess E .)
    TkGreater       reduce using rule 34 (E -> E TkLess E .)
    TkEqual         reduce using rule 34 (E -> E TkLess E .)
    TkNEqual        reduce using rule 34 (E -> E TkLess E .)
    TkComma         reduce using rule 34 (E -> E TkLess E .)
    TkCBlock        reduce using rule 34 (E -> E TkLess E .)
    TkSemicolon     reduce using rule 34 (E -> E TkLess E .)
    TkOd            reduce using rule 34 (E -> E TkLess E .)
    TkFi            reduce using rule 34 (E -> E TkLess E .)
    TkGuard         reduce using rule 34 (E -> E TkLess E .)
    TkRof           reduce using rule 34 (E -> E TkLess E .)
    TkClosePar      reduce using rule 34 (E -> E TkLess E .)
    TkCBracket      reduce using rule 34 (E -> E TkLess E .)
    TkTo            reduce using rule 34 (E -> E TkLess E .)
    TkTwoPoints     reduce using rule 34 (E -> E TkLess E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59

  ! TkMult          [ reduce using rule 34 (E -> E TkLess E .) ]
  ! TkPlus          [ reduce using rule 34 (E -> E TkLess E .) ]
  ! TkMinus         [ reduce using rule 34 (E -> E TkLess E .) ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]
  ! TkLess          [ shift and go to state 62 ]
  ! TkLeq           [ shift and go to state 63 ]
  ! TkGeq           [ shift and go to state 64 ]
  ! TkGreater       [ shift and go to state 65 ]
  ! TkEqual         [ shift and go to state 66 ]
  ! TkNEqual        [ shift and go to state 67 ]


state 95

    (35) E -> E TkLeq E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 35 (E -> E TkLeq E .)
    TkOr            reduce using rule 35 (E -> E TkLeq E .)
    TkAnd           reduce using rule 35 (E -> E TkLeq E .)
    TkLess          reduce using rule 35 (E -> E TkLeq E .)
    TkLeq           reduce using rule 35 (E -> E TkLeq E .)
    TkGeq           reduce using rule 35 (E -> E TkLeq E .)
    TkGreater       reduce using rule 35 (E -> E TkLeq E .)
    TkEqual         reduce using rule 35 (E -> E TkLeq E .)
    TkNEqual        reduce using rule 35 (E -> E TkLeq E .)
    TkComma         reduce using rule 35 (E -> E TkLeq E .)
    TkCBlock        reduce using rule 35 (E -> E TkLeq E .)
    TkSemicolon     reduce using rule 35 (E -> E TkLeq E .)
    TkOd            reduce using rule 35 (E -> E TkLeq E .)
    TkFi            reduce using rule 35 (E -> E TkLeq E .)
    TkGuard         reduce using rule 35 (E -> E TkLeq E .)
    TkRof           reduce using rule 35 (E -> E TkLeq E .)
    TkClosePar      reduce using rule 35 (E -> E TkLeq E .)
    TkCBracket      reduce using rule 35 (E -> E TkLeq E .)
    TkTo            reduce using rule 35 (E -> E TkLeq E .)
    TkTwoPoints     reduce using rule 35 (E -> E TkLeq E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59

  ! TkMult          [ reduce using rule 35 (E -> E TkLeq E .) ]
  ! TkPlus          [ reduce using rule 35 (E -> E TkLeq E .) ]
  ! TkMinus         [ reduce using rule 35 (E -> E TkLeq E .) ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]
  ! TkLess          [ shift and go to state 62 ]
  ! TkLeq           [ shift and go to state 63 ]
  ! TkGeq           [ shift and go to state 64 ]
  ! TkGreater       [ shift and go to state 65 ]
  ! TkEqual         [ shift and go to state 66 ]
  ! TkNEqual        [ shift and go to state 67 ]


state 96

    (36) E -> E TkGeq E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 36 (E -> E TkGeq E .)
    TkOr            reduce using rule 36 (E -> E TkGeq E .)
    TkAnd           reduce using rule 36 (E -> E TkGeq E .)
    TkLess          reduce using rule 36 (E -> E TkGeq E .)
    TkLeq           reduce using rule 36 (E -> E TkGeq E .)
    TkGeq           reduce using rule 36 (E -> E TkGeq E .)
    TkGreater       reduce using rule 36 (E -> E TkGeq E .)
    TkEqual         reduce using rule 36 (E -> E TkGeq E .)
    TkNEqual        reduce using rule 36 (E -> E TkGeq E .)
    TkComma         reduce using rule 36 (E -> E TkGeq E .)
    TkCBlock        reduce using rule 36 (E -> E TkGeq E .)
    TkSemicolon     reduce using rule 36 (E -> E TkGeq E .)
    TkOd            reduce using rule 36 (E -> E TkGeq E .)
    TkFi            reduce using rule 36 (E -> E TkGeq E .)
    TkGuard         reduce using rule 36 (E -> E TkGeq E .)
    TkRof           reduce using rule 36 (E -> E TkGeq E .)
    TkClosePar      reduce using rule 36 (E -> E TkGeq E .)
    TkCBracket      reduce using rule 36 (E -> E TkGeq E .)
    TkTo            reduce using rule 36 (E -> E TkGeq E .)
    TkTwoPoints     reduce using rule 36 (E -> E TkGeq E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59

  ! TkMult          [ reduce using rule 36 (E -> E TkGeq E .) ]
  ! TkPlus          [ reduce using rule 36 (E -> E TkGeq E .) ]
  ! TkMinus         [ reduce using rule 36 (E -> E TkGeq E .) ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]
  ! TkLess          [ shift and go to state 62 ]
  ! TkLeq           [ shift and go to state 63 ]
  ! TkGeq           [ shift and go to state 64 ]
  ! TkGreater       [ shift and go to state 65 ]
  ! TkEqual         [ shift and go to state 66 ]
  ! TkNEqual        [ shift and go to state 67 ]


state 97

    (37) E -> E TkGreater E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 37 (E -> E TkGreater E .)
    TkOr            reduce using rule 37 (E -> E TkGreater E .)
    TkAnd           reduce using rule 37 (E -> E TkGreater E .)
    TkLess          reduce using rule 37 (E -> E TkGreater E .)
    TkLeq           reduce using rule 37 (E -> E TkGreater E .)
    TkGeq           reduce using rule 37 (E -> E TkGreater E .)
    TkGreater       reduce using rule 37 (E -> E TkGreater E .)
    TkEqual         reduce using rule 37 (E -> E TkGreater E .)
    TkNEqual        reduce using rule 37 (E -> E TkGreater E .)
    TkComma         reduce using rule 37 (E -> E TkGreater E .)
    TkCBlock        reduce using rule 37 (E -> E TkGreater E .)
    TkSemicolon     reduce using rule 37 (E -> E TkGreater E .)
    TkOd            reduce using rule 37 (E -> E TkGreater E .)
    TkFi            reduce using rule 37 (E -> E TkGreater E .)
    TkGuard         reduce using rule 37 (E -> E TkGreater E .)
    TkRof           reduce using rule 37 (E -> E TkGreater E .)
    TkClosePar      reduce using rule 37 (E -> E TkGreater E .)
    TkCBracket      reduce using rule 37 (E -> E TkGreater E .)
    TkTo            reduce using rule 37 (E -> E TkGreater E .)
    TkTwoPoints     reduce using rule 37 (E -> E TkGreater E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59

  ! TkMult          [ reduce using rule 37 (E -> E TkGreater E .) ]
  ! TkPlus          [ reduce using rule 37 (E -> E TkGreater E .) ]
  ! TkMinus         [ reduce using rule 37 (E -> E TkGreater E .) ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]
  ! TkLess          [ shift and go to state 62 ]
  ! TkLeq           [ shift and go to state 63 ]
  ! TkGeq           [ shift and go to state 64 ]
  ! TkGreater       [ shift and go to state 65 ]
  ! TkEqual         [ shift and go to state 66 ]
  ! TkNEqual        [ shift and go to state 67 ]


state 98

    (38) E -> E TkEqual E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 38 (E -> E TkEqual E .)
    TkOr            reduce using rule 38 (E -> E TkEqual E .)
    TkAnd           reduce using rule 38 (E -> E TkEqual E .)
    TkEqual         reduce using rule 38 (E -> E TkEqual E .)
    TkNEqual        reduce using rule 38 (E -> E TkEqual E .)
    TkComma         reduce using rule 38 (E -> E TkEqual E .)
    TkCBlock        reduce using rule 38 (E -> E TkEqual E .)
    TkSemicolon     reduce using rule 38 (E -> E TkEqual E .)
    TkOd            reduce using rule 38 (E -> E TkEqual E .)
    TkFi            reduce using rule 38 (E -> E TkEqual E .)
    TkGuard         reduce using rule 38 (E -> E TkEqual E .)
    TkRof           reduce using rule 38 (E -> E TkEqual E .)
    TkClosePar      reduce using rule 38 (E -> E TkEqual E .)
    TkCBracket      reduce using rule 38 (E -> E TkEqual E .)
    TkTo            reduce using rule 38 (E -> E TkEqual E .)
    TkTwoPoints     reduce using rule 38 (E -> E TkEqual E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65

  ! TkMult          [ reduce using rule 38 (E -> E TkEqual E .) ]
  ! TkPlus          [ reduce using rule 38 (E -> E TkEqual E .) ]
  ! TkMinus         [ reduce using rule 38 (E -> E TkEqual E .) ]
  ! TkLess          [ reduce using rule 38 (E -> E TkEqual E .) ]
  ! TkLeq           [ reduce using rule 38 (E -> E TkEqual E .) ]
  ! TkGeq           [ reduce using rule 38 (E -> E TkEqual E .) ]
  ! TkGreater       [ reduce using rule 38 (E -> E TkEqual E .) ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]
  ! TkEqual         [ shift and go to state 66 ]
  ! TkNEqual        [ shift and go to state 67 ]


state 99

    (39) E -> E TkNEqual E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         reduce using rule 39 (E -> E TkNEqual E .)
    TkOr            reduce using rule 39 (E -> E TkNEqual E .)
    TkAnd           reduce using rule 39 (E -> E TkNEqual E .)
    TkEqual         reduce using rule 39 (E -> E TkNEqual E .)
    TkNEqual        reduce using rule 39 (E -> E TkNEqual E .)
    TkComma         reduce using rule 39 (E -> E TkNEqual E .)
    TkCBlock        reduce using rule 39 (E -> E TkNEqual E .)
    TkSemicolon     reduce using rule 39 (E -> E TkNEqual E .)
    TkOd            reduce using rule 39 (E -> E TkNEqual E .)
    TkFi            reduce using rule 39 (E -> E TkNEqual E .)
    TkGuard         reduce using rule 39 (E -> E TkNEqual E .)
    TkRof           reduce using rule 39 (E -> E TkNEqual E .)
    TkClosePar      reduce using rule 39 (E -> E TkNEqual E .)
    TkCBracket      reduce using rule 39 (E -> E TkNEqual E .)
    TkTo            reduce using rule 39 (E -> E TkNEqual E .)
    TkTwoPoints     reduce using rule 39 (E -> E TkNEqual E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65

  ! TkMult          [ reduce using rule 39 (E -> E TkNEqual E .) ]
  ! TkPlus          [ reduce using rule 39 (E -> E TkNEqual E .) ]
  ! TkMinus         [ reduce using rule 39 (E -> E TkNEqual E .) ]
  ! TkLess          [ reduce using rule 39 (E -> E TkNEqual E .) ]
  ! TkLeq           [ reduce using rule 39 (E -> E TkNEqual E .) ]
  ! TkGeq           [ reduce using rule 39 (E -> E TkNEqual E .) ]
  ! TkGreater       [ reduce using rule 39 (E -> E TkNEqual E .) ]
  ! TkOr            [ shift and go to state 60 ]
  ! TkAnd           [ shift and go to state 61 ]
  ! TkEqual         [ shift and go to state 66 ]
  ! TkNEqual        [ shift and go to state 67 ]


state 100

    (40) E -> TkOpenPar E TkClosePar .

    TkArrow         reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkMult          reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkPlus          reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkMinus         reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkOr            reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkAnd           reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkLess          reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkLeq           reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkGeq           reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkGreater       reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkEqual         reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkNEqual        reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkComma         reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkCBlock        reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkSemicolon     reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkOd            reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkFi            reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkGuard         reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkRof           reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkClosePar      reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkCBracket      reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkTo            reduce using rule 40 (E -> TkOpenPar E TkClosePar .)
    TkTwoPoints     reduce using rule 40 (E -> TkOpenPar E TkClosePar .)


state 101

    (59) FOR_LOOP -> TkFor TkId TkIn E . TkTo E TkArrow LIST_INSTRUCTIONS TkRof
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkTo            shift and go to state 111
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 102

    (62) GUARD -> GUARD TkGuard E . TkArrow LIST_INSTRUCTIONS
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         shift and go to state 112
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 103

    (61) GUARD -> E TkArrow LIST_INSTRUCTIONS .
    (13) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS . TkSemicolon INSTRUCTION

    TkFi            reduce using rule 61 (GUARD -> E TkArrow LIST_INSTRUCTIONS .)
    TkGuard         reduce using rule 61 (GUARD -> E TkArrow LIST_INSTRUCTIONS .)
    TkSemicolon     shift and go to state 22


state 104

    (11) ARRAY_DECLARATION -> TkArray TkOBracket . TkNum TkSoForth TkNum TkCBracket

    TkNum           shift and go to state 113


state 105

    (27) WRITE_ARRAY -> TkId TkOpenPar E . TkTwoPoints E TkClosePar
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkTwoPoints     shift and go to state 114
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 106

    (25) CREATE_ARRAY -> E TkComma E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkComma         reduce using rule 25 (CREATE_ARRAY -> E TkComma E .)
    TkCBlock        reduce using rule 25 (CREATE_ARRAY -> E TkComma E .)
    TkSemicolon     reduce using rule 25 (CREATE_ARRAY -> E TkComma E .)
    TkOd            reduce using rule 25 (CREATE_ARRAY -> E TkComma E .)
    TkFi            reduce using rule 25 (CREATE_ARRAY -> E TkComma E .)
    TkGuard         reduce using rule 25 (CREATE_ARRAY -> E TkComma E .)
    TkRof           reduce using rule 25 (CREATE_ARRAY -> E TkComma E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 107

    (26) CREATE_ARRAY -> CREATE_ARRAY TkComma E .
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkComma         reduce using rule 26 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkCBlock        reduce using rule 26 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkSemicolon     reduce using rule 26 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkOd            reduce using rule 26 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkFi            reduce using rule 26 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkGuard         reduce using rule 26 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkRof           reduce using rule 26 (CREATE_ARRAY -> CREATE_ARRAY TkComma E .)
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 108

    (28) WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E . TkTwoPoints E TkClosePar
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkTwoPoints     shift and go to state 115
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 109

    (57) READ_ARRAY -> TkId TkOBracket E TkCBracket .

    TkConcat        reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkCBlock        reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkSemicolon     reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkOd            reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkFi            reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkGuard         reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkRof           reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkArrow         reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkMult          reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkPlus          reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkMinus         reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkOr            reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkAnd           reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkLess          reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkLeq           reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkGeq           reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkGreater       reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkEqual         reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkNEqual        reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkComma         reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkClosePar      reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkCBracket      reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkTo            reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)
    TkTwoPoints     reduce using rule 57 (READ_ARRAY -> TkId TkOBracket E TkCBracket .)


state 110

    (58) DO_LOOP -> TkDo E TkArrow LIST_INSTRUCTIONS TkOd .

    TkCBlock        reduce using rule 58 (DO_LOOP -> TkDo E TkArrow LIST_INSTRUCTIONS TkOd .)
    TkSemicolon     reduce using rule 58 (DO_LOOP -> TkDo E TkArrow LIST_INSTRUCTIONS TkOd .)
    TkOd            reduce using rule 58 (DO_LOOP -> TkDo E TkArrow LIST_INSTRUCTIONS TkOd .)
    TkFi            reduce using rule 58 (DO_LOOP -> TkDo E TkArrow LIST_INSTRUCTIONS TkOd .)
    TkGuard         reduce using rule 58 (DO_LOOP -> TkDo E TkArrow LIST_INSTRUCTIONS TkOd .)
    TkRof           reduce using rule 58 (DO_LOOP -> TkDo E TkArrow LIST_INSTRUCTIONS TkOd .)


state 111

    (59) FOR_LOOP -> TkFor TkId TkIn E TkTo . E TkArrow LIST_INSTRUCTIONS TkRof
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 116
    READ_ARRAY                     shift and go to state 40

state 112

    (62) GUARD -> GUARD TkGuard E TkArrow . LIST_INSTRUCTIONS
    (12) LIST_INSTRUCTIONS -> . INSTRUCTION
    (13) LIST_INSTRUCTIONS -> . LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
    (14) INSTRUCTION -> . ASIG
    (15) INSTRUCTION -> . PRINT
    (16) INSTRUCTION -> . DO_LOOP
    (17) INSTRUCTION -> . FOR_LOOP
    (18) INSTRUCTION -> . CONDITIONAL
    (19) INSTRUCTION -> . TkSkip
    (20) ASIG -> . TkId TkAsig EXPRESSION
    (48) PRINT -> . TkPrint TOPRINT
    (58) DO_LOOP -> . TkDo E TkArrow LIST_INSTRUCTIONS TkOd
    (59) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof
    (60) CONDITIONAL -> . TkIf GUARD TkFi

    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkDo            shift and go to state 15
    TkFor           shift and go to state 16
    TkIf            shift and go to state 17

    LIST_INSTRUCTIONS              shift and go to state 117
    INSTRUCTION                    shift and go to state 6
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    DO_LOOP                        shift and go to state 9
    FOR_LOOP                       shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 113

    (11) ARRAY_DECLARATION -> TkArray TkOBracket TkNum . TkSoForth TkNum TkCBracket

    TkSoForth       shift and go to state 118


state 114

    (27) WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints . E TkClosePar
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 119
    READ_ARRAY                     shift and go to state 40

state 115

    (28) WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints . E TkClosePar
    (29) E -> . E TkMult E
    (30) E -> . E TkPlus E
    (31) E -> . E TkMinus E
    (32) E -> . E TkOr E
    (33) E -> . E TkAnd E
    (34) E -> . E TkLess E
    (35) E -> . E TkLeq E
    (36) E -> . E TkGeq E
    (37) E -> . E TkGreater E
    (38) E -> . E TkEqual E
    (39) E -> . E TkNEqual E
    (40) E -> . TkOpenPar E TkClosePar
    (41) E -> . TkNot E
    (42) E -> . TkMinus E
    (43) E -> . TkNum
    (44) E -> . TkId
    (45) E -> . TkTrue
    (46) E -> . TkFalse
    (47) E -> . READ_ARRAY
    (57) READ_ARRAY -> . TkId TkOBracket E TkCBracket

    TkOpenPar       shift and go to state 34
    TkNot           shift and go to state 35
    TkMinus         shift and go to state 33
    TkNum           shift and go to state 36
    TkId            shift and go to state 37
    TkTrue          shift and go to state 38
    TkFalse         shift and go to state 39

    E                              shift and go to state 120
    READ_ARRAY                     shift and go to state 40

state 116

    (59) FOR_LOOP -> TkFor TkId TkIn E TkTo E . TkArrow LIST_INSTRUCTIONS TkRof
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkArrow         shift and go to state 121
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 117

    (62) GUARD -> GUARD TkGuard E TkArrow LIST_INSTRUCTIONS .
    (13) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS . TkSemicolon INSTRUCTION

    TkFi            reduce using rule 62 (GUARD -> GUARD TkGuard E TkArrow LIST_INSTRUCTIONS .)
    TkGuard         reduce using rule 62 (GUARD -> GUARD TkGuard E TkArrow LIST_INSTRUCTIONS .)
    TkSemicolon     shift and go to state 22


state 118

    (11) ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth . TkNum TkCBracket

    TkNum           shift and go to state 122


state 119

    (27) WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E . TkClosePar
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkClosePar      shift and go to state 123
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 120

    (28) WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E . TkClosePar
    (29) E -> E . TkMult E
    (30) E -> E . TkPlus E
    (31) E -> E . TkMinus E
    (32) E -> E . TkOr E
    (33) E -> E . TkAnd E
    (34) E -> E . TkLess E
    (35) E -> E . TkLeq E
    (36) E -> E . TkGeq E
    (37) E -> E . TkGreater E
    (38) E -> E . TkEqual E
    (39) E -> E . TkNEqual E

    TkClosePar      shift and go to state 124
    TkMult          shift and go to state 57
    TkPlus          shift and go to state 58
    TkMinus         shift and go to state 59
    TkOr            shift and go to state 60
    TkAnd           shift and go to state 61
    TkLess          shift and go to state 62
    TkLeq           shift and go to state 63
    TkGeq           shift and go to state 64
    TkGreater       shift and go to state 65
    TkEqual         shift and go to state 66
    TkNEqual        shift and go to state 67


state 121

    (59) FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow . LIST_INSTRUCTIONS TkRof
    (12) LIST_INSTRUCTIONS -> . INSTRUCTION
    (13) LIST_INSTRUCTIONS -> . LIST_INSTRUCTIONS TkSemicolon INSTRUCTION
    (14) INSTRUCTION -> . ASIG
    (15) INSTRUCTION -> . PRINT
    (16) INSTRUCTION -> . DO_LOOP
    (17) INSTRUCTION -> . FOR_LOOP
    (18) INSTRUCTION -> . CONDITIONAL
    (19) INSTRUCTION -> . TkSkip
    (20) ASIG -> . TkId TkAsig EXPRESSION
    (48) PRINT -> . TkPrint TOPRINT
    (58) DO_LOOP -> . TkDo E TkArrow LIST_INSTRUCTIONS TkOd
    (59) FOR_LOOP -> . TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof
    (60) CONDITIONAL -> . TkIf GUARD TkFi

    TkSkip          shift and go to state 12
    TkId            shift and go to state 13
    TkPrint         shift and go to state 14
    TkDo            shift and go to state 15
    TkFor           shift and go to state 16
    TkIf            shift and go to state 17

    LIST_INSTRUCTIONS              shift and go to state 125
    INSTRUCTION                    shift and go to state 6
    ASIG                           shift and go to state 7
    PRINT                          shift and go to state 8
    DO_LOOP                        shift and go to state 9
    FOR_LOOP                       shift and go to state 10
    CONDITIONAL                    shift and go to state 11

state 122

    (11) ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth TkNum . TkCBracket

    TkCBracket      shift and go to state 126


state 123

    (27) WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .

    TkOpenPar       reduce using rule 27 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkCBlock        reduce using rule 27 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkSemicolon     reduce using rule 27 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkOd            reduce using rule 27 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkFi            reduce using rule 27 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkGuard         reduce using rule 27 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)
    TkRof           reduce using rule 27 (WRITE_ARRAY -> TkId TkOpenPar E TkTwoPoints E TkClosePar .)


state 124

    (28) WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .

    TkOpenPar       reduce using rule 28 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkCBlock        reduce using rule 28 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkSemicolon     reduce using rule 28 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkOd            reduce using rule 28 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkFi            reduce using rule 28 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkGuard         reduce using rule 28 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)
    TkRof           reduce using rule 28 (WRITE_ARRAY -> WRITE_ARRAY TkOpenPar E TkTwoPoints E TkClosePar .)


state 125

    (59) FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS . TkRof
    (13) LIST_INSTRUCTIONS -> LIST_INSTRUCTIONS . TkSemicolon INSTRUCTION

    TkRof           shift and go to state 127
    TkSemicolon     shift and go to state 22


state 126

    (11) ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .

    TkSemicolon     reduce using rule 11 (ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkSkip          reduce using rule 11 (ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkId            reduce using rule 11 (ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkPrint         reduce using rule 11 (ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkDo            reduce using rule 11 (ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkFor           reduce using rule 11 (ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkIf            reduce using rule 11 (ARRAY_DECLARATION -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)


state 127

    (59) FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof .

    TkCBlock        reduce using rule 59 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof .)
    TkSemicolon     reduce using rule 59 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof .)
    TkOd            reduce using rule 59 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof .)
    TkFi            reduce using rule 59 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof .)
    TkGuard         reduce using rule 59 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof .)
    TkRof           reduce using rule 59 (FOR_LOOP -> TkFor TkId TkIn E TkTo E TkArrow LIST_INSTRUCTIONS TkRof .)

